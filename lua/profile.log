SCRIPT  /usr/share/nvim/runtime/syntax/lua.vim
Sourced 6 times
Total time:   0.004924
 Self time:   0.004884

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Lua 4.0, Lua 5.0, Lua 5.1 and Lua 5.2
                            " Maintainer:	Marcus Aurelius Farias <masserahguard-lua 'at' yahoo com>
                            " First Author:	Carlos Augusto Teixeira Mendes <cmendes 'at' inf puc-rio br>
                            " Last Change:	2022 Mar 31
                            " Options:	lua_version = 4 or 5
                            "		lua_subversion = 0 (4.0, 5.0) or 1 (5.1) or 2 (5.2)
                            "		default 5.2
                            
                            " quit when a syntax file was already loaded
    6              0.000034 if exists("b:current_syntax")
                              finish
    6              0.000004 endif
                            
    6              0.000047 let s:cpo_save = &cpo
    6   0.000072   0.000051 set cpo&vim
                            
    6              0.000015 if !exists("lua_version")
                              " Default is lua 5.2
                              let lua_version = 5
                              let lua_subversion = 2
    6              0.000014 elseif !exists("lua_subversion")
                              " lua_version exists, but lua_subversion doesn't. So, set it to 0
                              let lua_subversion = 0
    6              0.000003 endif
                            
    6              0.000005 syn case match
                            
                            " syncing method
    6              0.000010 syn sync minlines=100
                            
                            " Comments
    6              0.000019 syn keyword luaTodo            contained TODO FIXME XXX
    6              0.000053 syn match   luaComment         "--.*$" contains=luaTodo,@Spell
    6              0.000015 if lua_version == 5 && lua_subversion == 0
                              syn region luaComment        matchgroup=luaComment start="--\[\[" end="\]\]" contains=luaTodo,luaInnerComment,@Spell
                              syn region luaInnerComment   contained transparent start="\[\[" end="\]\]"
    6              0.000016 elseif lua_version > 5 || (lua_version == 5 && lua_subversion >= 1)
                              " Comments in Lua 5.1: --[[ ... ]], [=[ ... ]=], [===[ ... ]===], etc.
    6              0.000047   syn region luaComment        matchgroup=luaComment start="--\[\z(=*\)\[" end="\]\z1\]" contains=luaTodo,@Spell
    6              0.000004 endif
                            
                            " First line may start with #!
    6              0.000017 syn match luaComment "\%^#!.*"
                            
                            " catch errors caused by wrong parenthesis and wrong curly brackets or
                            " keywords placed outside their respective blocks
    6              0.000058 syn region luaParen      transparent                     start='(' end=')' contains=ALLBUT,luaParenError,luaTodo,luaSpecial,luaIfThen,luaElseifThen,luaElse,luaThenEnd,luaBlock,luaLoopBlock,luaIn,luaStatement
    6              0.000051 syn region luaTableBlock transparent matchgroup=luaTable start="{" end="}" contains=ALLBUT,luaBraceError,luaTodo,luaSpecial,luaIfThen,luaElseifThen,luaElse,luaThenEnd,luaBlock,luaLoopBlock,luaIn,luaStatement
                            
    6              0.000012 syn match  luaParenError ")"
    6              0.000013 syn match  luaBraceError "}"
    6              0.000038 syn match  luaError "\<\%(end\|else\|elseif\|then\|until\|in\)\>"
                            
                            " function ... end
    6              0.000046 syn region luaFunctionBlock transparent matchgroup=luaFunction start="\<function\>" end="\<end\>" contains=ALLBUT,luaTodo,luaSpecial,luaElseifThen,luaElse,luaThenEnd,luaIn
                            
                            " if ... then
    6              0.000048 syn region luaIfThen transparent matchgroup=luaCond start="\<if\>" end="\<then\>"me=e-4           contains=ALLBUT,luaTodo,luaSpecial,luaElseifThen,luaElse,luaIn nextgroup=luaThenEnd skipwhite skipempty
                            
                            " then ... end
    6              0.000034 syn region luaThenEnd contained transparent matchgroup=luaCond start="\<then\>" end="\<end\>" contains=ALLBUT,luaTodo,luaSpecial,luaThenEnd,luaIn
                            
                            " elseif ... then
    6              0.000038 syn region luaElseifThen contained transparent matchgroup=luaCond start="\<elseif\>" end="\<then\>" contains=ALLBUT,luaTodo,luaSpecial,luaElseifThen,luaElse,luaThenEnd,luaIn
                            
                            " else
    6              0.000009 syn keyword luaElse contained else
                            
                            " do ... end
    6              0.000040 syn region luaBlock transparent matchgroup=luaStatement start="\<do\>" end="\<end\>"          contains=ALLBUT,luaTodo,luaSpecial,luaElseifThen,luaElse,luaThenEnd,luaIn
                            
                            " repeat ... until
    6              0.000041 syn region luaLoopBlock transparent matchgroup=luaRepeat start="\<repeat\>" end="\<until\>"   contains=ALLBUT,luaTodo,luaSpecial,luaElseifThen,luaElse,luaThenEnd,luaIn
                            
                            " while ... do
    6              0.000048 syn region luaLoopBlock transparent matchgroup=luaRepeat start="\<while\>" end="\<do\>"me=e-2 contains=ALLBUT,luaTodo,luaSpecial,luaIfThen,luaElseifThen,luaElse,luaThenEnd,luaIn nextgroup=luaBlock skipwhite skipempty
                            
                            " for ... do and for ... in ... do
    6              0.000042 syn region luaLoopBlock transparent matchgroup=luaRepeat start="\<for\>" end="\<do\>"me=e-2   contains=ALLBUT,luaTodo,luaSpecial,luaIfThen,luaElseifThen,luaElse,luaThenEnd nextgroup=luaBlock skipwhite skipempty
                            
    6              0.000008 syn keyword luaIn contained in
                            
                            " other keywords
    6              0.000012 syn keyword luaStatement return local break
    6              0.000016 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 2)
    6              0.000009   syn keyword luaStatement goto
    6              0.000019   syn match luaLabel "::\I\i*::"
    6              0.000004 endif
    6              0.000013 syn keyword luaOperator and or not
    6              0.000009 syn keyword luaConstant nil
    6              0.000029 if lua_version > 4
    6              0.000013   syn keyword luaConstant true false
    6              0.000003 endif
                            
                            " Strings
    6              0.000006 if lua_version < 5
                              syn match  luaSpecial contained "\\[\\abfnrtv\'\"]\|\\[[:digit:]]\{,3}"
    6              0.000008 elseif lua_version == 5
    6              0.000007   if lua_subversion == 0
                                syn match  luaSpecial contained #\\[\\abfnrtv'"[\]]\|\\[[:digit:]]\{,3}#
                                syn region luaString2 matchgroup=luaString start=+\[\[+ end=+\]\]+ contains=luaString2,@Spell
    6              0.000004   else
    6              0.000007     if lua_subversion == 1
                                  syn match  luaSpecial contained #\\[\\abfnrtv'"]\|\\[[:digit:]]\{,3}#
    6              0.000005     else " Lua 5.2
    6              0.000036       syn match  luaSpecial contained #\\[\\abfnrtvz'"]\|\\x[[:xdigit:]]\{2}\|\\[[:digit:]]\{,3}#
    6              0.000004     endif
    6              0.000039     syn region luaString2 matchgroup=luaString start="\[\z(=*\)\[" end="\]\z1\]" contains=@Spell
    6              0.000003   endif
    6              0.000003 endif
    6              0.000038 syn region luaString  start=+'+ end=+'+ skip=+\\\\\|\\'+ contains=luaSpecial,@Spell
    6              0.000033 syn region luaString  start=+"+ end=+"+ skip=+\\\\\|\\"+ contains=luaSpecial,@Spell
                            
                            " integer number
    6              0.000018 syn match luaNumber "\<\d\+\>"
                            " floating point number, with dot, optional exponent
    6              0.000041 syn match luaNumber  "\<\d\+\.\d*\%([eE][-+]\=\d\+\)\=\>"
                            " floating point number, starting with a dot, optional exponent
    6              0.000023 syn match luaNumber  "\.\d\+\%([eE][-+]\=\d\+\)\=\>"
                            " floating point number, without dot, with exponent
    6              0.000019 syn match luaNumber  "\<\d\+[eE][-+]\=\d\+\>"
                            
                            " hex numbers
    6              0.000008 if lua_version >= 5
    6              0.000006   if lua_subversion == 1
                                syn match luaNumber "\<0[xX]\x\+\>"
    6              0.000008   elseif lua_subversion >= 2
    6              0.000030     syn match luaNumber "\<0[xX][[:xdigit:].]\+\%([pP][-+]\=\d\+\)\=\>"
    6              0.000003   endif
    6              0.000003 endif
                            
    6              0.000017 syn keyword luaFunc assert collectgarbage dofile error next
    6              0.000016 syn keyword luaFunc print rawget rawset tonumber tostring type _VERSION
                            
    6              0.000006 if lua_version == 4
                              syn keyword luaFunc _ALERT _ERRORMESSAGE gcinfo
                              syn keyword luaFunc call copytagmethods dostring
                              syn keyword luaFunc foreach foreachi getglobal getn
                              syn keyword luaFunc gettagmethod globals newtag
                              syn keyword luaFunc setglobal settag settagmethod sort
                              syn keyword luaFunc tag tinsert tremove
                              syn keyword luaFunc _INPUT _OUTPUT _STDIN _STDOUT _STDERR
                              syn keyword luaFunc openfile closefile flush seek
                              syn keyword luaFunc setlocale execute remove rename tmpname
                              syn keyword luaFunc getenv date clock exit
                              syn keyword luaFunc readfrom writeto appendto read write
                              syn keyword luaFunc PI abs sin cos tan asin
                              syn keyword luaFunc acos atan atan2 ceil floor
                              syn keyword luaFunc mod frexp ldexp sqrt min max log
                              syn keyword luaFunc log10 exp deg rad random
                              syn keyword luaFunc randomseed strlen strsub strlower strupper
                              syn keyword luaFunc strchar strrep ascii strbyte
                              syn keyword luaFunc format strfind gsub
                              syn keyword luaFunc getinfo getlocal setlocal setcallhook setlinehook
    6              0.000006 elseif lua_version == 5
    6              0.000011   syn keyword luaFunc getmetatable setmetatable
    6              0.000010   syn keyword luaFunc ipairs pairs
    6              0.000009   syn keyword luaFunc pcall xpcall
    6              0.000011   syn keyword luaFunc _G loadfile rawequal require
    6              0.000006   if lua_subversion == 0
                                syn keyword luaFunc getfenv setfenv
                                syn keyword luaFunc loadstring unpack
                                syn keyword luaFunc gcinfo loadlib LUA_PATH _LOADED _REQUIREDNAME
    6              0.000003   else
    6              0.000010     syn keyword luaFunc load select
    6              0.000021     syn match   luaFunc /\<package\.cpath\>/
    6              0.000022     syn match   luaFunc /\<package\.loaded\>/
    6              0.000018     syn match   luaFunc /\<package\.loadlib\>/
    6              0.000018     syn match   luaFunc /\<package\.path\>/
    6              0.000006     if lua_subversion == 1
                                  syn keyword luaFunc getfenv setfenv
                                  syn keyword luaFunc loadstring module unpack
                                  syn match   luaFunc /\<package\.loaders\>/
                                  syn match   luaFunc /\<package\.preload\>/
                                  syn match   luaFunc /\<package\.seeall\>/
    6              0.000007     elseif lua_subversion == 2
    6              0.000010       syn keyword luaFunc _ENV rawlen
    6              0.000017       syn match   luaFunc /\<package\.config\>/
    6              0.000017       syn match   luaFunc /\<package\.preload\>/
    6              0.000018       syn match   luaFunc /\<package\.searchers\>/
    6              0.000019       syn match   luaFunc /\<package\.searchpath\>/
    6              0.000017       syn match   luaFunc /\<bit32\.arshift\>/
    6              0.000016       syn match   luaFunc /\<bit32\.band\>/
    6              0.000016       syn match   luaFunc /\<bit32\.bnot\>/
    6              0.000015       syn match   luaFunc /\<bit32\.bor\>/
    6              0.000017       syn match   luaFunc /\<bit32\.btest\>/
    6              0.000016       syn match   luaFunc /\<bit32\.bxor\>/
    6              0.000034       syn match   luaFunc /\<bit32\.extract\>/
    6              0.000024       syn match   luaFunc /\<bit32\.lrotate\>/
    6              0.000016       syn match   luaFunc /\<bit32\.lshift\>/
    6              0.000016       syn match   luaFunc /\<bit32\.replace\>/
    6              0.000017       syn match   luaFunc /\<bit32\.rrotate\>/
    6              0.000016       syn match   luaFunc /\<bit32\.rshift\>/
    6              0.000003     endif
    6              0.000018     syn match luaFunc /\<coroutine\.running\>/
    6              0.000003   endif
    6              0.000018   syn match   luaFunc /\<coroutine\.create\>/
    6              0.000023   syn match   luaFunc /\<coroutine\.resume\>/
    6              0.000018   syn match   luaFunc /\<coroutine\.status\>/
    6              0.000017   syn match   luaFunc /\<coroutine\.wrap\>/
    6              0.000017   syn match   luaFunc /\<coroutine\.yield\>/
    6              0.000015   syn match   luaFunc /\<string\.byte\>/
    6              0.000015   syn match   luaFunc /\<string\.char\>/
    6              0.000015   syn match   luaFunc /\<string\.dump\>/
    6              0.000015   syn match   luaFunc /\<string\.find\>/
    6              0.000016   syn match   luaFunc /\<string\.format\>/
    6              0.000015   syn match   luaFunc /\<string\.gsub\>/
    6              0.000015   syn match   luaFunc /\<string\.len\>/
    6              0.000016   syn match   luaFunc /\<string\.lower\>/
    6              0.000015   syn match   luaFunc /\<string\.rep\>/
    6              0.000015   syn match   luaFunc /\<string\.sub\>/
    6              0.000016   syn match   luaFunc /\<string\.upper\>/
    6              0.000007   if lua_subversion == 0
                                syn match luaFunc /\<string\.gfind\>/
    6              0.000003   else
    6              0.000018     syn match luaFunc /\<string\.gmatch\>/
    6              0.000016     syn match luaFunc /\<string\.match\>/
    6              0.000016     syn match luaFunc /\<string\.reverse\>/
    6              0.000003   endif
    6              0.000006   if lua_subversion == 0
                                syn match luaFunc /\<table\.getn\>/
                                syn match luaFunc /\<table\.setn\>/
                                syn match luaFunc /\<table\.foreach\>/
                                syn match luaFunc /\<table\.foreachi\>/
    6              0.000006   elseif lua_subversion == 1
                                syn match luaFunc /\<table\.maxn\>/
    6              0.000006   elseif lua_subversion == 2
    6              0.000015     syn match luaFunc /\<table\.pack\>/
    6              0.000016     syn match luaFunc /\<table\.unpack\>/
    6              0.000003   endif
    6              0.000017   syn match   luaFunc /\<table\.concat\>/
    6              0.000016   syn match   luaFunc /\<table\.sort\>/
    6              0.000015   syn match   luaFunc /\<table\.insert\>/
    6              0.000015   syn match   luaFunc /\<table\.remove\>/
    6              0.000014   syn match   luaFunc /\<math\.abs\>/
    6              0.000014   syn match   luaFunc /\<math\.acos\>/
    6              0.000014   syn match   luaFunc /\<math\.asin\>/
    6              0.000015   syn match   luaFunc /\<math\.atan\>/
    6              0.000015   syn match   luaFunc /\<math\.atan2\>/
    6              0.000015   syn match   luaFunc /\<math\.ceil\>/
    6              0.000014   syn match   luaFunc /\<math\.sin\>/
    6              0.000014   syn match   luaFunc /\<math\.cos\>/
    6              0.000021   syn match   luaFunc /\<math\.tan\>/
    6              0.000016   syn match   luaFunc /\<math\.deg\>/
    6              0.000014   syn match   luaFunc /\<math\.exp\>/
    6              0.000015   syn match   luaFunc /\<math\.floor\>/
    6              0.000015   syn match   luaFunc /\<math\.log\>/
    6              0.000014   syn match   luaFunc /\<math\.max\>/
    6              0.000014   syn match   luaFunc /\<math\.min\>/
    6              0.000006   if lua_subversion == 0
                                syn match luaFunc /\<math\.mod\>/
                                syn match luaFunc /\<math\.log10\>/
    6              0.000003   else
    6              0.000006     if lua_subversion == 1
                                  syn match luaFunc /\<math\.log10\>/
    6              0.000003     endif
    6              0.000015     syn match luaFunc /\<math\.huge\>/
    6              0.000015     syn match luaFunc /\<math\.fmod\>/
    6              0.000015     syn match luaFunc /\<math\.modf\>/
    6              0.000014     syn match luaFunc /\<math\.cosh\>/
    6              0.000014     syn match luaFunc /\<math\.sinh\>/
    6              0.000014     syn match luaFunc /\<math\.tanh\>/
    6              0.000003   endif
    6              0.000014   syn match   luaFunc /\<math\.pow\>/
    6              0.000014   syn match   luaFunc /\<math\.rad\>/
    6              0.000015   syn match   luaFunc /\<math\.sqrt\>/
    6              0.000015   syn match   luaFunc /\<math\.frexp\>/
    6              0.000015   syn match   luaFunc /\<math\.ldexp\>/
    6              0.000015   syn match   luaFunc /\<math\.random\>/
    6              0.000017   syn match   luaFunc /\<math\.randomseed\>/
    6              0.000014   syn match   luaFunc /\<math\.pi\>/
    6              0.000014   syn match   luaFunc /\<io\.close\>/
    6              0.000014   syn match   luaFunc /\<io\.flush\>/
    6              0.000014   syn match   luaFunc /\<io\.input\>/
    6              0.000015   syn match   luaFunc /\<io\.lines\>/
    6              0.000014   syn match   luaFunc /\<io\.open\>/
    6              0.000014   syn match   luaFunc /\<io\.output\>/
    6              0.000013   syn match   luaFunc /\<io\.popen\>/
    6              0.000014   syn match   luaFunc /\<io\.read\>/
    6              0.000014   syn match   luaFunc /\<io\.stderr\>/
    6              0.000014   syn match   luaFunc /\<io\.stdin\>/
    6              0.000014   syn match   luaFunc /\<io\.stdout\>/
    6              0.000015   syn match   luaFunc /\<io\.tmpfile\>/
    6              0.000014   syn match   luaFunc /\<io\.type\>/
    6              0.000014   syn match   luaFunc /\<io\.write\>/
    6              0.000014   syn match   luaFunc /\<os\.clock\>/
    6              0.000013   syn match   luaFunc /\<os\.date\>/
    6              0.000017   syn match   luaFunc /\<os\.difftime\>/
    6              0.000015   syn match   luaFunc /\<os\.execute\>/
    6              0.000013   syn match   luaFunc /\<os\.exit\>/
    6              0.000015   syn match   luaFunc /\<os\.getenv\>/
    6              0.000014   syn match   luaFunc /\<os\.remove\>/
    6              0.000014   syn match   luaFunc /\<os\.rename\>/
    6              0.000016   syn match   luaFunc /\<os\.setlocale\>/
    6              0.000014   syn match   luaFunc /\<os\.time\>/
    6              0.000015   syn match   luaFunc /\<os\.tmpname\>/
    6              0.000015   syn match   luaFunc /\<debug\.debug\>/
    6              0.000031   syn match   luaFunc /\<debug\.gethook\>/
    6              0.000024   syn match   luaFunc /\<debug\.getinfo\>/
    6              0.000018   syn match   luaFunc /\<debug\.getlocal\>/
    6              0.000017   syn match   luaFunc /\<debug\.getupvalue\>/
    6              0.000016   syn match   luaFunc /\<debug\.setlocal\>/
    6              0.000017   syn match   luaFunc /\<debug\.setupvalue\>/
    6              0.000016   syn match   luaFunc /\<debug\.sethook\>/
    6              0.000017   syn match   luaFunc /\<debug\.traceback\>/
    6              0.000007   if lua_subversion == 1
                                syn match luaFunc /\<debug\.getfenv\>/
                                syn match luaFunc /\<debug\.setfenv\>/
                                syn match luaFunc /\<debug\.getmetatable\>/
                                syn match luaFunc /\<debug\.setmetatable\>/
                                syn match luaFunc /\<debug\.getregistry\>/
    6              0.000007   elseif lua_subversion == 2
    6              0.000018     syn match luaFunc /\<debug\.getmetatable\>/
    6              0.000018     syn match luaFunc /\<debug\.setmetatable\>/
    6              0.000023     syn match luaFunc /\<debug\.getregistry\>/
    6              0.000018     syn match luaFunc /\<debug\.getuservalue\>/
    6              0.000017     syn match luaFunc /\<debug\.setuservalue\>/
    6              0.000017     syn match luaFunc /\<debug\.upvalueid\>/
    6              0.000017     syn match luaFunc /\<debug\.upvaluejoin\>/
    6              0.000003   endif
    6              0.000006   if lua_subversion >= 3
                                "https://www.lua.org/manual/5.3/manual.html#6.5
                                syn match luaFunc /\<utf8\.char\>/
                                syn match luaFunc /\<utf8\.charpattern\>/
                                syn match luaFunc /\<utf8\.codes\>/
                                syn match luaFunc /\<utf8\.codepoint\>/
                                syn match luaFunc /\<utf8\.len\>/
                                syn match luaFunc /\<utf8\.offset\>/
    6              0.000004   endif
    6              0.000003 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    6              0.000012 hi def link luaStatement		Statement
    6              0.000008 hi def link luaRepeat		Repeat
    6              0.000005 hi def link luaFor			Repeat
    6              0.000006 hi def link luaString		String
    6              0.000005 hi def link luaString2		String
    6              0.000005 hi def link luaNumber		Number
    6              0.000006 hi def link luaOperator		Operator
    6              0.000005 hi def link luaIn			Operator
    6              0.000005 hi def link luaConstant		Constant
    6              0.000006 hi def link luaCond		Conditional
    6              0.000005 hi def link luaElse		Conditional
    6              0.000005 hi def link luaFunction		Function
    6              0.000006 hi def link luaComment		Comment
    6              0.000006 hi def link luaTodo		Todo
    6              0.000005 hi def link luaTable		Structure
    6              0.000005 hi def link luaError		Error
    6              0.000005 hi def link luaParenError		Error
    6              0.000004 hi def link luaBraceError		Error
    6              0.000006 hi def link luaSpecial		SpecialChar
    6              0.000005 hi def link luaFunc		Identifier
    6              0.000070 hi def link luaLabel		Label
                            
                            
    6              0.000015 let b:current_syntax = "lua"
                            
    6   0.000222   0.000203 let &cpo = s:cpo_save
    6              0.000013 unlet s:cpo_save
                            " vim: et ts=8 sw=2

SCRIPT  /home/sabo/.local/share/nvim/site/pack/packer/start/vim-repeat/autoload/repeat.vim
Sourced 1 time
Total time:   0.000433
 Self time:   0.000433

count  total (s)   self (s)
                            " repeat.vim - Let the repeat command repeat plugin maps
                            " Maintainer:   Tim Pope
                            " Version:      1.2
                            " GetLatestVimScripts: 2136 1 :AutoInstall: repeat.vim
                            
                            " Installation:
                            " Place in either ~/.vim/plugin/repeat.vim (to load at start up) or
                            " ~/.vim/autoload/repeat.vim (to load automatically as needed).
                            "
                            " License:
                            " Copyright (c) Tim Pope.  Distributed under the same terms as Vim itself.
                            " See :help license
                            "
                            " Developers:
                            " Basic usage is as follows:
                            "
                            "   silent! call repeat#set("\<Plug>MappingToRepeatCommand",3)
                            "
                            " The first argument is the mapping that will be invoked when the |.| key is
                            " pressed.  Typically, it will be the same as the mapping the user invoked.
                            " This sequence will be stuffed into the input queue literally.  Thus you must
                            " encode special keys by prefixing them with a backslash inside double quotes.
                            "
                            " The second argument is the default count.  This is the number that will be
                            " prefixed to the mapping if no explicit numeric argument was given.  The
                            " value of the v:count variable is usually correct and it will be used if the
                            " second parameter is omitted.  If your mapping doesn't accept a numeric
                            " argument and you never want to receive one, pass a value of -1.
                            "
                            " Make sure to call the repeat#set function _after_ making changes to the
                            " file.
                            "
                            " For mappings that use a register and want the same register used on
                            " repetition, use:
                            "
                            "   silent! call repeat#setreg("\<Plug>MappingToRepeatCommand", v:register)
                            "
                            " This function can (and probably needs to be) called before making changes to
                            " the file (as those typically clear v:register).  Therefore, the call sequence
                            " in your mapping will look like this:
                            "
                            "   nnoremap <silent> <Plug>MyMap
                            "   \   :<C-U>execute 'silent! call repeat#setreg("\<lt>Plug>MyMap", v:register)'<Bar>
                            "   \   call <SID>MyFunction(v:register, ...)<Bar>
                            "   \   silent! call repeat#set("\<lt>Plug>MyMap")<CR>
                            
    1              0.000010 if exists("g:loaded_repeat") || &cp || v:version < 700
                                finish
    1              0.000001 endif
    1              0.000006 let g:loaded_repeat = 1
                            
    1              0.000002 let g:repeat_tick = -1
    1              0.000002 let g:repeat_reg = ['', '']
                            
                            " Special function to avoid spurious repeats in a related, naturally repeating
                            " mapping when your repeatable mapping doesn't increase b:changedtick.
    1              0.000002 function! repeat#invalidate()
                                autocmd! repeat_custom_motion
                                let g:repeat_tick = -1
                            endfunction
                            
    1              0.000001 function! repeat#set(sequence,...)
                                let g:repeat_sequence = a:sequence
                                let g:repeat_count = a:0 ? a:1 : v:count
                                let g:repeat_tick = b:changedtick
                                augroup repeat_custom_motion
                                    autocmd!
                                    autocmd CursorMoved <buffer> let g:repeat_tick = b:changedtick | autocmd! repeat_custom_motion
                                augroup END
                            endfunction
                            
    1              0.000001 function! repeat#setreg(sequence,register)
                                let g:repeat_reg = [a:sequence, a:register]
                            endfunction
                            
                            
    1              0.000002 function! s:default_register()
                                let values = split(&clipboard, ',')
                                if index(values, 'unnamedplus') != -1
                                    return '+'
                                elseif index(values, 'unnamed') != -1
                                    return '*'
                                else
                                    return '"'
                                endif
                            endfunction
                            
    1              0.000001 function! repeat#run(count)
                                let s:errmsg = ''
                                try
                                    if g:repeat_tick == b:changedtick
                                        let r = ''
                                        if g:repeat_reg[0] ==# g:repeat_sequence && !empty(g:repeat_reg[1])
                                            " Take the original register, unless another (non-default, we
                                            " unfortunately cannot detect no vs. a given default register)
                                            " register has been supplied to the repeat command (as an
                                            " explicit override).
                                            let regname = v:register ==# s:default_register() ? g:repeat_reg[1] : v:register
                                            if regname ==# '='
                                                " This causes a re-evaluation of the expression on repeat, which
                                                " is what we want.
                                                let r = '"=' . getreg('=', 1) . "\<CR>"
                                            else
                                                let r = '"' . regname
                                            endif
                                        endif
                            
                                        let c = g:repeat_count
                                        let s = g:repeat_sequence
                                        let cnt = c == -1 ? "" : (a:count ? a:count : (c ? c : ''))
                                        if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm ' . r . cnt . s
                                        elseif v:version <= 703
                                            call feedkeys(r . cnt, 'n')
                                            call feedkeys(s, '')
                                        else
                                            call feedkeys(s, 'i')
                                            call feedkeys(r . cnt, 'ni')
                                        endif
                                    else
                                        if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm! '.(a:count ? a:count : '') . '.'
                                        else
                                            call feedkeys((a:count ? a:count : '') . '.', 'ni')
                                        endif
                                    endif
                                catch /^Vim(normal):/
                                    let s:errmsg = v:errmsg
                                    return 0
                                endtry
                                return 1
                            endfunction
    1              0.000001 function! repeat#errmsg()
                                return s:errmsg
                            endfunction
                            
    1              0.000001 function! repeat#wrap(command,count)
                                let preserve = (g:repeat_tick == b:changedtick)
                                call feedkeys((a:count ? a:count : '').a:command, 'n')
                                exe (&foldopen =~# 'undo\|all' ? 'norm! zv' : '')
                                if preserve
                                    let g:repeat_tick = b:changedtick
                                endif
                            endfunction
                            
    1              0.000023 nnoremap <silent> <Plug>(RepeatDot)      :<C-U>if !repeat#run(v:count)<Bar>echoerr repeat#errmsg()<Bar>endif<CR>
    1              0.000008 nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>
    1              0.000006 nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>
    1              0.000006 nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\<Lt>C-R>",v:count)<CR>
                            
    1              0.000013 if !hasmapto('<Plug>(RepeatDot)', 'n')
    1              0.000006     nmap . <Plug>(RepeatDot)
    1              0.000001 endif
    1              0.000008 if !hasmapto('<Plug>(RepeatUndo)', 'n')
    1              0.000005     nmap u <Plug>(RepeatUndo)
    1              0.000000 endif
    1              0.000013 if maparg('U','n') ==# '' && !hasmapto('<Plug>(RepeatUndoLine)', 'n')
    1              0.000005     nmap U <Plug>(RepeatUndoLine)
    1              0.000000 endif
    1              0.000006 if !hasmapto('<Plug>(RepeatRedo)', 'n')
    1              0.000013     nmap <C-R> <Plug>(RepeatRedo)
    1              0.000001 endif
                            
    1              0.000024 augroup repeatPlugin
    1              0.000196     autocmd!
    1              0.000011     autocmd BufLeave,BufWritePre,BufReadPre * let g:repeat_tick = (g:repeat_tick == b:changedtick || g:repeat_tick == 0) ? 0 : -1
    1              0.000003     autocmd BufEnter,BufWritePost * if g:repeat_tick == 0|let g:repeat_tick = b:changedtick|endif
    1              0.000001 augroup END
                            
                            " vim:set ft=vim et sw=4 sts=4:

SCRIPT  /usr/share/nvim/runtime/syntax/lsp_markdown.vim
Sourced 6 times
Total time:   0.081804
 Self time:   0.000394

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	lsp_markdown
                            " Maintainer:	Michael Lingelbach <m.j.lbach@gmail.com
                            " URL:		http://neovim.io
                            " Remark:	Uses markdown syntax file
                            
                            " always source the system included markdown instead of any other installed
                            " markdown.vim syntax files
    6   0.081587   0.000176 execute 'source' expand('<sfile>:p:h') .. '/markdown.vim'
                            
    6              0.000017 syn cluster mkdNonListItem add=mkdEscape,mkdNbsp
                            
    6              0.000004 syn clear markdownEscape
    6              0.000050 syntax region markdownEscape matchgroup=markdownEscape start=/\\\ze[\\\x60*{}\[\]()#+\-,.!_>~|"$%&'\/:;<=?@^ ]/ end=/./ containedin=ALL keepend oneline concealends
                            
                            " conceal html entities
    6              0.000019 syntax match mkdNbsp /&nbsp;/ conceal cchar= 
    6              0.000017 syntax match mkdLt /&lt;/  conceal cchar=<
    6              0.000015 syntax match mkdGt /&gt;/  conceal cchar=>
    6              0.000016 syntax match mkdAmp /&amp;/  conceal cchar=&
    6              0.000016 syntax match mkdQuot /&quot;/  conceal cchar="
                            
    6              0.000011 hi def link mkdEscape special

SCRIPT  /usr/share/nvim/runtime/syntax/markdown.vim
Sourced 6 times
Total time:   0.081397
 Self time:   0.003329

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Markdown
                            " Maintainer:   Tim Pope <vimNOSPAM@tpope.org>
                            " Filenames:    *.markdown
                            " Last Change:  2020 Jan 14
                            
    6              0.000018 if exists("b:current_syntax")
                              finish
    6              0.000004 endif
                            
    6              0.000011 if !exists('main_syntax')
    6              0.000034   let main_syntax = 'markdown'
    6              0.000003 endif
                            
    6   0.079200   0.001132 runtime! syntax/html.vim
    6              0.000007 unlet! b:current_syntax
                            
    6              0.000017 if !exists('g:markdown_fenced_languages')
    1              0.000005   let g:markdown_fenced_languages = []
    6              0.000003 endif
    6              0.000013 let s:done_include = {}
    6              0.000032 for s:type in map(copy(g:markdown_fenced_languages),'matchstr(v:val,"[^=]*$")')
                              if has_key(s:done_include, matchstr(s:type,'[^.]*'))
                                continue
                              endif
                              if s:type =~ '\.'
                                let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\.\zs.*')
                              endif
                              exe 'syn include @markdownHighlight'.substitute(s:type,'\.','','g').' syntax/'.matchstr(s:type,'[^.]*').'.vim'
                              unlet! b:current_syntax
                              let s:done_include[matchstr(s:type,'[^.]*')] = 1
    6              0.000006 endfor
    6              0.000005 unlet! s:type
    6              0.000006 unlet! s:done_include
                            
    6              0.000011 if !exists('g:markdown_minlines')
    1              0.000002   let g:markdown_minlines = 50
    6              0.000003 endif
    6              0.000027 execute 'syn sync minlines=' . g:markdown_minlines
    6              0.000004 syn case ignore
                            
    6              0.000039 syn match markdownValid '[<>]\c[a-z/$!]\@!' transparent contains=NONE
    6              0.000026 syn match markdownValid '&\%(#\=\w*;\)\@!' transparent contains=NONE
                            
    6              0.000027 syn match markdownLineStart "^[<@]\@!" nextgroup=@markdownBlock,htmlSpecialChar
                            
    6              0.000038 syn cluster markdownBlock contains=markdownH1,markdownH2,markdownH3,markdownH4,markdownH5,markdownH6,markdownBlockquote,markdownListMarker,markdownOrderedListMarker,markdownCodeBlock,markdownRule
    6              0.000033 syn cluster markdownInline contains=markdownLineBreak,markdownLinkText,markdownItalic,markdownBold,markdownCode,markdownEscape,@htmlTop,markdownError,markdownValid
                            
    6              0.000032 syn match markdownH1 "^.\+\n=\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
    6              0.000021 syn match markdownH2 "^.\+\n-\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
                            
    6              0.000014 syn match markdownHeadingRule "^[=-]\+$" contained
                            
    6              0.000040 syn region markdownH1 matchgroup=markdownH1Delimiter start="##\@!"      end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    6              0.000031 syn region markdownH2 matchgroup=markdownH2Delimiter start="###\@!"     end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    6              0.000028 syn region markdownH3 matchgroup=markdownH3Delimiter start="####\@!"    end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    6              0.000027 syn region markdownH4 matchgroup=markdownH4Delimiter start="#####\@!"   end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    6              0.000025 syn region markdownH5 matchgroup=markdownH5Delimiter start="######\@!"  end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    6              0.000026 syn region markdownH6 matchgroup=markdownH6Delimiter start="#######\@!" end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
                            
    6              0.000018 syn match markdownBlockquote ">\%(\s\|$\)" contained nextgroup=@markdownBlock
                            
    6              0.000021 syn region markdownCodeBlock start="    \|\t" end="$" contained
                            
                            " TODO: real nesting
    6              0.000027 syn match markdownListMarker "\%(\t\| \{0,4\}\)[-*+]\%(\s\+\S\)\@=" contained
    6              0.000022 syn match markdownOrderedListMarker "\%(\t\| \{0,4}\)\<\d\+\.\%(\s\+\S\)\@=" contained
                            
    6              0.000016 syn match markdownRule "\* *\* *\*[ *]*$" contained
    6              0.000013 syn match markdownRule "- *- *-[ -]*$" contained
                            
    6              0.000017 syn match markdownLineBreak " \{2,\}$"
                            
    6              0.000037 syn region markdownIdDeclaration matchgroup=markdownLinkDelimiter start="^ \{0,3\}!\=\[" end="\]:" oneline keepend nextgroup=markdownUrl skipwhite
    6              0.000015 syn match markdownUrl "\S\+" nextgroup=markdownUrlTitle skipwhite contained
    6              0.000024 syn region markdownUrl matchgroup=markdownUrlDelimiter start="<" end=">" oneline keepend nextgroup=markdownUrlTitle skipwhite contained
    6              0.000019 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+"+ end=+"+ keepend contained
    6              0.000016 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+'+ end=+'+ keepend contained
    6              0.000014 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+(+ end=+)+ keepend contained
                            
    6              0.000071 syn region markdownLinkText matchgroup=markdownLinkTextDelimiter start="!\=\[\%(\%(\_[^][]\|\[\_[^][]*\]\)*]\%( \=[[(]\)\)\@=" end="\]\%( \=[[(]\)\@=" nextgroup=markdownLink,markdownId skipwhite contains=@markdownInline,markdownLineStart
    6              0.000022 syn region markdownLink matchgroup=markdownLinkDelimiter start="(" end=")" contains=markdownUrl keepend contained
    6              0.000018 syn region markdownId matchgroup=markdownIdDelimiter start="\[" end="\]" keepend contained
    6              0.000036 syn region markdownAutomaticLink matchgroup=markdownUrlDelimiter start="<\%(\w\+:\|[[:alnum:]_+-]\+@\)\@=" end=">" keepend oneline
                            
    6              0.000011 let s:concealends = ''
    6              0.000024 if has('conceal') && get(g:, 'markdown_syntax_conceal', 1) == 1
    6              0.000008   let s:concealends = ' concealends'
    6              0.000004 endif
    6              0.000075 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\S\@<=\*\|\*\S\@=" end="\S\@<=\*\|\*\S\@=" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    6              0.000061 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\w\@<!_\S\@=" end="\S\@<=_\w\@!" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
    6              0.000066 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\S\@<=\*\*\|\*\*\S\@=" end="\S\@<=\*\*\|\*\*\S\@=" skip="\\\*" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    6              0.000058 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\w\@<!__\S\@=" end="\S\@<=__\w\@!" skip="\\_" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    6              0.000062 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\S\@<=\*\*\*\|\*\*\*\S\@=" end="\S\@<=\*\*\*\|\*\*\*\S\@=" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    6              0.000055 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\w\@<!___\S\@=" end="\S\@<=___\w\@!" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
                            
    6              0.000027 syn region markdownCode matchgroup=markdownCodeDelimiter start="`" end="`" keepend contains=markdownLineStart
    6              0.000029 syn region markdownCode matchgroup=markdownCodeDelimiter start="`` \=" end=" \=``" keepend contains=markdownLineStart
    6              0.000033 syn region markdownCode matchgroup=markdownCodeDelimiter start="^\s*````*.*$" end="^\s*````*\ze\s*$" keepend
                            
    6              0.000022 syn match markdownFootnote "\[^[^\]]\+\]"
    6              0.000020 syn match markdownFootnoteDefinition "^\[^[^\]]\+\]:"
                            
    6              0.000009 if main_syntax ==# 'markdown'
    6              0.000011   let s:done_include = {}
    6              0.000011   for s:type in g:markdown_fenced_languages
                                if has_key(s:done_include, matchstr(s:type,'[^.]*'))
                                  continue
                                endif
                                exe 'syn region markdownHighlight'.substitute(matchstr(s:type,'[^=]*$'),'\..*','','').' matchgroup=markdownCodeDelimiter start="^\s*````*\s*\%({.\{-}\.\)\='.matchstr(s:type,'[^=]*').'}\=\S\@!.*$" end="^\s*````*\ze\s*$" keepend contains=@markdownHighlight'.substitute(matchstr(s:type,'[^=]*$'),'\.','','g') . s:concealends
                                let s:done_include[matchstr(s:type,'[^.]*')] = 1
    6              0.000005   endfor
    6              0.000006   unlet! s:type
    6              0.000006   unlet! s:done_include
    6              0.000003 endif
                            
    6              0.000023 syn match markdownEscape "\\[][\\`*_{}()<>#+.!-]"
    6              0.000017 syn match markdownError "\w\@<=_\w\@="
                            
    6              0.000008 hi def link markdownH1                    htmlH1
    6              0.000006 hi def link markdownH2                    htmlH2
    6              0.000005 hi def link markdownH3                    htmlH3
    6              0.000005 hi def link markdownH4                    htmlH4
    6              0.000005 hi def link markdownH5                    htmlH5
    6              0.000005 hi def link markdownH6                    htmlH6
    6              0.000006 hi def link markdownHeadingRule           markdownRule
    6              0.000006 hi def link markdownH1Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownH2Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownH3Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownH4Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownH5Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownH6Delimiter           markdownHeadingDelimiter
    6              0.000005 hi def link markdownHeadingDelimiter      Delimiter
    6              0.000006 hi def link markdownOrderedListMarker     markdownListMarker
    6              0.000006 hi def link markdownListMarker            htmlTagName
    6              0.000005 hi def link markdownBlockquote            Comment
    6              0.000005 hi def link markdownRule                  PreProc
                            
    6              0.000005 hi def link markdownFootnote              Typedef
    6              0.000005 hi def link markdownFootnoteDefinition    Typedef
                            
    6              0.000006 hi def link markdownLinkText              htmlLink
    6              0.000019 hi def link markdownIdDeclaration         Typedef
    6              0.000005 hi def link markdownId                    Type
    6              0.000006 hi def link markdownAutomaticLink         markdownUrl
    6              0.000005 hi def link markdownUrl                   Float
    6              0.000005 hi def link markdownUrlTitle              String
    6              0.000005 hi def link markdownIdDelimiter           markdownLinkDelimiter
    6              0.000005 hi def link markdownUrlDelimiter          htmlTag
    6              0.000006 hi def link markdownUrlTitleDelimiter     Delimiter
                            
    6              0.000005 hi def link markdownItalic                htmlItalic
    6              0.000005 hi def link markdownItalicDelimiter       markdownItalic
    6              0.000005 hi def link markdownBold                  htmlBold
    6              0.000005 hi def link markdownBoldDelimiter         markdownBold
    6              0.000005 hi def link markdownBoldItalic            htmlBoldItalic
    6              0.000005 hi def link markdownBoldItalicDelimiter   markdownBoldItalic
    6              0.000005 hi def link markdownCodeDelimiter         Delimiter
                            
    6              0.000005 hi def link markdownEscape                Special
    6              0.000005 hi def link markdownError                 Error
                            
    6              0.000010 let b:current_syntax = "markdown"
    6              0.000009 if main_syntax ==# 'markdown'
    6              0.000018   unlet main_syntax
    6              0.000003 endif
                            
                            " vim:set sw=2:

SCRIPT  /usr/share/nvim/runtime/syntax/html.vim
Sourced 6 times
Total time:   0.078055
 Self time:   0.015772

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:             HTML
                            " Previous Maintainer:  Jorge Maldonado Ventura <jorgesumle@freakspot.net>
                            " Previous Maintainer:  Claudio Fleiner <claudio@fleiner.com>
                            " Repository:           https://notabug.org/jorgesumle/vim-html-syntax
                            " Last Change:          2021 Mar 02
                            "			Included patch #7900 to fix comments
                            "			Included patch #7916 to fix a few more things
                            "
                            
                            " Please check :help html.vim for some comments and a description of the options
                            
                            " quit when a syntax file was already loaded
    6              0.000018 if !exists("main_syntax")
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'html'
    6              0.000003 endif
                            
    6              0.000029 let s:cpo_save = &cpo
    6   0.000054   0.000039 set cpo&vim
                            
    6              0.000007 syntax spell toplevel
                            
    6              0.000004 syn case ignore
                            
                            " mark illegal characters
    6              0.000022 syn match htmlError "[<>&]"
                            
                            
                            " tags
    6              0.000045 syn region  htmlString   contained start=+"+ end=+"+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    6              0.000031 syn region  htmlString   contained start=+'+ end=+'+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    6              0.000032 syn match   htmlValue    contained "=[\t ]*[^'" \t>][^ \t>]*"hs=s+1   contains=javaScriptExpression,@htmlPreproc
    6              0.000032 syn region  htmlEndTag             start=+</+      end=+>+ contains=htmlTagN,htmlTagError
    6              0.000053 syn region  htmlTag                start=+<[^/]+   end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent,htmlCssDefinition,@htmlPreproc,@htmlArgCluster
    6              0.000040 syn match   htmlTagN     contained +<\s*[-a-zA-Z0-9]\++hs=s+1 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    6              0.000030 syn match   htmlTagN     contained +</\s*[-a-zA-Z0-9]\++hs=s+2 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    6              0.000014 syn match   htmlTagError contained "[^>]<"ms=s+1
                            
                            
                            " tag names
    6              0.000019 syn keyword htmlTagName contained address applet area a base basefont
    6              0.000016 syn keyword htmlTagName contained big blockquote br caption center
    6              0.000023 syn keyword htmlTagName contained cite code dd dfn dir div dl dt font
    6              0.000011 syn keyword htmlTagName contained form hr html img
    6              0.000015 syn keyword htmlTagName contained input isindex kbd li link map menu
    6              0.000017 syn keyword htmlTagName contained meta ol option param pre p samp span
    6              0.000016 syn keyword htmlTagName contained select small sub sup
    6              0.000054 syn keyword htmlTagName contained table td textarea th tr tt ul var xmp
    6              0.000036 syn match htmlTagName contained "\<\(b\|i\|u\|h[1-6]\|em\|strong\|head\|body\|title\)\>"
                            
                            " new html 4.0 tags
    6              0.000015 syn keyword htmlTagName contained abbr acronym bdo button col label
    6              0.000013 syn keyword htmlTagName contained colgroup fieldset iframe ins legend
    6              0.000016 syn keyword htmlTagName contained object optgroup q s tbody tfoot thead
                            
                            " new html 5 tags
    6              0.000013 syn keyword htmlTagName contained article aside audio bdi canvas data
    6              0.000014 syn keyword htmlTagName contained datalist details dialog embed figcaption
    6              0.000014 syn keyword htmlTagName contained figure footer header hgroup keygen main
    6              0.000014 syn keyword htmlTagName contained mark menuitem meter nav output picture
    6              0.000014 syn keyword htmlTagName contained progress rb rp rt rtc ruby section
    6              0.000015 syn keyword htmlTagName contained slot source summary template time track
    6              0.000008 syn keyword htmlTagName contained video wbr
                            
                            " legal arg names
    6              0.000006 syn keyword htmlArg contained action
    6              0.000013 syn keyword htmlArg contained align alink alt archive background bgcolor
    6              0.000010 syn keyword htmlArg contained border bordercolor cellpadding
    6              0.000020 syn keyword htmlArg contained cellspacing checked class clear code codebase color
    6              0.000016 syn keyword htmlArg contained cols colspan content coords enctype face
    6              0.000010 syn keyword htmlArg contained gutter height hspace id
    6              0.000009 syn keyword htmlArg contained link lowsrc marginheight
    6              0.000012 syn keyword htmlArg contained marginwidth maxlength method name prompt
    6              0.000015 syn keyword htmlArg contained rel rev rows rowspan scrolling selected shape
    6              0.000015 syn keyword htmlArg contained size src start target text type url
    6              0.000015 syn keyword htmlArg contained usemap ismap valign value vlink vspace width wrap
    6              0.000024 syn match   htmlArg contained "\<\(http-equiv\|href\|title\)="me=e-1
                            
                            " aria attributes
    6              0.000390 exe 'syn match htmlArg contained "\<aria-\%(' . join([
                                \ 'activedescendant', 'atomic', 'autocomplete', 'busy', 'checked', 'colcount',
                                \ 'colindex', 'colspan', 'controls', 'current', 'describedby', 'details',
                                \ 'disabled', 'dropeffect', 'errormessage', 'expanded', 'flowto', 'grabbed',
                                \ 'haspopup', 'hidden', 'invalid', 'keyshortcuts', 'label', 'labelledby', 'level',
                                \ 'live', 'modal', 'multiline', 'multiselectable', 'orientation', 'owns',
                                \ 'placeholder', 'posinset', 'pressed', 'readonly', 'relevant', 'required',
                                \ 'roledescription', 'rowcount', 'rowindex', 'rowspan', 'selected', 'setsize',
                                \ 'sort', 'valuemax', 'valuemin', 'valuenow', 'valuetext'
                                \ ], '\|') . '\)\>"'
    6              0.000008 syn keyword htmlArg contained role
                            
                            " Netscape extensions
    6              0.000015 syn keyword htmlTagName contained frame noframes frameset nobr blink
    6              0.000066 syn keyword htmlTagName contained layer ilayer nolayer spacer
    6              0.000114 syn keyword htmlArg     contained frameborder noresize pagex pagey above below
    6              0.000097 syn keyword htmlArg     contained left top visibility clip id noshade
    6              0.000017 syn match   htmlArg     contained "\<z-index\>"
                            
                            " Microsoft extensions
    6              0.000021 syn keyword htmlTagName contained marquee
                            
                            " html 4.0 arg names
    6              0.000021 syn match   htmlArg contained "\<\(accept-charset\|label\)\>"
    6              0.000100 syn keyword htmlArg contained abbr accept accesskey axis char charoff charset
    6              0.000073 syn keyword htmlArg contained cite classid codetype compact data datetime
    6              0.000069 syn keyword htmlArg contained declare defer dir disabled for frame
    6              0.000085 syn keyword htmlArg contained headers hreflang lang language longdesc
    6              0.000015 syn keyword htmlArg contained multiple nohref nowrap object profile readonly
    6              0.000014 syn keyword htmlArg contained rules scheme scope span standby style
    6              0.000011 syn keyword htmlArg contained summary tabindex valuetype version
                            
                            " html 5 arg names
    6              0.000011 syn keyword htmlArg contained allowfullscreen async autocomplete autofocus
    6              0.000014 syn keyword htmlArg contained autoplay challenge contenteditable contextmenu
    6              0.000015 syn keyword htmlArg contained controls crossorigin default dirname download
    6              0.000014 syn keyword htmlArg contained draggable dropzone form formaction formenctype
    6              0.000012 syn keyword htmlArg contained formmethod formnovalidate formtarget hidden
    6              0.000016 syn keyword htmlArg contained high icon inputmode keytype kind list loop low
    6              0.000015 syn keyword htmlArg contained max min minlength muted nonce novalidate open
    6              0.000012 syn keyword htmlArg contained optimum pattern placeholder poster preload
    6              0.000013 syn keyword htmlArg contained radiogroup required reversed sandbox spellcheck
    6              0.000016 syn keyword htmlArg contained sizes srcset srcdoc srclang step title translate
    6              0.000007 syn keyword htmlArg contained typemustmatch
                            
                            " special characters
    6              0.000045 syn match htmlSpecialChar "&#\=[0-9A-Za-z]\{1,8};"
                            
                            " Comments (the real ones or the old netscape ones)
    6              0.000016 if exists("html_wrong_comments")
                              syn region htmlComment        start=+<!--+    end=+--\s*>+    contains=@Spell
    6              0.000005 else
                              " The HTML 5.2 syntax 8.2.4.41: bogus comment is parser error; browser skips until next &gt
    6              0.000031   syn region htmlComment        start=+<!+      end=+>+         contains=htmlCommentError keepend
                              " Idem 8.2.4.42,51: Comment starts with <!-- and ends with -->
                              " Idem 8.2.4.43,44: Except <!--> and <!---> are parser errors
                              " Idem 8.2.4.52: dash-dash-bang (--!>) is error ignored by parser, also closes comment
    6              0.000047   syn region htmlComment matchgroup=htmlComment start=+<!--\%(-\?>\)\@!+        end=+--!\?>+    contains=htmlCommentNested,@htmlPreProc,@Spell keepend
                              " Idem 8.2.4.49: nested comment is parser error, except <!--> is all right
    6              0.000014   syn match htmlCommentNested contained "<!-->\@!"
    6              0.000012   syn match htmlCommentError  contained "[^><!]"
    6              0.000004 endif
    6              0.000024 syn region htmlComment  start=+<!DOCTYPE+       end=+>+ keepend
                            
                            " server-parsed commands
    6              0.000033 syn region htmlPreProc start=+<!--#+ end=+-->+ contains=htmlPreStmt,htmlPreError,htmlPreAttr
    6              0.000052 syn match htmlPreStmt contained "<!--#\(config\|echo\|exec\|fsize\|flastmod\|include\|printenv\|set\|if\|elif\|else\|endif\|geoguide\)\>"
    6              0.000015 syn match htmlPreError contained "<!--#\S*"ms=s+4
    6              0.000026 syn match htmlPreAttr contained "\w\+=[^"]\S\+" contains=htmlPreProcAttrError,htmlPreProcAttrName
    6              0.000036 syn region htmlPreAttr contained start=+\w\+="+ skip=+\\\\\|\\"+ end=+"+ contains=htmlPreProcAttrName keepend
    6              0.000012 syn match htmlPreProcAttrError contained "\w\+="he=e-1
    6              0.000039 syn match htmlPreProcAttrName contained "\(expr\|errmsg\|sizefmt\|timefmt\|var\|cgi\|cmd\|file\|virtual\|value\)="he=e-1
                            
    6              0.000016 if !exists("html_no_rendering")
                              " rendering
    6              0.000038   syn cluster htmlTop contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,javaScript,@htmlPreproc
                            
    6              0.000036   syn region htmlStrike start="<del\>" end="</del\_s*>"me=s-1 contains=@htmlTop
    6              0.000032   syn region htmlStrike start="<strike\>" end="</strike\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000035   syn region htmlBold start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    6              0.000035   syn region htmlBold start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    6              0.000030   syn region htmlBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
    6              0.000027   syn region htmlBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    6              0.000027   syn region htmlBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    6              0.000023   syn region htmlBoldUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    6              0.000023   syn region htmlBoldUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    6              0.000039   syn region htmlBoldItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
                            
    6              0.000032   syn region htmlUnderline start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBold,htmlUnderlineItalic
    6              0.000026   syn region htmlUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    6              0.000028   syn region htmlUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    6              0.000024   syn region htmlUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    6              0.000024   syn region htmlUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    6              0.000021   syn region htmlUnderlineItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    6              0.000026   syn region htmlUnderlineItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
    6              0.000021   syn region htmlUnderlineBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    6              0.000022   syn region htmlUnderlineBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000031   syn region htmlItalic start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlItalicBold,htmlItalicUnderline
    6              0.000025   syn region htmlItalic start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    6              0.000024   syn region htmlItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    6              0.000028   syn region htmlItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    6              0.000021   syn region htmlItalicBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop
    6              0.000023   syn region htmlItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlItalicUnderlineBold
    6              0.000021   syn region htmlItalicUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    6              0.000026   syn region htmlItalicUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000016   syn match htmlLeadingSpace "^\s\+" contained
    6              0.000058   syn region htmlLink start="<a\>\_[^>]*\<href\>" end="</a\_s*>"me=s-1 contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLeadingSpace,javaScript,@htmlPreproc
    6              0.000025   syn region htmlH1 start="<h1\>" end="</h1\_s*>"me=s-1 contains=@htmlTop
    6              0.000026   syn region htmlH2 start="<h2\>" end="</h2\_s*>"me=s-1 contains=@htmlTop
    6              0.000024   syn region htmlH3 start="<h3\>" end="</h3\_s*>"me=s-1 contains=@htmlTop
    6              0.000025   syn region htmlH4 start="<h4\>" end="</h4\_s*>"me=s-1 contains=@htmlTop
    6              0.000023   syn region htmlH5 start="<h5\>" end="</h5\_s*>"me=s-1 contains=@htmlTop
    6              0.000024   syn region htmlH6 start="<h6\>" end="</h6\_s*>"me=s-1 contains=@htmlTop
    6              0.000088   syn region htmlHead start="<head\>" end="</head\_s*>"me=s-1 end="<body\>"me=s-1 end="<h[1-6]\>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,htmlTitle,javaScript,cssStyle,@htmlPreproc
    6              0.000058   syn region htmlTitle start="<title\>" end="</title\_s*>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,javaScript,@htmlPreproc
    6              0.000004 endif
                            
    6              0.000010 syn keyword htmlTagName         contained noscript
    6              0.000012 syn keyword htmlSpecialTagName  contained script style
    6              0.000018 if main_syntax != 'java' || exists("java_javascript")
                              " JAVA SCRIPT
    6   0.003964   0.001247   syn include @htmlJavaScript syntax/javascript.vim
    6              0.000009   unlet b:current_syntax
    6              0.000071   syn region  javaScript start=+<script\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlJavaScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    6              0.000044   syn region  htmlScriptTag     contained start=+<script+ end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent
    6              0.000008   hi def link htmlScriptTag htmlTag
                            
                              " html events (i.e. arguments that include javascript commands)
    6              0.000018   if exists("html_extended_events")
                                syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ contains=htmlEventSQ
                                syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ contains=htmlEventDQ
    6              0.000004   else
    6              0.000029     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ keepend contains=htmlEventSQ
    6              0.000027     syn region htmlEvent        contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ keepend contains=htmlEventDQ
    6              0.000004   endif
    6              0.000023   syn region htmlEventSQ        contained start=+'+ms=s+1 end=+'+me=s-1 contains=@htmlJavaScript
    6              0.000020   syn region htmlEventDQ        contained start=+"+ms=s+1 end=+"+me=s-1 contains=@htmlJavaScript
    6              0.000006   hi def link htmlEventSQ htmlEvent
    6              0.000005   hi def link htmlEventDQ htmlEvent
                            
                              " a javascript expression is used as an arg value
    6              0.000027   syn region  javaScriptExpression contained start=+&{+ keepend end=+};+ contains=@htmlJavaScript,@htmlPreproc
    6              0.000003 endif
                            
    6              0.000015 if main_syntax != 'java' || exists("java_vb")
                              " VB SCRIPT
    6   0.013597   0.001228   syn include @htmlVbScript syntax/vb.vim
    6              0.000012   unlet b:current_syntax
    6              0.000079   syn region  javaScript start=+<script \_[^>]*language *=\_[^>]*vbscript\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlVbScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    6              0.000004 endif
                            
    6              0.000017 syn cluster htmlJavaScript      add=@htmlPreproc
                            
    6              0.000018 if main_syntax != 'java' || exists("java_css")
                              " embedded style sheets
    6              0.000010   syn keyword htmlArg           contained media
    6   0.048362   0.001196   syn include @htmlCss syntax/css.vim
    6              0.000009   unlet b:current_syntax
    6              0.000062   syn region cssStyle start=+<style+ keepend end=+</style>+ contains=@htmlCss,htmlTag,htmlEndTag,htmlCssStyleComment,@htmlPreproc
    6              0.000020   syn match htmlCssStyleComment contained "\(<!--\|-->\)"
    6              0.006843   syn region htmlCssDefinition matchgroup=htmlArg start='style="' keepend matchgroup=htmlString end='"' contains=css.*Attr,css.*Prop,cssComment,cssLength,cssColor,cssURL,cssImportant,cssError,cssString,@htmlPreproc
    6              0.000011   hi def link htmlStyleArg htmlString
    6              0.000003 endif
                            
    6              0.000011 if main_syntax == "html"
                              " synchronizing (does not always work if a comment includes legal
                              " html tags, but doing it right would mean to always start
                              " at the first line, which is too slow)
                              syn sync match htmlHighlight groupthere NONE "<[/a-zA-Z]"
                              syn sync match htmlHighlight groupthere javaScript "<script"
                              syn sync match htmlHighlightSkip "^.*['\"].*$"
                              syn sync minlines=10
    6              0.000003 endif
                            
                            " The default highlighting.
    6              0.000007 hi def link htmlTag                     Function
    6              0.000006 hi def link htmlEndTag                  Identifier
    6              0.000005 hi def link htmlArg                     Type
    6              0.000007 hi def link htmlTagName                 htmlStatement
    6              0.000006 hi def link htmlSpecialTagName          Exception
    6              0.000005 hi def link htmlValue                   String
    6              0.000005 hi def link htmlSpecialChar             Special
                            
    6              0.000017 if !exists("html_no_rendering")
    6              0.000006   hi def link htmlH1                      Title
    6              0.000006   hi def link htmlH2                      htmlH1
    6              0.000005   hi def link htmlH3                      htmlH2
    6              0.000005   hi def link htmlH4                      htmlH3
    6              0.000005   hi def link htmlH5                      htmlH4
    6              0.000004   hi def link htmlH6                      htmlH5
    6              0.000005   hi def link htmlHead                    PreProc
    6              0.000005   hi def link htmlTitle                   Title
    6              0.000007   hi def link htmlBoldItalicUnderline     htmlBoldUnderlineItalic
    6              0.000006   hi def link htmlUnderlineBold           htmlBoldUnderline
    6              0.000006   hi def link htmlUnderlineItalicBold     htmlBoldUnderlineItalic
    6              0.000021   hi def link htmlUnderlineBoldItalic     htmlBoldUnderlineItalic
    6              0.000006   hi def link htmlItalicUnderline         htmlUnderlineItalic
    6              0.000006   hi def link htmlItalicBold              htmlBoldItalic
    6              0.000006   hi def link htmlItalicBoldUnderline     htmlBoldUnderlineItalic
    6              0.000005   hi def link htmlItalicUnderlineBold     htmlBoldUnderlineItalic
    6              0.000005   hi def link htmlLink                    Underlined
    6              0.000006   hi def link htmlLeadingSpace            None
    6              0.000011   if !exists("html_my_rendering")
    6              0.000009     hi def htmlBold                term=bold cterm=bold gui=bold
    6              0.000009     hi def htmlBoldUnderline       term=bold,underline cterm=bold,underline gui=bold,underline
    6              0.000008     hi def htmlBoldItalic          term=bold,italic cterm=bold,italic gui=bold,italic
    6              0.000009     hi def htmlBoldUnderlineItalic term=bold,italic,underline cterm=bold,italic,underline gui=bold,italic,underline
    6              0.000006     hi def htmlUnderline           term=underline cterm=underline gui=underline
    6              0.000007     hi def htmlUnderlineItalic     term=italic,underline cterm=italic,underline gui=italic,underline
    6              0.000006     hi def htmlItalic              term=italic cterm=italic gui=italic
    6              0.000029     if v:version > 800 || v:version == 800 && has("patch1038")
    6              0.000007         hi def htmlStrike              term=strikethrough cterm=strikethrough gui=strikethrough
                                else
                                    hi def htmlStrike              term=underline cterm=underline gui=underline
    6              0.000003     endif
    6              0.000003   endif
    6              0.000002 endif
                            
    6              0.000005 hi def link htmlPreStmt            PreProc
    6              0.000005 hi def link htmlPreError           Error
    6              0.000005 hi def link htmlPreProc            PreProc
    6              0.000005 hi def link htmlPreAttr            String
    6              0.000005 hi def link htmlPreProcAttrName    PreProc
    6              0.000005 hi def link htmlPreProcAttrError   Error
    6              0.000005 hi def link htmlString             String
    6              0.000005 hi def link htmlStatement          Statement
    6              0.000004 hi def link htmlComment            Comment
    6              0.000005 hi def link htmlCommentNested      htmlError
    6              0.000005 hi def link htmlCommentError       htmlError
    6              0.000005 hi def link htmlTagError           htmlError
    6              0.000005 hi def link htmlEvent              javaScript
    6              0.000006 hi def link htmlError              Error
                            
    6              0.000004 hi def link javaScript             Special
    6              0.000005 hi def link javaScriptExpression   javaScript
    6              0.000005 hi def link htmlCssStyleComment    Comment
    6              0.000005 hi def link htmlCssDefinition      Special
                            
    6              0.000011 let b:current_syntax = "html"
                            
    6              0.000008 if main_syntax == 'html'
                              unlet main_syntax
    6              0.000003 endif
                            
    6   0.000056   0.000041 let &cpo = s:cpo_save
    6              0.000007 unlet s:cpo_save
                            " vim: ts=8

SCRIPT  /usr/share/nvim/runtime/syntax/javascript.vim
Sourced 6 times
Total time:   0.002702
 Self time:   0.002667

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	JavaScript
                            " Maintainer:	Claudio Fleiner <claudio@fleiner.com>
                            " Updaters:	Scott Shattuck (ss) <ss@technicalpursuit.com>
                            " URL:		http://www.fleiner.com/vim/syntax/javascript.vim
                            " Changes:	(ss) added keywords, reserved words, and other identifiers
                            "		(ss) repaired several quoting and grouping glitches
                            "		(ss) fixed regex parsing issue with multiple qualifiers [gi]
                            "		(ss) additional factoring of keywords, globals, and members
                            " Last Change:	2021 Mar 30
                            " 		2013 Jun 12: adjusted javaScriptRegexpString (Kevin Locke)
                            " 		2018 Apr 14: adjusted javaScriptRegexpString (LongJohnCoder)
                            
                            " tuning parameters:
                            " unlet javaScript_fold
                            
    6              0.000018 if !exists("main_syntax")
                              " quit when a syntax file was already loaded
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'javascript'
    6              0.000017 elseif exists("b:current_syntax") && b:current_syntax == "javascript"
                              finish
    6              0.000003 endif
                            
    6              0.000030 let s:cpo_save = &cpo
    6   0.000054   0.000037 set cpo&vim
                            
                            
    6              0.000020 syn keyword javaScriptCommentTodo      TODO FIXME XXX TBD contained
    6              0.000031 syn match   javaScriptLineComment      "\/\/.*" contains=@Spell,javaScriptCommentTodo
    6              0.000030 syn match   javaScriptCommentSkip      "^[ \t]*\*\($\|[ \t]\+\)"
    6              0.000033 syn region  javaScriptComment	       start="/\*"  end="\*/" contains=@Spell,javaScriptCommentTodo
    6              0.000020 syn match   javaScriptSpecial	       "\\\d\d\d\|\\."
    6              0.000042 syn region  javaScriptStringD	       start=+"+  skip=+\\\\\|\\"+  end=+"\|$+	contains=javaScriptSpecial,@htmlPreproc
    6              0.000036 syn region  javaScriptStringS	       start=+'+  skip=+\\\\\|\\'+  end=+'\|$+	contains=javaScriptSpecial,@htmlPreproc
    6              0.000038 syn region  javaScriptStringT	       start=+`+  skip=+\\\\\|\\`+  end=+`+	contains=javaScriptSpecial,javaScriptEmbed,@htmlPreproc
                            
    6              0.000027 syn region  javaScriptEmbed	       start=+${+  end=+}+	contains=@javaScriptEmbededExpr
                            
    6              0.000015 syn match   javaScriptSpecialCharacter "'\\.'"
    6              0.000029 syn match   javaScriptNumber	       "-\=\<\d\+L\=\>\|0[xX][0-9a-fA-F]\+\>"
    6              0.000022 syn match   javaScriptNumber	       "-\=\<\d\+\%(_\d\+\)*\>"
    6              0.000097 syn region  javaScriptRegexpString     start=+[,(=+]\s*/[^/*]+ms=e-1,me=e-1 skip=+\\\\\|\\/+ end=+/[gimuys]\{0,2\}\s*$+ end=+/[gimuys]\{0,2\}\s*[+;.,)\]}]+me=e-1 end=+/[gimuys]\{0,2\}\s\+\/+me=e-1 contains=@htmlPreproc,javaScriptComment oneline
                            
    6              0.000015 syn keyword javaScriptConditional	if else switch
    6              0.000019 syn keyword javaScriptRepeat		while for do in
    6              0.000013 syn keyword javaScriptBranch		break continue
    6              0.000016 syn keyword javaScriptOperator		new delete instanceof typeof
    6              0.000023 syn keyword javaScriptType		Array Boolean Date Function Number Object String RegExp
    6              0.000012 syn keyword javaScriptStatement		return with await
    6              0.000012 syn keyword javaScriptBoolean		true false
    6              0.000011 syn keyword javaScriptNull		null undefined
    6              0.000015 syn keyword javaScriptIdentifier	arguments this var let
    6              0.000013 syn keyword javaScriptLabel		case default
    6              0.000015 syn keyword javaScriptException		try catch finally throw
    6              0.000015 syn keyword javaScriptMessage		alert confirm prompt status
    6              0.000015 syn keyword javaScriptGlobal		self window top parent
    6              0.000014 syn keyword javaScriptMember		document event location 
    6              0.000016 syn keyword javaScriptDeprecated	escape unescape
    6              0.000066 syn keyword javaScriptReserved		abstract boolean byte char class const debugger double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile async
                            
    6              0.000026 syn cluster  javaScriptEmbededExpr	contains=javaScriptBoolean,javaScriptNull,javaScriptIdentifier,javaScriptStringD,javaScriptStringS,javaScriptStringT
                            
    6              0.000015 if exists("javaScript_fold")
                                syn match	javaScriptFunction	"\<function\>"
                                syn region	javaScriptFunctionFold	start="\<function\>.*[^};]$" end="^\z1}.*$" transparent fold keepend
                            
                                syn sync match javaScriptSync	grouphere javaScriptFunctionFold "\<function\>"
                                syn sync match javaScriptSync	grouphere NONE "^}"
                            
                                setlocal foldmethod=syntax
                                setlocal foldtext=getline(v:foldstart)
    6              0.000004 else
    6              0.000017     syn keyword javaScriptFunction	function
    6              0.000020     syn match	javaScriptBraces	   "[{}\[\]]"
    6              0.000016     syn match	javaScriptParens	   "[()]"
    6              0.000004 endif
                            
    6              0.000012 if main_syntax == "javascript"
                              syn sync fromstart
                              syn sync maxlines=100
                            
                              syn sync ccomment javaScriptComment
    6              0.000003 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
    6              0.000011 hi def link javaScriptComment		Comment
    6              0.000007 hi def link javaScriptLineComment		Comment
    6              0.000006 hi def link javaScriptCommentTodo		Todo
    6              0.000006 hi def link javaScriptSpecial		Special
    6              0.000005 hi def link javaScriptStringS		String
    6              0.000005 hi def link javaScriptStringD		String
    6              0.000005 hi def link javaScriptStringT		String
    6              0.000006 hi def link javaScriptCharacter		Character
    6              0.000007 hi def link javaScriptSpecialCharacter	javaScriptSpecial
    6              0.000006 hi def link javaScriptNumber		javaScriptValue
    6              0.000006 hi def link javaScriptConditional		Conditional
    6              0.000005 hi def link javaScriptRepeat		Repeat
    6              0.000005 hi def link javaScriptBranch		Conditional
    6              0.000005 hi def link javaScriptOperator		Operator
    6              0.000006 hi def link javaScriptType			Type
    6              0.000005 hi def link javaScriptStatement		Statement
    6              0.000006 hi def link javaScriptFunction		Function
    6              0.000005 hi def link javaScriptBraces		Function
    6              0.000007 hi def link javaScriptError		Error
    6              0.000007 hi def link javaScrParenError		javaScriptError
    6              0.000005 hi def link javaScriptNull			Keyword
    6              0.000005 hi def link javaScriptBoolean		Boolean
    6              0.000005 hi def link javaScriptRegexpString		String
                            
    6              0.000007 hi def link javaScriptIdentifier		Identifier
    6              0.000005 hi def link javaScriptLabel		Label
    6              0.000005 hi def link javaScriptException		Exception
    6              0.000005 hi def link javaScriptMessage		Keyword
    6              0.000005 hi def link javaScriptGlobal		Keyword
    6              0.000005 hi def link javaScriptMember		Keyword
    6              0.000006 hi def link javaScriptDeprecated		Exception 
    6              0.000005 hi def link javaScriptReserved		Keyword
    6              0.000005 hi def link javaScriptDebug		Debug
    6              0.000005 hi def link javaScriptConstant		Label
    6              0.000005 hi def link javaScriptEmbed		Special
                            
                            
                            
    6              0.000014 let b:current_syntax = "javascript"
    6              0.000009 if main_syntax == 'javascript'
                              unlet main_syntax
    6              0.000003 endif
    6   0.000063   0.000044 let &cpo = s:cpo_save
    6              0.000009 unlet s:cpo_save
                            
                            " vim: ts=8

SCRIPT  /usr/share/nvim/runtime/syntax/vb.vim
Sourced 6 times
Total time:   0.012354
 Self time:   0.012354

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Visual Basic
                            " Maintainer:   Doug Kearns <dougkearns@gmail.com>
                            " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
                            " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
                            "       (tried multiple times to contact, but email bounced)
                            " Last Change:
                            "   2021 Nov 26  Incorporated additions from Doug Kearns
                            "   2005 May 25  Synched with work by Thomas Barthel
                            "   2004 May 30  Added a few keywords
                            
                            " This was thrown together after seeing numerous requests on the
                            " VIM and VIM-DEV mailing lists.  It is by no means complete.
                            " Send comments, suggestions and requests to the maintainer.
                            
                            " quit when a syntax file was already loaded
    6              0.000017 if exists("b:current_syntax")
                                    finish
    6              0.000003 endif
                            
                            " VB is case insensitive
    6              0.000005 syn case ignore
                            
    6              0.000023 syn keyword vbConditional If Then ElseIf Else Select Case
                            
    6              0.000019 syn keyword vbOperator AddressOf And ByRef ByVal Eqv Imp In
    6              0.000017 syn keyword vbOperator Is Like Mod Not Or To Xor
                            
    6              0.000020 syn match vbOperator "[()+.,\-/*=&]"
    6              0.000015 syn match vbOperator "[<>]=\="
    6              0.000012 syn match vbOperator "<>"
    6              0.000014 syn match vbOperator "\s\+_$"
                            
    6              0.000011 syn keyword vbBoolean  True False
    6              0.000010 syn keyword vbConst Null Nothing
                            
    6              0.000015 syn keyword vbRepeat Do For ForEach Loop Next
    6              0.000013 syn keyword vbRepeat Step To Until Wend While
                            
    6              0.000016 syn keyword vbEvents AccessKeyPress Activate ActiveRowChanged
    6              0.000014 syn keyword vbEvents AfterAddFile AfterChangeFileName AfterCloseFile
    6              0.000012 syn keyword vbEvents AfterColEdit AfterColUpdate AfterDelete
    6              0.000012 syn keyword vbEvents AfterInsert AfterLabelEdit AfterRemoveFile
    6              0.000011 syn keyword vbEvents AfterUpdate AfterWriteFile AmbientChanged
    6              0.000011 syn keyword vbEvents ApplyChanges Associate AsyncProgress
    6              0.000012 syn keyword vbEvents AsyncReadComplete AsyncReadProgress AxisActivated
    6              0.000010 syn keyword vbEvents AxisLabelActivated AxisLabelSelected
    6              0.000012 syn keyword vbEvents AxisLabelUpdated AxisSelected AxisTitleActivated
    6              0.000011 syn keyword vbEvents AxisTitleSelected AxisTitleUpdated AxisUpdated
    6              0.000011 syn keyword vbEvents BeforeClick BeforeColEdit BeforeColUpdate
    6              0.000011 syn keyword vbEvents BeforeConnect BeforeDelete BeforeInsert
    6              0.000011 syn keyword vbEvents BeforeLabelEdit BeforeLoadFile BeforeUpdate
    6              0.000010 syn keyword vbEvents BeginRequest BeginTrans ButtonClick
    6              0.000011 syn keyword vbEvents ButtonCompleted ButtonDropDown ButtonGotFocus
    6              0.000014 syn keyword vbEvents ButtonLostFocus CallbackKeyDown Change Changed
    6              0.000014 syn keyword vbEvents ChartActivated ChartSelected ChartUpdated Click
    6              0.000016 syn keyword vbEvents Close CloseQuery CloseUp ColEdit ColResize
    6              0.000014 syn keyword vbEvents Collapse ColumnClick CommitTrans Compare
    6              0.000012 syn keyword vbEvents ConfigChageCancelled ConfigChanged
    6              0.000014 syn keyword vbEvents ConfigChangedCancelled Connect ConnectionRequest
    6              0.000011 syn keyword vbEvents CurrentRecordChanged DECommandAdded
    6              0.000011 syn keyword vbEvents DECommandPropertyChanged DECommandRemoved
    6              0.000011 syn keyword vbEvents DEConnectionAdded DEConnectionPropertyChanged
    6              0.000012 syn keyword vbEvents DEConnectionRemoved DataArrival DataChanged
    6              0.000013 syn keyword vbEvents DataUpdated DateClicked DblClick Deactivate
    6              0.000012 syn keyword vbEvents DevModeChange DeviceArrival DeviceOtherEvent
    6              0.000011 syn keyword vbEvents DeviceQueryRemove DeviceQueryRemoveFailed
    6              0.000011 syn keyword vbEvents DeviceRemoveComplete DeviceRemovePending
    6              0.000013 syn keyword vbEvents Disconnect DisplayChanged Dissociate
    6              0.000013 syn keyword vbEvents DoGetNewFileName Done DonePainting DownClick
    6              0.000015 syn keyword vbEvents DragDrop DragOver DropDown EditProperty EditQuery
    6              0.000016 syn keyword vbEvents EndRequest EnterCell EnterFocus ExitFocus Expand
    6              0.000013 syn keyword vbEvents FontChanged FootnoteActivated FootnoteSelected
    6              0.000014 syn keyword vbEvents FootnoteUpdated Format FormatSize GotFocus
    6              0.000012 syn keyword vbEvents HeadClick HeightChanged Hide InfoMessage
    6              0.000011 syn keyword vbEvents IniProperties InitProperties Initialize
    6              0.000012 syn keyword vbEvents ItemActivated ItemAdded ItemCheck ItemClick
    6              0.000011 syn keyword vbEvents ItemReloaded ItemRemoved ItemRenamed
    6              0.000015 syn keyword vbEvents ItemSeletected KeyDown KeyPress KeyUp LeaveCell
    6              0.000011 syn keyword vbEvents LegendActivated LegendSelected LegendUpdated
    6              0.000012 syn keyword vbEvents LinkClose LinkError LinkExecute LinkNotify
    6              0.000013 syn keyword vbEvents LinkOpen Load LostFocus MouseDown MouseMove
    6              0.000029 syn keyword vbEvents MouseUp NodeCheck NodeClick OLECompleteDrag
    6              0.000015 syn keyword vbEvents OLEDragDrop OLEDragOver OLEGiveFeedback OLESetData
    6              0.000014 syn keyword vbEvents OLEStartDrag ObjectEvent ObjectMove OnAddNew
    6              0.000014 syn keyword vbEvents OnComm Paint PanelClick PanelDblClick PathChange
    6              0.000011 syn keyword vbEvents PatternChange PlotActivated PlotSelected
    6              0.000012 syn keyword vbEvents PlotUpdated PointActivated PointLabelActivated
    6              0.000012 syn keyword vbEvents PointLabelSelected PointLabelUpdated PointSelected
    6              0.000011 syn keyword vbEvents PointUpdated PowerQuerySuspend PowerResume
    6              0.000011 syn keyword vbEvents PowerStatusChanged PowerSuspend ProcessTag
    6              0.000011 syn keyword vbEvents ProcessingTimeout QueryChangeConfig QueryClose
    6              0.000011 syn keyword vbEvents QueryComplete QueryCompleted QueryTimeout
    6              0.000011 syn keyword vbEvents QueryUnload ReadProperties RepeatedControlLoaded
    6              0.000010 syn keyword vbEvents RepeatedControlUnloaded Reposition
    6              0.000011 syn keyword vbEvents RequestChangeFileName RequestWriteFile Resize
    6              0.000011 syn keyword vbEvents ResultsChanged RetainedProject RollbackTrans
    6              0.000011 syn keyword vbEvents RowColChange RowCurrencyChange RowResize
    6              0.000014 syn keyword vbEvents RowStatusChanged Scroll SelChange SelectionChanged
    6              0.000012 syn keyword vbEvents SendComplete SendProgress SeriesActivated
    6              0.000014 syn keyword vbEvents SeriesSelected SeriesUpdated SettingChanged Show
    6              0.000013 syn keyword vbEvents SplitChange Start StateChanged StatusUpdate
    6              0.000014 syn keyword vbEvents SysColorsChanged Terminate TimeChanged Timer
    6              0.000012 syn keyword vbEvents TitleActivated TitleSelected TitleUpdated
    6              0.000010 syn keyword vbEvents UnboundAddData UnboundDeleteRow
    6              0.000011 syn keyword vbEvents UnboundGetRelativeBookmark UnboundReadData
    6              0.000014 syn keyword vbEvents UnboundWriteData Unformat Unload UpClick Updated
    6              0.000011 syn keyword vbEvents UserEvent Validate ValidationError
    6              0.000012 syn keyword vbEvents VisibleRecordChanged WillAssociate WillChangeData
    6              0.000011 syn keyword vbEvents WillDissociate WillExecute WillUpdateRows
    6              0.000008 syn keyword vbEvents WriteProperties
                            
                            
    6              0.000020 syn keyword vbFunction Abs Array Asc AscB AscW Atn Avg BOF CBool CByte
    6              0.000021 syn keyword vbFunction CCur CDate CDbl CInt CLng CSng CStr CVDate CVErr
    6              0.000019 syn keyword vbFunction CVar CallByName Cdec Choose Chr ChrB ChrW Command
    6              0.000018 syn keyword vbFunction Cos Count CreateObject CurDir DDB Date DateAdd
    6              0.000016 syn keyword vbFunction DateDiff DatePart DateSerial DateValue Day Dir
    6              0.000017 syn keyword vbFunction DoEvents EOF Environ Error Exp FV FileAttr
    6              0.000014 syn keyword vbFunction FileDateTime FileLen FilterFix Fix Format
    6              0.000012 syn keyword vbFunction FormatCurrency FormatDateTime FormatNumber
    6              0.000014 syn keyword vbFunction FormatPercent FreeFile GetAllStrings GetAttr
    6              0.000014 syn keyword vbFunction GetAutoServerSettings GetObject GetSetting Hex
    6              0.000015 syn keyword vbFunction Hour IIf IMEStatus IPmt InStr Input InputB
    6              0.000015 syn keyword vbFunction InputBox InstrB Int IsArray IsDate IsEmpty IsError
    6              0.000014 syn keyword vbFunction IsMissing IsNull IsNumeric IsObject Join LBound
    6              0.000379 syn keyword vbFunction LCase LOF LTrim Left LeftB Len LenB LoadPicture
    6              0.000306 syn keyword vbFunction LoadResData LoadResPicture LoadResString Loc Log
    6              0.000346 syn keyword vbFunction MIRR Max Mid MidB Min Minute Month MonthName
    6              0.000509 syn keyword vbFunction MsgBox NPV NPer Now Oct PPmt PV Partition Pmt
    6              0.000454 syn keyword vbFunction QBColor RGB RTrim Rate Replace Right RightB Rnd
    6              0.000566 syn keyword vbFunction Round SLN SYD Second Seek Sgn Shell Sin Space Spc
    6              0.000407 syn keyword vbFunction Split Sqr StDev StDevP Str StrComp StrConv
    6              0.000237 syn keyword vbFunction StrReverse String Sum Switch Tab Tan Time
    6              0.000290 syn keyword vbFunction TimeSerial TimeValue Timer Trim TypeName UBound
    6              0.000355 syn keyword vbFunction UCase Val Var VarP VarType Weekday WeekdayName
    6              0.000064 syn keyword vbFunction Year
                            
    6              0.000238 syn keyword vbMethods AboutBox Accept Activate Add AddCustom AddFile
    6              0.000180 syn keyword vbMethods AddFromFile AddFromGuid AddFromString
    6              0.000237 syn keyword vbMethods AddFromTemplate AddItem AddNew AddToAddInToolbar
    6              0.000177 syn keyword vbMethods AddToolboxProgID Append AppendAppendChunk
    6              0.000294 syn keyword vbMethods AppendChunk Arrange Assert AsyncRead BatchUpdate
    6              0.000182 syn keyword vbMethods BeginQueryEdit BeginTrans Bind BuildPath
    6              0.000182 syn keyword vbMethods CanPropertyChange Cancel CancelAsyncRead
    6              0.000240 syn keyword vbMethods CancelBatch CancelUpdate CaptureImage CellText
    6              0.000243 syn keyword vbMethods CellValue Circle Clear ClearFields ClearSel
    6              0.000258 syn keyword vbMethods ClearSelCols ClearStructure Clone Close Cls
    6              0.000186 syn keyword vbMethods ColContaining CollapseAll ColumnSize CommitTrans
    6              0.000244 syn keyword vbMethods CompactDatabase Compose Connect Copy CopyFile
    6              0.000186 syn keyword vbMethods CopyFolder CopyQueryDef Count CreateDatabase
    6              0.000185 syn keyword vbMethods CreateDragImage CreateEmbed CreateField
    6              0.000243 syn keyword vbMethods CreateFolder CreateGroup CreateIndex CreateLink
    6              0.000185 syn keyword vbMethods CreatePreparedStatement CreatePropery CreateQuery
    6              0.000184 syn keyword vbMethods CreateQueryDef CreateRelation CreateTableDef
    6              0.000186 syn keyword vbMethods CreateTextFile CreateToolWindow CreateUser
    6              0.000189 syn keyword vbMethods CreateWorkspace Customize Cut Delete
    6              0.000187 syn keyword vbMethods DeleteColumnLabels DeleteColumns DeleteFile
    6              0.000130 syn keyword vbMethods DeleteFolder DeleteLines DeleteRowLabels
    6              0.000016 syn keyword vbMethods DeleteRows DeselectAll DesignerWindow DoVerb Drag
    6              0.000016 syn keyword vbMethods Draw DriveExists Edit EditCopy EditPaste EndDoc
    6              0.000014 syn keyword vbMethods EnsureVisible EstablishConnection Execute Exists
    6              0.000015 syn keyword vbMethods Expand Export ExportReport ExtractIcon Fetch
    6              0.000014 syn keyword vbMethods FetchVerbs FileExists Files FillCache Find
    6              0.000014 syn keyword vbMethods FindFirst FindItem FindLast FindNext FindPrevious
    6              0.000013 syn keyword vbMethods FolderExists Forward GetAbsolutePathName
    6              0.000013 syn keyword vbMethods GetBaseName GetBookmark GetChunk GetClipString
    6              0.000015 syn keyword vbMethods GetData GetDrive GetDriveName GetFile GetFileName
    6              0.000012 syn keyword vbMethods GetFirstVisible GetFolder GetFormat GetHeader
    6              0.000012 syn keyword vbMethods GetLineFromChar GetNumTicks GetParentFolderName
    6              0.000011 syn keyword vbMethods GetRows GetSelectedPart GetSelection
    6              0.000012 syn keyword vbMethods GetSpecialFolder GetTempName GetText
    6              0.000014 syn keyword vbMethods GetVisibleCount GoBack GoForward Hide HitTest
    6              0.000013 syn keyword vbMethods HoldFields Idle Import InitializeLabels Insert
    6              0.000011 syn keyword vbMethods InsertColumnLabels InsertColumns InsertFile
    6              0.000010 syn keyword vbMethods InsertLines InsertObjDlg InsertRowLabels
    6              0.000015 syn keyword vbMethods InsertRows Item Keys KillDoc Layout Line Lines
    6              0.000013 syn keyword vbMethods LinkExecute LinkPoke LinkRequest LinkSend Listen
    6              0.000013 syn keyword vbMethods LoadFile LoadResData LoadResPicture LoadResString
    6              0.000011 syn keyword vbMethods LogEvent MakeCompileFile MakeCompiledFile
    6              0.000012 syn keyword vbMethods MakeReplica MoreResults Move MoveData MoveFile
    6              0.000011 syn keyword vbMethods MoveFirst MoveFolder MoveLast MoveNext
    6              0.000013 syn keyword vbMethods MovePrevious NavigateTo NewPage NewPassword
    6              0.000014 syn keyword vbMethods NextRecordset OLEDrag OnAddinsUpdate OnConnection
    6              0.000012 syn keyword vbMethods OnDisconnection OnStartupComplete Open
    6              0.000012 syn keyword vbMethods OpenAsTextStream OpenConnection OpenDatabase
    6              0.000013 syn keyword vbMethods OpenQueryDef OpenRecordset OpenResultset OpenURL
    6              0.000013 syn keyword vbMethods Overlay PSet PaintPicture PastSpecialDlg Paste
    6              0.000013 syn keyword vbMethods PeekData Play Point PopulatePartial PopupMenu
    6              0.000013 syn keyword vbMethods Print PrintForm PrintReport PropertyChanged Quit
    6              0.000014 syn keyword vbMethods Raise RandomDataFill RandomFillColumns
    6              0.000013 syn keyword vbMethods RandomFillRows ReFill Read ReadAll ReadFromFile
    6              0.000013 syn keyword vbMethods ReadLine ReadProperty Rebind Refresh RefreshLink
    6              0.000011 syn keyword vbMethods RegisterDatabase ReleaseInstance Reload Remove
    6              0.000012 syn keyword vbMethods RemoveAddInFromToolbar RemoveAll RemoveItem Render
    6              0.000013 syn keyword vbMethods RepairDatabase ReplaceLine Reply ReplyAll Requery
    6              0.000010 syn keyword vbMethods ResetCustom ResetCustomLabel ResolveName
    6              0.000011 syn keyword vbMethods RestoreToolbar Resync Rollback RollbackTrans
    6              0.000013 syn keyword vbMethods RowBookmark RowContaining RowTop Save SaveAs
    6              0.000013 syn keyword vbMethods SaveFile SaveToFile SaveToOle1File SaveToolbar
    6              0.000016 syn keyword vbMethods Scale ScaleX ScaleY Scroll SelPrint SelectAll
    6              0.000015 syn keyword vbMethods SelectPart Send SendData Set SetAutoServerSettings
    6              0.000014 syn keyword vbMethods SetData SetFocus SetOption SetSelection SetSize
    6              0.000014 syn keyword vbMethods SetText SetViewport Show ShowColor ShowFont
    6              0.000012 syn keyword vbMethods ShowHelp ShowOpen ShowPrinter ShowSave
    6              0.000017 syn keyword vbMethods ShowWhatsThis SignOff SignOn Size Skip SkipLine
    6              0.000013 syn keyword vbMethods Span Split SplitContaining StartLabelEdit
    6              0.000015 syn keyword vbMethods StartLogging Stop Synchronize Tag TextHeight
    6              0.000028 syn keyword vbMethods TextWidth ToDefaults Trace TwipsToChartPart
    6              0.000013 syn keyword vbMethods TypeByChartType URLFor Update UpdateControls
    6              0.000013 syn keyword vbMethods UpdateRecord UpdateRow Upto ValidateControls Value
    6              0.000012 syn keyword vbMethods WhatsThisMode Write WriteBlankLines WriteLine
    6              0.000010 syn keyword vbMethods WriteProperty WriteTemplate ZOrder
    6              0.000011 syn keyword vbMethods rdoCreateEnvironment rdoRegisterDataSource
                            
    6              0.000018 syn keyword vbStatement Alias AppActivate As Base Beep Begin Call ChDir
    6              0.000020 syn keyword vbStatement ChDrive Close Const Date Declare DefBool DefByte
    6              0.000017 syn keyword vbStatement DefCur DefDate DefDbl DefDec DefInt DefLng DefObj
    6              0.000018 syn keyword vbStatement DefSng DefStr DefVar Deftype DeleteSetting Dim Do
    6              0.000019 syn keyword vbStatement Each ElseIf End Enum Erase Error Event Exit
    6              0.000018 syn keyword vbStatement Explicit FileCopy For ForEach Function Get GoSub
    6              0.000017 syn keyword vbStatement GoTo Gosub Implements Kill LSet Let Lib LineInput
    6              0.000020 syn keyword vbStatement Load Lock Loop Mid MkDir Name Next On OnError Open
    6              0.000016 syn keyword vbStatement Option Preserve Private Property Public Put RSet
    6              0.000014 syn keyword vbStatement RaiseEvent Randomize ReDim Redim Reset Resume
    6              0.000016 syn keyword vbStatement Return RmDir SavePicture SaveSetting Seek SendKeys
    6              0.000018 syn keyword vbStatement Sendkeys Set SetAttr Static Step Stop Sub Time
    6              0.000016 syn keyword vbStatement Type Unload Unlock Until Wend While Width With
    6              0.000007 syn keyword vbStatement Write
                            
    6              0.000020 syn keyword vbKeyword As Binary ByRef ByVal Date Empty Error Friend Get
    6              0.000019 syn keyword vbKeyword Input Is Len Lock Me Mid New Nothing Null On
    6              0.000015 syn keyword vbKeyword Option Optional ParamArray Print Private Property
    6              0.000013 syn keyword vbKeyword Public PublicNotCreateable OnNewProcessSingleUse
    6              0.000014 syn keyword vbKeyword InSameProcessMultiUse GlobalMultiUse Resume Seek
    6              0.000015 syn keyword vbKeyword Set Static Step String Time WithEvents
                            
    6              0.000008 syn keyword vbTodo contained    TODO
                            
                            "Datatypes
    6              0.000019 syn keyword vbTypes Boolean Byte Currency Date Decimal Double Empty
    6              0.000016 syn keyword vbTypes Integer Long Object Single String Variant
                            
                            "VB defined values
    6              0.000017 syn keyword vbDefine dbBigInt dbBinary dbBoolean dbByte dbChar
    6              0.000016 syn keyword vbDefine dbCurrency dbDate dbDecimal dbDouble dbFloat
    6              0.000015 syn keyword vbDefine dbGUID dbInteger dbLong dbLongBinary dbMemo
    6              0.000015 syn keyword vbDefine dbNumeric dbSingle dbText dbTime dbTimeStamp
    6              0.000009 syn keyword vbDefine dbVarBinary
                            
                            "VB defined values
    6              0.000014 syn keyword vbDefine vb3DDKShadow vb3DFace vb3DHighlight vb3DLight
    6              0.000012 syn keyword vbDefine vb3DShadow vbAbort vbAbortRetryIgnore
    6              0.000012 syn keyword vbDefine vbActiveBorder vbActiveTitleBar vbAlias
    6              0.000011 syn keyword vbDefine vbApplicationModal vbApplicationWorkspace
    6              0.000013 syn keyword vbDefine vbAppTaskManager vbAppWindows vbArchive vbArray
    6              0.000013 syn keyword vbDefine vbBack vbBinaryCompare vbBlack vbBlue vbBoolean
    6              0.000013 syn keyword vbDefine vbButtonFace vbButtonShadow vbButtonText vbByte
    6              0.000013 syn keyword vbDefine vbCalGreg vbCalHijri vbCancel vbCr vbCritical
    6              0.000012 syn keyword vbDefine vbCrLf vbCurrency vbCyan vbDatabaseCompare
    6              0.000013 syn keyword vbDefine vbDataObject vbDate vbDecimal vbDefaultButton1
    6              0.000012 syn keyword vbDefine vbDefaultButton2 vbDefaultButton3 vbDefaultButton4
    6              0.000013 syn keyword vbDefine vbDesktop vbDirectory vbDouble vbEmpty vbError
    6              0.000012 syn keyword vbDefine vbExclamation vbFirstFourDays vbFirstFullWeek
    6              0.000011 syn keyword vbDefine vbFirstJan1 vbFormCode vbFormControlMenu
    6              0.000013 syn keyword vbDefine vbFormFeed vbFormMDIForm vbFriday vbFromUnicode
    6              0.000014 syn keyword vbDefine vbGrayText vbGreen vbHidden vbHide vbHighlight
    6              0.000013 syn keyword vbDefine vbHighlightText vbHiragana vbIgnore vbIMEAlphaDbl
    6              0.000011 syn keyword vbDefine vbIMEAlphaSng vbIMEDisable vbIMEHiragana
    6              0.000012 syn keyword vbDefine vbIMEKatakanaDbl vbIMEKatakanaSng vbIMEModeAlpha
    6              0.000010 syn keyword vbDefine vbIMEModeAlphaFull vbIMEModeDisable
    6              0.000010 syn keyword vbDefine vbIMEModeHangul vbIMEModeHangulFull
    6              0.000010 syn keyword vbDefine vbIMEModeHiragana vbIMEModeKatakana
    6              0.000011 syn keyword vbDefine vbIMEModeKatakanaHalf vbIMEModeNoControl
    6              0.000013 syn keyword vbDefine vbIMEModeOff vbIMEModeOn vbIMENoOp vbIMEOff
    6              0.000012 syn keyword vbDefine vbIMEOn vbInactiveBorder vbInactiveCaptionText
    6              0.000012 syn keyword vbDefine vbInactiveTitleBar vbInfoBackground vbInformation
    6              0.000014 syn keyword vbDefine vbInfoText vbInteger vbKatakana vbKey0 vbKey1
    6              0.000027 syn keyword vbDefine vbKey2 vbKey3 vbKey4 vbKey5 vbKey6 vbKey7 vbKey8
    6              0.000014 syn keyword vbDefine vbKey9 vbKeyA vbKeyAdd vbKeyB vbKeyBack vbKeyC
    6              0.000013 syn keyword vbDefine vbKeyCancel vbKeyCapital vbKeyClear vbKeyControl
    6              0.000012 syn keyword vbDefine vbKeyD vbKeyDecimal vbKeyDelete vbKeyDivide
    6              0.000014 syn keyword vbDefine vbKeyDown vbKeyE vbKeyEnd vbKeyEscape vbKeyExecute
    6              0.000015 syn keyword vbDefine vbKeyF vbKeyF1 vbKeyF10 vbKeyF11 vbKeyF12 vbKeyF13
    6              0.000015 syn keyword vbDefine vbKeyF14 vbKeyF15 vbKeyF16 vbKeyF2 vbKeyF3 vbKeyF4
    6              0.000014 syn keyword vbDefine vbKeyF5 vbKeyF6 vbKeyF7 vbKeyF8 vbKeyF9 vbKeyG
    6              0.000014 syn keyword vbDefine vbKeyH vbKeyHelp vbKeyHome vbKeyI vbKeyInsert
    6              0.000015 syn keyword vbDefine vbKeyJ vbKeyK vbKeyL vbKeyLButton vbKeyLeft vbKeyM
    6              0.000013 syn keyword vbDefine vbKeyMButton vbKeyMenu vbKeyMultiply vbKeyN
    6              0.000011 syn keyword vbDefine vbKeyNumlock vbKeyNumpad0 vbKeyNumpad1
    6              0.000011 syn keyword vbDefine vbKeyNumpad2 vbKeyNumpad3 vbKeyNumpad4
    6              0.000011 syn keyword vbDefine vbKeyNumpad5 vbKeyNumpad6 vbKeyNumpad7
    6              0.000012 syn keyword vbDefine vbKeyNumpad8 vbKeyNumpad9 vbKeyO vbKeyP
    6              0.000013 syn keyword vbDefine vbKeyPageDown vbKeyPageUp vbKeyPause vbKeyPrint
    6              0.000013 syn keyword vbDefine vbKeyQ vbKeyR vbKeyRButton vbKeyReturn vbKeyRight
    6              0.000013 syn keyword vbDefine vbKeyS vbKeySelect vbKeySeparator vbKeyShift
    6              0.000012 syn keyword vbDefine vbKeySnapshot vbKeySpace vbKeySubtract vbKeyT
    6              0.000014 syn keyword vbDefine vbKeyTab vbKeyU vbKeyUp vbKeyV vbKeyW vbKeyX
    6              0.000014 syn keyword vbDefine vbKeyY vbKeyZ vbLf vbLong vbLowerCase vbMagenta
    6              0.000011 syn keyword vbDefine vbMaximizedFocus vbMenuBar vbMenuText
    6              0.000012 syn keyword vbDefine vbMinimizedFocus vbMinimizedNoFocus vbMonday
    6              0.000012 syn keyword vbDefine vbMsgBox vbMsgBoxHelpButton vbMsgBoxRight
    6              0.000011 syn keyword vbDefine vbMsgBoxRtlReading vbMsgBoxSetForeground
    6              0.000014 syn keyword vbDefine vbMsgBoxText vbNarrow vbNewLine vbNo vbNormal
    6              0.000012 syn keyword vbDefine vbNormalFocus vbNormalNoFocus vbNull vbNullChar
    6              0.000012 syn keyword vbDefine vbNullString vbObject vbObjectError vbOK
    6              0.000012 syn keyword vbDefine vbOKCancel vbOKOnly vbProperCase vbQuestion
    6              0.000014 syn keyword vbDefine vbReadOnly vbRed vbRetry vbRetryCancel vbSaturday
    6              0.000012 syn keyword vbDefine vbScrollBars vbSingle vbString vbSunday vbSystem
    6              0.000012 syn keyword vbDefine vbSystemModal vbTab vbTextCompare vbThursday
    6              0.000013 syn keyword vbDefine vbTitleBarText vbTuesday vbUnicode vbUpperCase
    6              0.000012 syn keyword vbDefine vbUseSystem vbUseSystemDayOfWeek vbVariant
    6              0.000013 syn keyword vbDefine vbVerticalTab vbVolume vbWednesday vbWhite vbWide
    6              0.000012 syn keyword vbDefine vbWindowBackground vbWindowFrame vbWindowText
    6              0.000012 syn keyword vbDefine vbYellow vbYes vbYesNo vbYesNoCancel
                            
                            "Numbers
                            "integer number, or floating point number without a dot.
    6              0.000020 syn match vbNumber "\<\d\+\>"
                            "floating point number, with dot
    6              0.000018 syn match vbNumber "\<\d\+\.\d*\>"
                            "floating point number, starting with a dot
    6              0.000015 syn match vbNumber "\.\d\+\>"
                            "syn match  vbNumber            "{[[:xdigit:]-]\+}\|&[hH][[:xdigit:]]\+&"
                            "syn match  vbNumber            ":[[:xdigit:]]\+"
                            "syn match  vbNumber            "[-+]\=\<\d\+\>"
    6              0.000026 syn match  vbFloat              "[-+]\=\<\d\+[eE][\-+]\=\d\+"
    6              0.000027 syn match  vbFloat              "[-+]\=\<\d\+\.\d*\([eE][\-+]\=\d\+\)\="
    6              0.000022 syn match  vbFloat              "[-+]\=\<\.\d\+\([eE][\-+]\=\d\+\)\="
                            
                            " String and Character constants
    6              0.000050 syn region  vbString		start=+"+  end=+"\|$+
    6              0.000038 syn region  vbComment		start="\(^\|\s\)REM\s" end="$" contains=vbTodo
    6              0.000029 syn region  vbComment		start="\(^\|\s\)\'"   end="$" contains=vbTodo
    6              0.000017 syn match   vbLineLabel		"^\h\w\+:"
    6              0.000021 syn match   vbLineNumber	"^\d\+\(:\|\s\|$\)"
    6              0.000022 syn match   vbTypeSpecifier  "\<\a\w*[@\$%&!#]"ms=s+1
    6              0.000020 syn match   vbTypeSpecifier  "#[a-zA-Z0-9]"me=e-1
                            " Conditional Compilation
    6              0.000018 syn match  vbPreProc "^#const\>"
    6              0.000033 syn region vbPreProc matchgroup=PreProc start="^#if\>"     end="\<then\>" transparent contains=TOP
    6              0.000030 syn region vbPreProc matchgroup=PreProc start="^#elseif\>" end="\<then\>" transparent contains=TOP
    6              0.000014 syn match  vbPreProc "^#else\>"
    6              0.000015 syn match  vbPreProc "^#end\s*if\>"
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    6              0.000009 hi def link vbBoolean           Boolean
    6              0.000006 hi def link vbLineNumber        Comment
    6              0.000005 hi def link vbLineLabel         Comment
    6              0.000006 hi def link vbComment           Comment
    6              0.000006 hi def link vbConditional       Conditional
    6              0.000005 hi def link vbConst             Constant
    6              0.000019 hi def link vbDefine            Constant
    6              0.000006 hi def link vbError             Error
    6              0.000005 hi def link vbFunction          Identifier
    6              0.000006 hi def link vbIdentifier        Identifier
    6              0.000024 hi def link vbNumber            Number
    6              0.000005 hi def link vbFloat             Float
    6              0.000005 hi def link vbMethods           PreProc
    6              0.000006 hi def link vbOperator          Operator
    6              0.000005 hi def link vbRepeat            Repeat
    6              0.000008 hi def link vbString            String
    6              0.000005 hi def link vbStatement         Statement
    6              0.000005 hi def link vbKeyword           Statement
    6              0.000007 hi def link vbEvents            Special
    6              0.000005 hi def link vbTodo              Todo
    6              0.000005 hi def link vbTypes             Type
    6              0.000005 hi def link vbTypeSpecifier     Type
    6              0.000005 hi def link vbPreProc           PreProc
                            
    6              0.000016 let b:current_syntax = "vb"
                            
                            " vim: ts=8

SCRIPT  /usr/share/nvim/runtime/syntax/css.vim
Sourced 6 times
Total time:   0.047150
 Self time:   0.047116

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Cascading Style Sheets
                            " Previous Contributor List:
                            "               Jules Wang      <w.jq0722@gmail.com>
                            "               Claudio Fleiner <claudio@fleiner.com>
                            "               Yeti            (Add full CSS2, HTML4 support)
                            "               Nikolai Weibull (Add CSS2 support)
                            " URL:          https://github.com/vim-language-dept/css-syntax.vim
                            " Maintainer:   Jay Sitter <jay@jaysitter.com>
                            " Last Change:  2021 Oct 20
                            
                            " quit when a syntax file was already loaded
    6              0.000019 if !exists("main_syntax")
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'css'
    6              0.000016 elseif exists("b:current_syntax") && b:current_syntax == "css"
                              finish
    6              0.000003 endif
                            
    6              0.000032 let s:cpo_save = &cpo
    6   0.000054   0.000038 set cpo&vim
                            
    6              0.000006 syn case ignore
                            " Add dash to allowed keyword characters.
    6              0.000040 syn iskeyword @,48-57,_,192-255,-
                            
                            " HTML4 tags
    6              0.000020 syn keyword cssTagName abbr address area a b base
    6              0.000015 syn keyword cssTagName bdo blockquote body br button
    6              0.000020 syn keyword cssTagName caption cite code col colgroup dd del
    6              0.000017 syn keyword cssTagName dfn div dl dt em fieldset form
    6              0.000017 syn keyword cssTagName h1 h2 h3 h4 h5 h6 head hr html img i
    6              0.000017 syn keyword cssTagName iframe input ins isindex kbd label legend li
    6              0.000015 syn keyword cssTagName link map menu meta noscript ol optgroup
    6              0.000020 syn keyword cssTagName option p param picture pre q s samp script small
    6              0.000014 syn keyword cssTagName span strong sub sup tbody td
    6              0.000018 syn keyword cssTagName textarea tfoot th thead title tr ul u var
    6              0.000008 syn keyword cssTagName object svg
    6              0.000032 syn match   cssTagName /\<select\>\|\<style\>\|\<table\>/
                            
                            " 34 HTML5 tags
    6              0.000018 syn keyword cssTagName article aside audio bdi canvas command data
    6              0.000018 syn keyword cssTagName datalist details dialog embed figcaption figure footer
    6              0.000016 syn keyword cssTagName header hgroup keygen main mark menuitem meter nav
    6              0.000013 syn keyword cssTagName output progress rt rp ruby section
    6              0.000014 syn keyword cssTagName source summary time track video wbr
                            
                            " Tags not supported in HTML5
                            " acronym applet basefont big center dir
                            " font frame frameset noframes strike tt
                            
    6              0.000013 syn match cssTagName "\*"
                            
                            " selectors
    6              0.000016 syn match cssSelectorOp "[,>+~]"
    6              0.000018 syn match cssSelectorOp2 "[~|^$*]\?=" contained
    6              0.000054 syn region cssAttributeSelector matchgroup=cssSelectorOp start="\[" end="]" contains=cssUnicodeEscape,cssSelectorOp2,cssStringQ,cssStringQQ
                            
                            " .class and #id
    6              0.000029 syn match cssClassName "\.-\=[A-Za-z_][A-Za-z0-9_-]*" contains=cssClassNameDot
    6              0.000011 syn match cssClassNameDot contained '\.'
                            
    6              0.000005 try
    6              0.000027 syn match cssIdentifier "#[A-Za-zÀ-ÿ_@][A-Za-zÀ-ÿ0-9_@-]*"
                            catch /^.*/
                            syn match cssIdentifier "#[A-Za-z_@][A-Za-z0-9_@-]*"
    6              0.000006 endtry
                            
                            " digits
    6              0.000023 syn match cssValueInteger contained "[-+]\=\d\+" contains=cssUnitDecorators
    6              0.000022 syn match cssValueNumber contained "[-+]\=\d\+\(\.\d*\)\=" contains=cssUnitDecorators
    6              0.000055 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=\(mm\|cm\|in\|pt\|pc\|em\|ex\|px\|rem\|dpi\|dppx\|dpcm\|fr\|vw\|vh\|vmin\|vmax\|ch\)\>" contains=cssUnitDecorators
    6              0.000019 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=%" contains=cssUnitDecorators
    6              0.000026 syn match cssValueAngle contained "[-+]\=\d\+\(\.\d*\)\=\(deg\|grad\|rad\)\>" contains=cssUnitDecorators
    6              0.000021 syn match cssValueTime contained "+\=\d\+\(\.\d*\)\=\(ms\|s\)\>" contains=cssUnitDecorators
    6              0.000022 syn match cssValueFrequency contained "+\=\d\+\(\.\d*\)\=\(Hz\|kHz\)\>" contains=cssUnitDecorators
                            
                            " The 16 basic color names
    6              0.000033 syn keyword cssColor contained aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal yellow
                            
                            " 130 more color names
    6              0.000013 syn keyword cssColor contained aliceblue antiquewhite aquamarine azure
    6              0.000015 syn keyword cssColor contained beige bisque blanchedalmond blueviolet brown burlywood
    6              0.000022 syn keyword cssColor contained cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan
    6              0.000033 syn match cssColor contained /\<dark\(blue\|cyan\|goldenrod\|gray\|green\|grey\|khaki\)\>/
    6              0.000035 syn match cssColor contained /\<dark\(magenta\|olivegreen\|orange\|orchid\|red\|salmon\|seagreen\)\>/
    6              0.000021 syn match cssColor contained /\<darkslate\(blue\|gray\|grey\)\>/
    6              0.000019 syn match cssColor contained /\<dark\(turquoise\|violet\)\>/
    6              0.000037 syn keyword cssColor contained deeppink deepskyblue dimgray dimgrey dodgerblue firebrick
    6              0.000015 syn keyword cssColor contained floralwhite forestgreen gainsboro ghostwhite gold
    6              0.000014 syn keyword cssColor contained goldenrod greenyellow grey honeydew hotpink
    6              0.000016 syn keyword cssColor contained indianred indigo ivory khaki lavender lavenderblush lawngreen
    6              0.000011 syn keyword cssColor contained lemonchiffon limegreen linen magenta
    6              0.000030 syn match cssColor contained /\<light\(blue\|coral\|cyan\|goldenrodyellow\|gray\|green\)\>/
    6              0.000029 syn match cssColor contained /\<light\(grey\|pink\|salmon\|seagreen\|skyblue\|yellow\)\>/
    6              0.000025 syn match cssColor contained /\<light\(slategray\|slategrey\|steelblue\)\>/
    6              0.000028 syn match cssColor contained /\<medium\(aquamarine\|blue\|orchid\|purple\|seagreen\)\>/
    6              0.000028 syn match cssColor contained /\<medium\(slateblue\|springgreen\|turquoise\|violetred\)\>/
    6              0.000014 syn keyword cssColor contained midnightblue mintcream mistyrose moccasin navajowhite
    6              0.000014 syn keyword cssColor contained oldlace olivedrab orange orangered orchid
    6              0.000025 syn match cssColor contained /\<pale\(goldenrod\|green\|turquoise\|violetred\)\>/
    6              0.000013 syn keyword cssColor contained papayawhip peachpuff peru pink plum powderblue
    6              0.000015 syn keyword cssColor contained rosybrown royalblue rebeccapurple saddlebrown salmon
    6              0.000016 syn keyword cssColor contained sandybrown seagreen seashell sienna skyblue slateblue
    6              0.000016 syn keyword cssColor contained slategray slategrey snow springgreen steelblue tan
    6              0.000013 syn keyword cssColor contained thistle tomato turquoise violet wheat
    6              0.000009 syn keyword cssColor contained whitesmoke yellowgreen
                            
                            " FIXME: These are actually case-insensitive too, but (a) specs recommend using
                            " mixed-case (b) it's hard to highlight the word `Background' correctly in
                            " all situations
    6              0.000007 syn case match
    6              0.000083 syn keyword cssColor contained ActiveBorder ActiveCaption AppWorkspace ButtonFace ButtonHighlight ButtonShadow ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder InactiveCaption InactiveCaptionText InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText Background
    6              0.000004 syn case ignore
                            
    6              0.000018 syn match cssImportant contained "!\s*important\>"
    6              0.000019 syn match cssCustomProp contained "\<--[a-zA-Z0-9-_]*\>"
                            
    6              0.000014 syn match cssColor contained "\<transparent\>"
    6              0.000013 syn match cssColor contained "\<currentColor\>"
    6              0.000011 syn match cssColor contained "\<white\>"
    6              0.000020 syn match cssColor contained "#\x\{3,4\}\>" contains=cssUnitDecorators
    6              0.000017 syn match cssColor contained "#\x\{6\}\>" contains=cssUnitDecorators
    6              0.000017 syn match cssColor contained "#\x\{8\}\>" contains=cssUnitDecorators
                            
    6              0.000049 syn region cssURL contained matchgroup=cssFunctionName start="\<\(uri\|url\|local\|format\)\s*(" end=")" contains=cssStringQ,cssStringQQ oneline
    6              0.002958 syn region cssMathGroup contained matchgroup=cssMathParens start="(" end=")" containedin=cssFunction,cssMathGroup contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
    6              0.002648 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(var\|calc\)\s*(" end=")" contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
    6              0.000065 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgb\|clip\|attr\|counter\|rect\|cubic-bezier\|steps\)\s*(" end=")" oneline  contains=cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma
    6              0.000056 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgba\|hsl\|hsla\|color-stop\|from\|to\)\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma,cssFunction
    6              0.000060 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(linear-\|radial-\|conic-\)\=\gradient\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunction,cssGradientAttr,cssFunctionComma
    6              0.000098 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(matrix\(3d\)\=\|scale\(3d\|X\|Y\|Z\)\=\|translate\(3d\|X\|Y\|Z\)\=\|skew\(X\|Y\)\=\|rotate\(3d\|X\|Y\|Z\)\=\|perspective\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
    6              0.000072 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(blur\|brightness\|contrast\|drop-shadow\|grayscale\|hue-rotate\|invert\|opacity\|saturate\|sepia\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
    6              0.000026 syn keyword cssGradientAttr contained top bottom left right cover center middle ellipse at
    6              0.000011 syn match cssFunctionComma contained ","
                            
                            " Common Prop and Attr
    6              0.000018 syn keyword cssCommonAttr contained auto none inherit all default normal
    6              0.000016 syn keyword cssCommonAttr contained top bottom center stretch hidden visible
    6              0.000022 syn match cssCommonAttr contained "\<\(max-\|min-\|fit-\)content\>"
                            "------------------------------------------------
                            " CSS Animations
                            " http://www.w3.org/TR/css3-animations/
    6              0.000052 syn match cssAnimationProp contained "\<animation\(-\(delay\|direction\|duration\|fill-mode\|name\|play-state\|timing-function\|iteration-count\)\)\=\>"
                            
                            " animation-direction attributes
    6              0.000010 syn keyword cssAnimationAttr contained alternate reverse
    6              0.000017 syn match cssAnimationAttr contained "\<alternate-reverse\>"
                            
                            " animation-fill-mode attributes
    6              0.000011 syn keyword cssAnimationAttr contained forwards backwards both
                            
                            " animation-play-state attributes
    6              0.000008 syn keyword cssAnimationAttr contained running paused
                            
                            " animation-iteration-count attributes
    6              0.000007 syn keyword cssAnimationAttr contained infinite
                            "------------------------------------------------
                            "  CSS Backgrounds and Borders Module Level 3
                            "  http://www.w3.org/TR/css3-background/
    6              0.000041 syn match cssBackgroundProp contained "\<background\(-\(attachment\|clip\|color\|image\|origin\|position\|repeat\|size\)\)\=\>"
                            " background-attachment attributes
    6              0.000012 syn keyword cssBackgroundAttr contained scroll fixed local
                            
                            " background-position attributes
    6              0.000013 syn keyword cssBackgroundAttr contained left center right top bottom
                            
                            " background-repeat attributes
    6              0.000015 syn match cssBackgroundAttr contained "\<no-repeat\>"
    6              0.000017 syn match cssBackgroundAttr contained "\<repeat\(-[xy]\)\=\>"
                            
                            " background-size attributes
    6              0.000010 syn keyword cssBackgroundAttr contained cover contain
                            
    6              0.000036 syn match cssBorderProp contained "\<border\(-\(top\|right\|bottom\|left\)\)\=\(-\(width\|color\|style\)\)\=\>"
    6              0.000029 syn match cssBorderProp contained "\<border\(-\(top\|bottom\)-\(left\|right\)\)\=-radius\>"
    6              0.000031 syn match cssBorderProp contained "\<border-image\(-\(outset\|repeat\|slice\|source\|width\)\)\=\>"
    6              0.000018 syn match cssBorderProp contained "\<box-decoration-break\>"
    6              0.000013 syn match cssBorderProp contained "\<box-shadow\>"
                            
                            " border-image attributes
    6              0.000012 syn keyword cssBorderAttr contained stretch round fill
                            
                            " border-style attributes
    6              0.000020 syn keyword cssBorderAttr contained dotted dashed solid double groove ridge inset outset
                            
                            " border-width attributes
    6              0.000010 syn keyword cssBorderAttr contained thin thick medium
                            
                            " box-decoration-break attributes
    6              0.000009 syn keyword cssBorderAttr contained clone slice
                            "------------------------------------------------
                            
    6              0.000025 syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
    6              0.000023 syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
    6              0.000020 syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
    6              0.000017 syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
    6              0.000013 syn keyword cssBoxAttr contained visible hidden scroll auto
    6              0.000021 syn match cssBoxAttr contained "\<no-\(display\|content\)\>"
                            
    6              0.000007 syn keyword cssCascadeProp contained all
    6              0.000010 syn keyword cssCascadeAttr contained initial unset revert
                            
    6              0.000007 syn keyword cssColorProp contained opacity
    6              0.000014 syn match cssColorProp contained "\<color-profile\>"
    6              0.000016 syn match cssColorProp contained "\<rendering-intent\>"
                            
                            
    6              0.000021 syn match cssDimensionProp contained "\<\(min\|max\)-\(width\|height\)\>"
    6              0.000007 syn keyword cssDimensionProp contained height
    6              0.000006 syn keyword cssDimensionProp contained width
                            
                            " CSS Flexible Box Layout Module Level 1
                            " http://www.w3.org/TR/css3-flexbox/
                            " CSS Box Alignment Module Level 3
                            " http://www.w3.org/TR/css-align-3/
    6              0.000031 syn match cssFlexibleBoxProp contained "\<flex\(-\(direction\|wrap\|flow\|grow\|shrink\|basis\)\)\=\>"
    6              0.000027 syn match cssFlexibleBoxProp contained "\<\(align\|justify\)\(-\(items\|self\|content\)\)\=\>"
    6              0.000007 syn keyword cssFlexibleBoxProp contained order
                            
    6              0.000037 syn match cssFlexibleBoxAttr contained "\<\(row\|column\|wrap\)\(-reverse\)\=\>"
    6              0.000014 syn keyword cssFlexibleBoxAttr contained nowrap stretch baseline center
    6              0.000018 syn match cssFlexibleBoxAttr contained "\<flex\(-\(start\|end\)\)\=\>"
    6              0.000023 syn match cssFlexibleBoxAttr contained "\<space\(-\(between\|around\|evenly\)\)\=\>"
                            
                            " CSS Fonts Module Level 3
                            " http://www.w3.org/TR/css-fonts-3/
    6              0.000082 syn match cssFontProp contained "\<font\(-\(family\|\|feature-settings\|kerning\|language-override\|size\(-adjust\)\=\|stretch\|style\|synthesis\|variant\(-\(alternates\|caps\|east-asian\|ligatures\|numeric\|position\)\)\=\|weight\)\)\=\>"
                            
                            " font attributes
    6              0.000011 syn keyword cssFontAttr contained icon menu caption
    6              0.000014 syn match cssFontAttr contained "\<message-box\>"
    6              0.000013 syn match cssFontAttr contained "\<status-bar\>"
    6              0.000008 syn keyword cssFontAttr contained larger smaller
    6              0.000022 syn match cssFontAttr contained "\<\(x\{1,2\}-\)\=\(large\|small\)\>"
    6              0.000018 syn match cssFontAttr contained "\<small-\(caps\|caption\)\>"
                            " font-family attributes
    6              0.000015 syn keyword cssFontAttr contained sans-serif serif cursive fantasy monospace
                            " font-feature-settings attributes
    6              0.000009 syn keyword cssFontAttr contained on off
                            " font-stretch attributes
    6              0.000028 syn match cssFontAttr contained "\<\(\(ultra\|extra\|semi\)-\)\=\(condensed\|expanded\)\>"
                            " font-style attributes
    6              0.000008 syn keyword cssFontAttr contained italic oblique
                            " font-synthesis attributes
    6              0.000007 syn keyword cssFontAttr contained weight style
                            " font-weight attributes
    6              0.000008 syn keyword cssFontAttr contained bold bolder lighter
                            " TODO: font-variant-* attributes
                            "------------------------------------------------
                            
                            " Webkit specific property/attributes
    6              0.000013 syn match cssFontProp contained "\<font-smooth\>"
    6              0.000020 syn match cssFontAttr contained "\<\(subpixel-\)\=\antialiased\>"
                            
                            
                            " CSS Multi-column Layout Module
                            " http://www.w3.org/TR/css3-multicol/
    6              0.000023 syn match cssMultiColumnProp contained "\<break-\(after\|before\|inside\)\>"
    6              0.000038 syn match cssMultiColumnProp contained "\<column-\(count\|fill\|gap\|rule\(-\(color\|style\|width\)\)\=\|span\|width\)\>"
    6              0.000009 syn keyword cssMultiColumnProp contained columns
    6              0.000009 syn keyword cssMultiColumnAttr contained balance medium
    6              0.000013 syn keyword cssMultiColumnAttr contained always left right page column
    6              0.000019 syn match cssMultiColumnAttr contained "\<avoid\(-\(page\|column\)\)\=\>"
                            
                            " http://www.w3.org/TR/css3-break/#page-break
    6              0.000024 syn match cssMultiColumnProp contained "\<page\(-break-\(before\|after\|inside\)\)\=\>"
                            
                            " http://www.w3.org/TR/SVG11/interact.html
    6              0.000016 syn match cssInteractProp contained "\<pointer-events\>"
    6              0.000030 syn match cssInteractAttr contained "\<\(visible\)\=\(Painted\|Fill\|Stroke\)\=\>"
                            
                            " TODO find following items in w3c docs.
    6              0.000009 syn keyword cssGeneratedContentProp contained quotes crop
    6              0.000020 syn match cssGeneratedContentProp contained "\<counter-\(reset\|increment\)\>"
    6              0.000012 syn match cssGeneratedContentProp contained "\<move-to\>"
    6              0.000014 syn match cssGeneratedContentProp contained "\<page-policy\>"
    6              0.000022 syn match cssGeneratedContentAttr contained "\<\(no-\)\=\(open\|close\)-quote\>"
                            
                            " https://www.w3.org/TR/css-grid-1/
    6              0.000012 syn match cssGridProp contained "\<grid\>"
    6              0.000025 syn match cssGridProp contained "\<grid-template\(-\(columns\|rows\|areas\)\)\=\>"
    6              0.000025 syn match cssGridProp contained "\<grid-\(column\|row\)\(-\(start\|end\|gap\)\)\=\>"
    6              0.000016 syn match cssGridProp contained "\<grid-\(area\|gap\)\>"
    6              0.000010 syn match cssGridProp contained "\<gap\>"
    6              0.000021 syn match cssGridProp contained "\<grid-auto-\(flow\|rows\|columns\)\>"
                            
    6              0.000022 syn match cssHyerlinkProp contained "\<target\(-\(name\|new\|position\)\)\=\>"
                            
    6              0.000024 syn match cssListProp contained "\<list-style\(-\(type\|position\|image\)\)\=\>"
    6              0.000026 syn match cssListAttr contained "\<\(lower\|upper\)-\(roman\|alpha\|greek\|latin\)\>"
    6              0.000021 syn match cssListAttr contained "\<\(hiragana\|katakana\)\(-iroha\)\=\>"
    6              0.000026 syn match cssListAttr contained "\<\(decimal\(-leading-zero\)\=\|cjk-ideographic\)\>"
    6              0.000016 syn keyword cssListAttr contained disc circle square hebrew armenian georgian
    6              0.000008 syn keyword cssListAttr contained inside outside
                            
                            " object-fit https://www.w3.org/TR/css-images-3/#the-object-fit
    6              0.000018 syn match cssObjectProp contained "\<object-\(fit\|position\)\>"
    6              0.000015 syn keyword cssObjectAttr contained fill contain cover scale-down
                            
    6              0.000029 syn keyword cssPositioningProp contained bottom clear clip display float left
    6              0.000012 syn keyword cssPositioningProp contained position right top visibility
    6              0.000013 syn match cssPositioningProp contained "\<z-index\>"
    6              0.000012 syn keyword cssPositioningAttr contained block compact grid
    6              0.000043 syn match cssPositioningAttr contained "\<table\(-\(row-group\|\(header\|footer\)-group\|row\|column\(-group\)\=\|cell\|caption\)\)\=\>"
    6              0.000009 syn keyword cssPositioningAttr contained left right both
    6              0.000013 syn match cssPositioningAttr contained "\<list-item\>"
    6              0.000025 syn match cssPositioningAttr contained "\<inline\(-\(block\|box\|table\|grid\|flex\)\)\=\>"
    6              0.000014 syn match cssPositioningAttr contained "\<flow\(-root\)\=\>"
    6              0.000016 syn keyword cssPositioningAttr contained static relative absolute fixed subgrid sticky
                            
    6              0.000014 syn keyword cssPrintAttr contained landscape portrait crop cross always
                            
    6              0.000039 syn match cssTableProp contained "\<\(caption-side\|table-layout\|border-collapse\|border-spacing\|empty-cells\)\>"
    6              0.000018 syn keyword cssTableAttr contained fixed collapse separate show hide once always
                            
                            
    6              0.000012 syn keyword cssTextProp contained color direction hyphens
    6              0.000060 syn match cssTextProp "\<\(\(word\|letter\)-spacing\|text\(-\(decoration\|transform\|align\|index\|shadow\)\)\=\|vertical-align\|unicode-bidi\|line-height\)\>"
    6              0.000041 syn match cssTextProp contained "\<text-\(justify\|outline\|warp\|align-last\|size-adjust\|rendering\|stroke\|indent\)\>"
    6              0.000027 syn match cssTextProp contained "\<\(word\|line\)-break\|\(overflow\|word\)-wrap\>"
    6              0.000014 syn match cssTextProp contained "\<white-space\>"
    6              0.000017 syn match cssTextProp contained "\<hanging-punctuation\>"
    6              0.000012 syn match cssTextProp contained "\<tab-size\>"
    6              0.000015 syn match cssTextProp contained "\<punctuation-trim\>"
    6              0.000014 syn match cssTextAttr contained "\<line-through\>"
    6              0.000019 syn match cssTextAttr contained "\<\(text-\)\=\(top\|bottom\)\>"
    6              0.000012 syn keyword cssTextAttr contained ltr rtl embed nowrap
    6              0.000015 syn keyword cssTextAttr contained underline overline blink sub super middle
    6              0.000011 syn keyword cssTextAttr contained capitalize uppercase lowercase
    6              0.000011 syn keyword cssTextAttr contained justify baseline sub super
    6              0.000014 syn keyword cssTextAttr contained optimizeLegibility optimizeSpeed geometricPrecision
    6              0.000016 syn match cssTextAttr contained "\<pre\(-\(line\|wrap\)\)\=\>"
    6              0.000016 syn match cssTextAttr contained "\<\(allow\|force\)-end\>"
    6              0.000011 syn keyword cssTextAttr contained start end adjacent
    6              0.000023 syn match cssTextAttr contained "\<inter-\(word\|ideographic\|cluster\)\>"
    6              0.000012 syn keyword cssTextAttr contained distribute kashida first last
    6              0.000012 syn keyword cssTextAttr contained clip ellipsis unrestricted suppress
    6              0.000012 syn match cssTextAttr contained "\<break-all\>"
    6              0.000013 syn match cssTextAttr contained "\<break-word\>"
    6              0.000006 syn keyword cssTextAttr contained manual
    6              0.000013 syn match cssTextAttr contained "\<bidi-override\>"
                            
    6              0.000022 syn match cssTransformProp contained "\<transform\(-\(origin\|style\)\)\=\>"
    6              0.000018 syn match cssTransformProp contained "\<perspective\(-origin\)\=\>"
    6              0.000017 syn match cssTransformProp contained "\<backface-visibility\>"
                            
                            " CSS Transitions
                            " http://www.w3.org/TR/css3-transitions/
    6              0.000034 syn match cssTransitionProp contained "\<transition\(-\(delay\|duration\|property\|timing-function\)\)\=\>"
                            
                            " transition-time-function attributes
    6              0.000019 syn match cssTransitionAttr contained "\<linear\(-gradient\)\@!\>"
    6              0.000019 syn match cssTransitionAttr contained "\<ease\(-\(in-out\|out\|in\)\)\=\>"
    6              0.000016 syn match cssTransitionAttr contained "\<step\(-start\|-end\)\=\>"
                            "------------------------------------------------
                            " CSS Basic User Interface Module Level 3 (CSS3 UI)
                            " http://www.w3.org/TR/css3-ui/
    6              0.000014 syn match cssUIProp contained "\<box-sizing\>"
    6              0.000024 syn match cssUIAttr contained "\<\(content\|padding\|border\)\(-box\)\=\>"
                            
    6              0.000008 syn keyword cssUIProp contained cursor
    6              0.000030 syn match cssUIAttr contained "\<\(\([ns]\=[ew]\=\)\|col\|row\|nesw\|nwse\)-resize\>"
    6              0.000016 syn keyword cssUIAttr contained crosshair help move pointer alias copy
    6              0.000012 syn keyword cssUIAttr contained progress wait text cell move
    6              0.000014 syn match cssUIAttr contained "\<context-menu\>"
    6              0.000012 syn match cssUIAttr contained "\<no-drop\>"
    6              0.000012 syn match cssUIAttr contained "\<not-allowed\>"
    6              0.000012 syn match cssUIAttr contained "\<all-scroll\>"
    6              0.000016 syn match cssUIAttr contained "\<\(vertical-\)\=text\>"
    6              0.000015 syn match cssUIAttr contained "\<zoom\(-in\|-out\)\=\>"
                            
    6              0.000059 syn match cssUIProp contained "\<ime-mode\>"
    6              0.000012 syn keyword cssUIAttr contained active inactive disabled
                            
    6              0.000030 syn match cssUIProp contained "\<nav-\(down\|index\|left\|right\|up\)\=\>"
    6              0.000025 syn match cssUIProp contained "\<outline\(-\(width\|style\|color\|offset\)\)\=\>"
    6              0.000007 syn keyword cssUIAttr contained invert
                            
    6              0.000007 syn keyword cssUIProp contained icon resize
    6              0.000009 syn keyword cssUIAttr contained both horizontal vertical
                            
    6              0.000014 syn match cssUIProp contained "\<text-overflow\>"
    6              0.000009 syn keyword cssUIAttr contained clip ellipsis
                            
    6              0.000014 syn match cssUIProp contained "\<image-rendering\>"
    6              0.000007 syn keyword cssUIAttr contained pixellated
    6              0.000013 syn match cssUIAttr contained "\<crisp-edges\>"
                            
                            "------------------------------------------------
                            " Webkit/iOS specific attributes
    6              0.000013 syn match cssUIAttr contained '\<preserve-3d\>'
                            " IE specific attributes
    6              0.000012 syn match cssIEUIAttr contained '\<bicubic\>'
                            
                            " Webkit/iOS specific properties
    6              0.000029 syn match cssUIProp contained '\<\(tap-highlight-color\|user-select\|touch-callout\)\>'
                            " IE specific properties
    6              0.000024 syn match cssIEUIProp contained '\<\(interpolation-mode\|zoom\|filter\)\>'
                            
                            " Webkit/Firebox specific properties/attributes
    6              0.000006 syn keyword cssUIProp contained appearance
    6              0.000014 syn keyword cssUIAttr contained window button field icon document menu
                            
                            
    6              0.000024 syn match cssAuralProp contained "\<\(pause\|cue\)\(-\(before\|after\)\)\=\>"
    6              0.000050 syn match cssAuralProp contained "\<\(play-during\|speech-rate\|voice-family\|pitch\(-range\)\=\|speak\(-\(punctuation\|numeral\|header\)\)\=\)\>"
    6              0.000017 syn keyword cssAuralProp contained volume during azimuth elevation stress richness
    6              0.000018 syn match cssAuralAttr contained "\<\(x-\)\=\(soft\|loud\)\>"
    6              0.000007 syn keyword cssAuralAttr contained silent
    6              0.000013 syn match cssAuralAttr contained "\<spell-out\>"
    6              0.000008 syn keyword cssAuralAttr contained non mix
    6              0.000016 syn match cssAuralAttr contained "\<\(left\|right\)-side\>"
    6              0.000023 syn match cssAuralAttr contained "\<\(far\|center\)-\(left\|center\|right\)\>"
    6              0.000010 syn keyword cssAuralAttr contained leftwards rightwards behind
    6              0.000012 syn keyword cssAuralAttr contained below level above lower higher
    6              0.000020 syn match cssAuralAttr contained "\<\(x-\)\=\(slow\|fast\|low\|high\)\>"
    6              0.000009 syn keyword cssAuralAttr contained faster slower
    6              0.000017 syn keyword cssAuralAttr contained male female child code digits continuous
                            
                            " mobile text
    6              0.000016 syn match cssMobileTextProp contained "\<text-size-adjust\>"
                            
    6              0.000012 syn keyword cssMediaProp contained width height orientation scan
    6              0.000014 syn keyword cssMediaProp contained any-hover any-pointer color-gamut grid hover
    6              0.000013 syn keyword cssMediaProp contained overflow-block overflow-inline pointer update
    6              0.000026 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(\(device\)-\)\=aspect-ratio\>/
    6              0.000027 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-pixel-ratio\>/
    6              0.000024 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-\(height\|width\)\>/
    6              0.000038 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(height\|width\|resolution\|monochrome\|color\(-index\)\=\)\>/
    6              0.000014 syn keyword cssMediaAttr contained portrait landscape progressive interlace
    6              0.000017 syn keyword cssMediaAttr contained coarse fast fine hover infinite p3 paged
    6              0.000012 syn keyword cssMediaAttr contained rec2020 scroll slow srgb
    6              0.000033 syn match cssKeyFrameProp contained /\(\d\+\(\.\d\+\)\?%\|\(\<from\|to\>\)\)/ nextgroup=cssDefinition
    6              0.000069 syn match cssPageMarginProp /@\(\(top\|left\|right\|bottom\)-\(left\|center\|right\|middle\|bottom\)\)\(-corner\)\=/ contained nextgroup=cssDefinition
    6              0.000010 syn keyword cssPageProp contained content size
    6              0.000009 syn keyword cssPageProp contained orphans widows
    6              0.000008 syn keyword cssFontDescriptorProp contained src
    6              0.000015 syn match cssFontDescriptorProp contained "\<unicode-range\>"
                            " unicode-range attributes
    6              0.000022 syn match cssFontDescriptorAttr contained "U+[0-9A-Fa-f?]\+"
    6              0.000015 syn match cssFontDescriptorAttr contained "U+\x\+-\x\+"
                            
    6              0.000012 syn match cssBraces contained "[{}]"
    6              0.000028 syn match cssError contained "{@<>"
    6              0.006492 syn region cssDefinition transparent matchgroup=cssBraces start='{' end='}' contains=cssTagName,cssAttributeSelector,cssClassName,cssIdentifier,cssAtRule,cssAttrRegion,css.*Prop,cssComment,cssValue.*,cssColor,cssURL,cssImportant,cssCustomProp,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssVendor,cssDefinition,cssHacks,cssNoise fold
    6              0.000018 syn match cssBraceError "}"
    6              0.000013 syn match cssAttrComma ","
                            
                            " Pseudo class
                            " https://www.w3.org/TR/selectors-4/
    6              0.000039 syn match cssPseudoClass ":[A-Za-z0-9_-]*" contains=cssNoise,cssPseudoClassId,cssUnicodeEscape,cssVendor,cssPseudoClassFn
    6              0.000020 syn keyword cssPseudoClassId contained link visited active hover before after left right
    6              0.000019 syn keyword cssPseudoClassId contained root empty target enabled disabled checked invalid
    6              0.000022 syn match cssPseudoClassId contained "\<first-\(line\|letter\)\>"
    6              0.000026 syn match cssPseudoClassId contained "\<\(first\|last\|only\)-\(of-type\|child\)\>"
    6              0.000022 syn match cssPseudoClassId contained  "\<focus\(-within\|-visible\)\=\>"
    6              0.000063 syn region cssPseudoClassFn contained matchgroup=cssFunctionName start="\<\(not\|is\|lang\|\(nth\|nth-last\)-\(of-type\|child\)\)(" end=")" contains=cssStringQ,cssStringQQ,cssTagName,cssAttributeSelector,cssClassName,cssIdentifier
                            " ------------------------------------
                            " Vendor specific properties
    6              0.000015 syn match cssPseudoClassId contained  "\<selection\>"
    6              0.000019 syn match cssPseudoClassId contained  "\<\(input-\)\=placeholder\>"
                            
                            " Misc highlight groups
    6              0.000058 syntax match cssUnitDecorators /\(#\|-\|+\|%\|mm\|cm\|in\|pt\|pc\|em\|ex\|px\|ch\|rem\|vh\|vw\|vmin\|vmax\|dpi\|dppx\|dpcm\|Hz\|kHz\|s\|ms\|deg\|grad\|rad\)/ contained
    6              0.000014 syntax match cssNoise contained /\(:\|;\|\/\)/
                            
                            " Comment
    6              0.000033 syn region cssComment start="/\*" end="\*/" contains=@Spell fold
                            
    6              0.000022 syn match cssUnicodeEscape "\\\x\{1,6}\s\?"
    6              0.000013 syn match cssSpecialCharQQ +\\\\\|\\"+ contained
    6              0.000013 syn match cssSpecialCharQ +\\\\\|\\'+ contained
    6              0.000038 syn region cssStringQQ start=+"+ skip=+\\\\\|\\"+ end=+"+ contains=cssUnicodeEscape,cssSpecialCharQQ
    6              0.000035 syn region cssStringQ start=+'+ skip=+\\\\\|\\'+ end=+'+ contains=cssUnicodeEscape,cssSpecialCharQ
                            
                            " Vendor Prefix
    6              0.000021 syn match cssVendor contained "-\(webkit\|moz\|o\|ms\)-"
                            
                            " Various CSS Hack characters
                            " In earlier versions of IE (6 and 7), one can prefix property names
                            " with a _ or * to isolate those definitions to particular versions of IE
                            " This is purely decorative and therefore we assign to the same highlight
                            " group to cssVendor, for more information:
                            " http://www.paulirish.com/2009/browser-specific-css-hacks/
    6              0.000012 syn match cssHacks contained /\(_\|*\)/
                            
                            " Attr Enhance
                            " Some keywords are both Prop and Attr, so we have to handle them
                            " cssPseudoClassId is hidden by cssAttrRegion, so we add it here. see #69
    6              0.009233 syn region cssAttrRegion start=/:/ end=/\ze\(;\|)\|}\|{\)/ contained contains=cssPseudoClassId,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
                            " Hack for transition
                            " 'transition' has Props after ':'.
    6              0.012043 syn region cssAttrRegion start=/transition\s*:/ end=/\ze\(;\|)\|}\)/ contained contains=css.*Prop,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
    6              0.000046 syn match cssAtKeyword /@\(font-face\|media\|keyframes\|import\|charset\|namespace\|page\|supports\)/
                            
    6              0.000014 syn keyword cssAtRuleLogical only not and contained
                            
                            " @media
                            " Reference: http://www.w3.org/TR/css3-mediaqueries/
    6              0.000063 syn region cssAtRule start=/@media\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssVendor,cssMediaType,cssComment,cssCustomProp,cssFunctionName nextgroup=cssDefinition
    6              0.000028 syn keyword cssMediaType contained screen print aural braille embossed handheld projection tty tv speech all contained
                            
                            " @page
                            " http://www.w3.org/TR/css3-page/
    6              0.000035 syn region cssAtRule start=/@page\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssPagePseudo,cssComment nextgroup=cssDefinition
    6              0.000022 syn match cssPagePseudo /:\(left\|right\|first\|blank\)/ contained skipwhite skipnl
                            " @keyframe
                            " http://www.w3.org/TR/css3-animations/#keyframes
    6              0.000042 syn region cssAtRule start=/@\(-[a-z]\+-\)\=keyframes\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssVendor,cssComment nextgroup=cssDefinition
                            
    6              0.000053 syn region cssAtRule start=/@import\>/    end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword,cssURL,cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssMediaType
    6              0.000034 syn region cssAtRule start=/@charset\>/   end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
    6              0.000031 syn region cssAtRule start=/@namespace\>/ end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
                            
                            " @supports
                            " https://www.w3.org/TR/css3-conditional/#at-supports
    6              0.005924 syn region cssAtRule start=/@supports\>/ end=/\ze{/ skipwhite skipnl contains=cssAtRuleLogical,cssAttrRegion,css.*Prop,cssValue.*,cssVendor,cssAtKeyword,cssComment nextgroup=cssDefinition
                            
                            
    6              0.000018 if main_syntax == "css"
                              syn sync minlines=10
    6              0.000004 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    6              0.000008 hi def link cssComment Comment
    6              0.000005 hi def link cssVendor Comment
    6              0.000004 hi def link cssHacks Comment
    6              0.000005 hi def link cssTagName Statement
    6              0.000006 hi def link cssDeprecated Error
    6              0.000005 hi def link cssSelectorOp Special
    6              0.000005 hi def link cssSelectorOp2 Special
    6              0.000004 hi def link cssAttrComma Special
                            
    6              0.000005 hi def link cssAnimationProp cssProp
    6              0.000005 hi def link cssBackgroundProp cssProp
    6              0.000004 hi def link cssBorderProp cssProp
    6              0.000004 hi def link cssBoxProp cssProp
    6              0.000004 hi def link cssCascadeProp cssProp
    6              0.000004 hi def link cssColorProp cssProp
    6              0.000006 hi def link cssContentForPagedMediaProp cssProp
    6              0.000004 hi def link cssDimensionProp cssProp
    6              0.000005 hi def link cssFlexibleBoxProp cssProp
    6              0.000004 hi def link cssFontProp cssProp
    6              0.000005 hi def link cssGeneratedContentProp cssProp
    6              0.000004 hi def link cssGridProp cssProp
    6              0.000004 hi def link cssHyerlinkProp cssProp
    6              0.000004 hi def link cssInteractProp cssProp
    6              0.000004 hi def link cssLineboxProp cssProp
    6              0.000004 hi def link cssListProp cssProp
    6              0.000004 hi def link cssMarqueeProp cssProp
    6              0.000005 hi def link cssMultiColumnProp cssProp
    6              0.000005 hi def link cssPagedMediaProp cssProp
    6              0.000005 hi def link cssPositioningProp cssProp
    6              0.000004 hi def link cssObjectProp cssProp
    6              0.000005 hi def link cssPrintProp cssProp
    6              0.000004 hi def link cssRubyProp cssProp
    6              0.000005 hi def link cssSpeechProp cssProp
    6              0.000004 hi def link cssTableProp cssProp
    6              0.000004 hi def link cssTextProp cssProp
    6              0.000005 hi def link cssTransformProp cssProp
    6              0.000005 hi def link cssTransitionProp cssProp
    6              0.000004 hi def link cssUIProp cssProp
    6              0.000004 hi def link cssIEUIProp cssProp
    6              0.000004 hi def link cssAuralProp cssProp
    6              0.000005 hi def link cssRenderProp cssProp
    6              0.000005 hi def link cssMobileTextProp cssProp
                            
    6              0.000005 hi def link cssAnimationAttr cssAttr
    6              0.000004 hi def link cssBackgroundAttr cssAttr
    6              0.000004 hi def link cssBorderAttr cssAttr
    6              0.000005 hi def link cssBoxAttr cssAttr
    6              0.000005 hi def link cssContentForPagedMediaAttr cssAttr
    6              0.000004 hi def link cssDimensionAttr cssAttr
    6              0.000005 hi def link cssFlexibleBoxAttr cssAttr
    6              0.000004 hi def link cssFontAttr cssAttr
    6              0.000006 hi def link cssGeneratedContentAttr cssAttr
    6              0.000004 hi def link cssGridAttr cssAttr
    6              0.000006 hi def link cssHyerlinkAttr cssAttr
    6              0.000004 hi def link cssInteractAttr cssAttr
    6              0.000005 hi def link cssLineboxAttr cssAttr
    6              0.000004 hi def link cssListAttr cssAttr
    6              0.000004 hi def link cssMarginAttr cssAttr
    6              0.000004 hi def link cssMarqueeAttr cssAttr
    6              0.000005 hi def link cssMultiColumnAttr cssAttr
    6              0.000005 hi def link cssPaddingAttr cssAttr
    6              0.000007 hi def link cssPagedMediaAttr cssAttr
    6              0.000004 hi def link cssPositioningAttr cssAttr
    6              0.000005 hi def link cssObjectAttr cssAttr
    6              0.000004 hi def link cssGradientAttr cssAttr
    6              0.000004 hi def link cssPrintAttr cssAttr
    6              0.000004 hi def link cssRubyAttr cssAttr
    6              0.000004 hi def link cssSpeechAttr cssAttr
    6              0.000004 hi def link cssTableAttr cssAttr
    6              0.000004 hi def link cssTextAttr cssAttr
    6              0.000004 hi def link cssTransformAttr cssAttr
    6              0.000004 hi def link cssTransitionAttr cssAttr
    6              0.000004 hi def link cssUIAttr cssAttr
    6              0.000004 hi def link cssIEUIAttr cssAttr
    6              0.000005 hi def link cssAuralAttr cssAttr
    6              0.000004 hi def link cssRenderAttr cssAttr
    6              0.000004 hi def link cssCascadeAttr cssAttr
    6              0.000004 hi def link cssCommonAttr cssAttr
                            
    6              0.000005 hi def link cssPseudoClassId PreProc
    6              0.000005 hi def link cssPseudoClassLang Constant
    6              0.000005 hi def link cssValueLength Number
    6              0.000005 hi def link cssValueInteger Number
    6              0.000004 hi def link cssValueNumber Number
    6              0.000004 hi def link cssValueAngle Number
    6              0.000004 hi def link cssValueTime Number
    6              0.000005 hi def link cssValueFrequency Number
    6              0.000005 hi def link cssFunction Constant
    6              0.000004 hi def link cssURL String
    6              0.000005 hi def link cssFunctionName Function
    6              0.000008 hi def link cssFunctionComma Function
    6              0.000004 hi def link cssColor Constant
    6              0.000004 hi def link cssIdentifier Function
    6              0.000004 hi def link cssAtRule Include
    6              0.000004 hi def link cssAtKeyword PreProc
    6              0.000005 hi def link cssImportant Special
    6              0.000005 hi def link cssCustomProp Special
    6              0.000004 hi def link cssBraces Function
    6              0.000005 hi def link cssBraceError Error
    6              0.000005 hi def link cssError Error
    6              0.000017 hi def link cssUnicodeEscape Special
    6              0.000005 hi def link cssStringQQ String
    6              0.000004 hi def link cssStringQ String
    6              0.000005 hi def link cssAttributeSelector String
    6              0.000004 hi def link cssMediaType Special
    6              0.000005 hi def link cssMediaComma Normal
    6              0.000005 hi def link cssAtRuleLogical Statement
    6              0.000004 hi def link cssMediaProp cssProp
    6              0.000005 hi def link cssMediaAttr cssAttr
    6              0.000004 hi def link cssPagePseudo PreProc
    6              0.000005 hi def link cssPageMarginProp cssAtKeyword
    6              0.000005 hi def link cssPageProp cssProp
    6              0.000005 hi def link cssKeyFrameProp Constant
    6              0.000005 hi def link cssFontDescriptor Special
    6              0.000005 hi def link cssFontDescriptorProp cssProp
    6              0.000005 hi def link cssFontDescriptorAttr cssAttr
    6              0.000005 hi def link cssUnicodeRange Constant
    6              0.000004 hi def link cssClassName Function
    6              0.000004 hi def link cssClassNameDot Function
    6              0.000005 hi def link cssProp StorageClass
    6              0.000004 hi def link cssAttr Constant
    6              0.000005 hi def link cssUnitDecorators Number
    6              0.000005 hi def link cssNoise Noise
                            
    6              0.000015 let b:current_syntax = "css"
                            
    6              0.000009 if main_syntax == 'css'
                              unlet main_syntax
    6              0.000003 endif
                            
    6   0.000067   0.000049 let &cpo = s:cpo_save
    6              0.000008 unlet s:cpo_save
                            
                            " vim: ts=8

FUNCTION  <SNR>38_is_cr_expansion()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:110
Called 4 times
Total time:   0.000642
 Self time:   0.000420

count  total (s)   self (s)
    4              0.000034   let nchar = getline(line('.')-1)[-1:]
    4              0.000065   let schar = matchstr(getline(line('.')+1), '^\s*\zs\S')
    4              0.000037   let isEmpty = a:0 ? getline('.') =~ '^\s*$' : empty(getline('.'))
    4   0.000243   0.000124   if index(s:get('left_delims'), nchar) > -1 && index(s:get('left_delims'), nchar)    == index(s:get('right_delims'), schar) && isEmpty
                                return 1
    4   0.000227   0.000124   elseif index(s:get('quotes_list'), nchar) > -1 && index(s:get('quotes_list'), nchar)    == index(s:get('quotes_list'), schar) && isEmpty
                                return 1
    4              0.000005   else
    4              0.000006     return 0
                              endif

FUNCTION  matchup#loader#sidedict()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/loader.vim:760
Called 3 times
Total time:   0.000008
 Self time:   0.000008

count  total (s)   self (s)
    3              0.000006   return s:sidedict

FUNCTION  matchup#pos#equal()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/pos.vim:106
Called 167 times
Total time:   0.028395
 Self time:   0.011149

count  total (s)   self (s)
  167   0.016572   0.006953   let l:pos1 = s:parse_args(a:p1)
  167   0.010645   0.003018   let l:pos2 = s:parse_args(a:p2)
  167              0.000924   return l:pos1[:1] == l:pos2[:1]

FUNCTION  <SNR>76_get_matching_delims()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:686
Called 3 times
Total time:   0.020333
 Self time:   0.002465

count  total (s)   self (s)
                              " called as:   a:delim.get_matching(...)
                              " called from: matchup#delim#get_matching <- matchparen, motion
                              "   from: matchup#delim#get_surrounding <- matchparen, motion, text_obj
                            
    3   0.000047   0.000026   call matchup#perf#tic('get_matching_delims')
                            
                              " first, we figure out what the furthest match is, which will be
                              " either the open or close depending on the direction
    3              0.000052   let [l:re, l:flags, l:stopline] = a:down ? [self.regextwo.close, 'W', line('.') + a:stopline] : [self.regextwo.open, 'bW', max([line('.') - a:stopline, 1])]
                            
                              " these are the anchors for searchpairpos
                              " default to the backref '\1' patterns which will be filled in
    3              0.000009   let l:open = self.regexone.open
    3              0.000008   let l:close = self.regexone.close
                            
                              " if we're searching up, we anchor by the augment string, if it exists
    3              0.000011   if !a:down && !empty(self.augment)
                                let l:open = self.augment.str
    3              0.000002   endif
                            
                              " if going down from mid, we might not have all the groups yet
                              " TODO this could be improved via close augment strings
    3              0.000014   if a:down && self.side ==# 'mid' && !empty(self.augment.unresolved)
                                let l:open = self.regextwo.open
                                let l:close = self.regextwo.close
    3              0.000002   endif
                            
                              " turn \(\) into \%(\) for searchpairpos
    3   0.000104   0.000041   let l:open  = matchup#loader#remove_capture_groups(l:open)
    3   0.000084   0.000039   let l:close = matchup#loader#remove_capture_groups(l:close)
                            
                              " fill in necessary back-references
    3   0.000082   0.000038   let l:open = matchup#delim#fill_backrefs(l:open, self.groups, 0)
    3   0.000065   0.000034   let l:close = matchup#delim#fill_backrefs(l:close, self.groups, 0)
                            
    3   0.000043   0.000033   call matchup#delim#set_invert_skip(self.skip)
    3              0.000010   if empty(b:matchup_delim_skip)
                                let l:skip = 'matchup#delim#skip_default()'
    3              0.000003   else
    3              0.000008     let l:skip = 'matchup#delim#skip0()'
    3              0.000003   endif
                            
                              " disambiguate matches for languages like julia, matlab, ruby, etc
    3              0.000008   if !empty(self.midmap)
                                let l:midmap = self.midmap.elements
                                if self.side ==# 'mid'
                                  let l:idx = filter(range(len(l:midmap)), 'self.match =~# l:midmap[v:val][1]')
                                else
                                  let l:syn = synIDattr(synID(self.lnum, self.cnum, 0), 'name')
                                  let l:idx = filter(range(len(l:midmap)), 'l:syn =~# l:midmap[v:val][0]')
                                endif
                                if len(l:idx)
                                  let l:valid = l:midmap[l:idx[0]]
                                  let l:skip = printf('matchup#delim#skip1(%s, %s)', string(l:midmap[l:idx[0]]), string(l:skip))
                                else
                                  let l:skip = printf('matchup#delim#skip2(%s, %s)', string(self.midmap.strike), string(l:skip))
                                endif
    3              0.000002   endif
                            
    3   0.000113   0.000038   if matchup#perf#timeout_check() | return [['', 0, 0]] | endif
                            
                              " improves perceptual performance in insert mode
    3              0.000013   if mode() ==# 'i' || mode() ==# 'R'
                                if !g:matchup_matchparen_deferred && exists('*state') && state('s') ==# ''
                                  sleep 1m
                                endif
    3              0.000002   endif
                            
                              " use b:match_ignorecase
    3              0.000016   let l:ic = get(b:, 'match_ignorecase', 0) ? '\c' : '\C'
    3              0.000009   let l:open = l:ic . l:open
    3              0.000008   let l:close = l:ic . l:close
                            
                              " handle 'same' matches (TODO refactor to separate parser)
    3              0.000007   if l:open == l:close
                                let [l:lnum_corr, l:cnum_corr] = searchpos(l:open, 'n'.l:flags, l:stopline, matchup#perf#timeout()) " , l:skip)
    3              0.000002   else
    3   0.018771   0.001461     let [l:lnum_corr, l:cnum_corr] = searchpairpos(l:open, '', l:close, 'n'.l:flags, l:skip, l:stopline, matchup#perf#timeout())
    3              0.000002   endif
                            
    3   0.000131   0.000027   call matchup#perf#toc('get_matching_delims', 'initial_pair')
                            
                              " if nothing found, bail immediately
    3              0.000004   if l:lnum_corr == 0
                                return [['', 0, 0]]
    3              0.000001   endif
                            
                              " when highlighting, respect hlend
    3              0.000011   let l:extra_entry = self.regextwo.extra_list[a:down ? -1 : 0]
    3              0.000008   if self.highlighting && has_key(l:extra_entry, 'hlend')
                                let l:re = s:process_hlend(l:re, -1)
    3              0.000001   endif
                            
                              " get the corresponding match and (additional) groups
    3              0.000006   let l:has_zs = self.regextwo.extra_info.has_zs
    3   0.000051   0.000026   let l:re_anchored = l:ic . s:anchor_regex(l:re, l:cnum_corr, l:has_zs)
                            
    3              0.000027   let l:matches = matchlist(getline(l:lnum_corr), l:re_anchored)
    3              0.000008   let l:match_corr = l:matches[0]
                            
                              " store these in these groups
    3              0.000002   if a:down
    2              0.000004     let l:id = len(self.regextwo.mid_list) + 1
    2              0.000008     for [l:from, l:to] in items(get(self.regextwo.grp_renu, l:id, {}))
                                  if !has_key(self.groups, l:to) && !empty(l:matches[l:from])
                                    let self.groups[l:to] = l:matches[l:from]
                                  endif
    2              0.000001     endfor
    1              0.000001   else
    1              0.000004     for l:to in keys(self.regextwo.need_grp)
                                  if !has_key(self.groups, l:to) && !empty(l:matches[l:to])
                                    " TODO mark context
                                    let self.groups[l:to] = l:matches[l:to]
                                  endif
                                  " let self.groups[0] = l:matches[0]
    1              0.000001     endfor
    3              0.000001   endif
                            
    3   0.000107   0.000021   call matchup#perf#toc('get_matching_delims', 'get_matches')
                            
                              " fill in additional groups
    3   0.000085   0.000053   let l:mids = matchup#loader#remove_capture_groups(self.regexone.mid)
    3   0.000045   0.000021   let l:mids = matchup#delim#fill_backrefs(l:mids, self.groups, 1)
                            
                              " if there are no mids, we're done
    3              0.000006   if empty(l:mids) || g:matchup_delim_nomids
    3              0.000008     return [[l:match_corr, l:lnum_corr, l:cnum_corr]]
                              endif
                            
                              let l:re = l:mids
                            
                              " when highlighting, respect hlend
                              if get(self.regextwo.extra_info, 'mid_hlend') && self.highlighting
                                let l:re = s:process_hlend(l:re, -1)
                              endif
                            
                              " use b:match_ignorecase
                              let l:mid = l:ic . l:mids
                              let l:re = l:ic . l:re
                            
                              let l:list = []
                              while 1
                                if matchup#perf#timeout_check() | break | endif
                            
                                let [l:lnum, l:cnum] = searchpairpos(l:open, l:mids, l:close, l:flags, l:skip, l:lnum_corr, matchup#perf#timeout())
                                if l:lnum <= 0 | break | endif
                            
                                if a:down
                                  if l:lnum > l:lnum_corr || l:lnum == l:lnum_corr && l:cnum >= l:cnum_corr | break | endif
                                else
                                  if l:lnum < l:lnum_corr || l:lnum == l:lnum_corr && l:cnum <= l:cnum_corr | break | endif
                                endif
                            
                                let l:re_anchored = s:anchor_regex(l:re, l:cnum, l:has_zs)
                                let l:matches = matchlist(getline(l:lnum), l:re_anchored)
                                if empty(l:matches)
                                  " this should never happen
                                  continue
                                endif
                                let l:match = l:matches[0]
                            
                                call add(l:list, [l:match, l:lnum, l:cnum])
                              endwhile
                            
                              call add(l:list, [l:match_corr, l:lnum_corr, l:cnum_corr])
                            
                              if !a:down
                                call reverse(l:list)
                              endif
                            
                              return l:list

FUNCTION  1()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:135
Called 116 times
Total time:   0.020254
 Self time:   0.019427

count  total (s)   self (s)
  116              0.000597   if exists('w:matchup_match_id_list')
    9              0.000036     for l:id in w:matchup_match_id_list
                                  silent! call matchdelete(l:id)
    9              0.000015     endfor
    9              0.000030     unlet! w:matchup_match_id_list
  116              0.000120   endif
  116              0.000470   if exists('s:ns_id')
  116              0.002092     call nvim_buf_clear_namespace(0, s:ns_id, 0, -1)
  116              0.000144   endif
                            
  116              0.001256   if !has('nvim') && exists('t:match_popup') && (exists('*win_gettype') ? win_gettype() !=# 'popup' : &buftype !=# 'terminal')
                                call s:do_popup_autocmd_leave(t:match_popup)
                                call popup_hide(t:match_popup)
  116              0.000466   elseif has('nvim')
  116   0.009168   0.008340     call s:close_floating_win()
  116              0.000110   endif
                            
  116              0.000422   if exists('w:matchup_oldstatus')
                                let &l:statusline = w:matchup_oldstatus
                                unlet w:matchup_oldstatus
                                if exists('#User#MatchupOffscreenLeave')
                                  doautocmd <nomodeline> User MatchupOffscreenLeave
                                endif
  116              0.000104   endif
  116              0.000406   if exists('w:matchup_statusline')
                                unlet w:matchup_statusline
  116              0.000088   endif
                            
  116              0.000355   let w:matchup_need_clear = 0

FUNCTION  2()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:203
Called 134 times
Total time:   0.023313
 Self time:   0.003059

count  total (s)   self (s)
                              ""
                              " fade feature: remove highlights after a certain time
                              " {level}
                              "   =  0: prepare for possible loss of cursor support
                              "   =  1: new highlights are coming (cancel prior fade)
                              "   =  2: end of new highlights
                              " {pos}     [lnum, column] of current match
                              " {token}   in/out saves state between calls
                              "
                              " returns 1 if highlighting should be canceled
                            
  134              0.000678   if !g:matchup_matchparen_deferred || !exists('w:matchup_fade_timer')
  134              0.000312     if a:level <= 0
  116   0.021058   0.000804       call s:matchparen.clear()
  134              0.000117     endif
  134              0.000191     return 0
                              endif
                            
                              " jumping between windows
                              if a:level == 0 && win_getid() != get(s:, 'save_win')
                                call timer_pause(w:matchup_fade_timer, 1)
                                if exists('w:matchup_fade_pos')
                                  unlet w:matchup_fade_pos
                                endif
                                call s:matchparen.clear()
                                let s:save_win = win_getid()
                              endif
                            
                              " highlighting might be stale
                              if a:level == 0
                                if exists('w:matchup_fade_pos')
                                  let a:token.save_pos = w:matchup_fade_pos
                                  unlet w:matchup_fade_pos
                                endif
                                if !w:matchup_need_clear
                                  call timer_pause(w:matchup_fade_timer, 1)
                                endif
                                return 0
                              endif
                            
                              " prepare for new highlighting
                              if a:level == 1
                                " if token has no save_pos, cursor was previously off of a match
                                if !has_key(a:token, 'save_pos') || a:pos != a:token.save_pos
                                  " clear immediately
                                  call timer_pause(w:matchup_fade_timer, 1)
                                  call s:matchparen.clear()
                                  return 0
                                endif
                                let w:matchup_fade_pos = a:token.save_pos
                                return 1
                              endif
                            
                              " new highlighting is active
                              if a:level == 2 && a:pos != get(w:, 'matchup_fade_pos', [])
                                " init fade request
                                let w:matchup_fade_pos = a:pos
                                let w:matchup_fade_start = reltime()
                                call timer_pause(w:matchup_fade_timer, 0)
                              endif
                            
                              return 0

FUNCTION  3()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:303
Called 167 times
Total time:   0.633527
 Self time:   0.007292

count  total (s)   self (s)
  167              0.001672   if !get(b:, 'matchup_matchparen_deferred', g:matchup_matchparen_deferred)
  167   0.631568   0.005333     return s:matchparen.highlight()
                              endif
                            
                              if !exists('w:matchup_timer')
                                let s:show_delay = g:matchup_matchparen_deferred_show_delay
                                let s:hide_delay = g:matchup_matchparen_deferred_hide_delay
                                let w:matchup_timer = timer_start(s:show_delay, function('s:timer_callback', [ win_getid() ]), {'repeat': -1})
                                if !exists('w:matchup_need_clear')
                                  let w:matchup_need_clear = 0
                                endif
                                let s:fade_time = g:matchup_matchparen_deferred_fade_time
                                if s:fade_time > 0
                                  let w:matchup_fade_timer = timer_start(s:fade_time, function('s:fade_timer_callback', [ win_getid() ]), {'repeat': -1})
                                  call timer_pause(w:matchup_fade_timer, 1)
                                endif
                              endif
                            
                              " keep the timer alive with a heartbeat
                              let w:matchup_pulse_time = reltime()
                            
                              " if the timer is paused, some time has passed
                              if timer_info(w:matchup_timer)[0].paused
                                " unpause the timer
                                call timer_pause(w:matchup_timer, 0)
                            
                                " set the hi time to the pulse time
                                let w:matchup_hi_time = w:matchup_pulse_time
                              endif

FUNCTION  4()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:342
Called 187 times
Total time:   0.720710
 Self time:   0.075844

count  total (s)   self (s)
  187              0.001180   if !g:matchup_matchparen_enabled | return | endif
                            
  187              0.001567   if has('vim_starting') | return | endif
                            
  187              0.001101   if !g:matchup_matchparen_pumvisible && pumvisible() | return | endif
                            
                              " try to avoid interfering with some auto-complete plugins
  187              0.001349   if has('*state') && state('a') !=# '' | return | endif
                            
  187              0.001749   if !get(b:, 'matchup_matchparen_enabled', 1) && get(b:, 'matchup_matchparen_fallback', 1) && s:pi_paren_sid()
                                return call(s:pi_paren_fcn, [])
  187              0.000157   endif
                            
  187              0.000978   if !get(b:, 'matchup_matchparen_enabled', 1) | return | endif
                            
  187              0.001442   let l:force_update    = a:0 >= 1 ? a:1 : 0
  187              0.000736   let l:changing_insert = a:0 >= 2 ? a:2 : 0
  187              0.001099   let l:real_mode = l:changing_insert ? v:insertmode : mode()
                            
  187   0.049344   0.019897   if !l:force_update && exists('w:last_changedtick') && exists('w:last_cursor') && matchup#pos#equal(w:last_cursor, matchup#pos#get_cursor()) && w:last_changedtick == b:changedtick
   71              0.000072     return
  116              0.000119   endif
  116              0.000413   let w:last_changedtick = b:changedtick
  116   0.003387   0.002734   let w:last_cursor = matchup#pos#get_cursor()
                            
  116   0.005729   0.004667   call matchup#perf#tic('matchparen.highlight')
                            
                              " request eventual clearing of stale matches
  116              0.000395   let l:token = {}
  116   0.024609   0.001536   call self.fade(0, [], l:token)
                            
  116              0.000460   let l:modes = g:matchup_matchparen_nomode
  116              0.000577   if get(g:, 'matchup_matchparen_novisual', 0)  " deprecated option name
                                let l:modes .= "vV\<c-v>"
  116              0.000096   endif
  116              0.000625   if stridx(l:modes, l:real_mode) >= 0
                                return
  116              0.000087   endif
                            
                              " prevent problems in visual block mode at the end of a line
  116   0.003048   0.002526   if get(matchup#pos#get_cursor(), 4, 0) == 2147483647 && "v\<c-v>" =~? mode()
                                return
  116              0.000095   endif
                            
                              " don't get matches when inside a closed fold
  116              0.000573   if foldclosed(line('.')) > -1
                                return
  116              0.000084   endif
                            
                              " give up when cursor is far into a very long line
  116              0.000774   if &synmaxcol && col('.') > &synmaxcol
                                return
  116              0.000085   endif
                            
                              " in insert mode, cursor is treated as being one behind
  116              0.000489   let l:insertmode = l:real_mode ==# 'i'
                            
                              " start the timeout period
  116              0.001451   let l:timeout = l:insertmode ? get(b:, 'matchup_matchparen_insert_timeout',           g:matchup_matchparen_insert_timeout) : get(b:, 'matchup_matchparen_timeout',           g:matchup_matchparen_timeout)
  116   0.009894   0.008245   call matchup#perf#timeout_start(l:timeout)
                            
  116   0.563131   0.007958   let l:current = matchup#delim#get_current('all', 'both_all', { 'insertmode': l:insertmode,   'stopline': g:matchup_matchparen_stopline,   'highlighting': 1, })
  116   0.006501   0.001629   call matchup#perf#toc('matchparen.highlight', 'get_current')
                            
  116              0.000649   if get(b:, 'matchup_matchparen_deferred', g:matchup_matchparen_deferred)
                                let l:hsa = get(b:, 'matchup_matchparen_hi_surround_always', g:matchup_matchparen_hi_surround_always)
                                if l:hsa > 0 && empty(l:current) || l:hsa > 1
                                  call s:highlight_surrounding(l:insertmode, !empty(l:current))
                                endif
  116              0.000087   endif
                            
  116              0.000288   if empty(l:current)
  107              0.000138     return
    9              0.000006   endif
                            
    9   0.025226   0.000179   let l:corrlist = matchup#delim#get_matching(l:current, { 'stopline': g:matchup_matchparen_stopline,   'highlighting': 1, })
    9   0.000454   0.000103   call matchup#perf#toc('matchparen.highlight', 'get_matching')
    9              0.000035   if empty(l:corrlist) | return | endif
                            
    9              0.000017   if g:matchup_transmute_enabled
                                if !exists('w:matchup_matchparen_context')
                                  let w:matchup_matchparen_context = { 'normal': {   'current':   {},   'corrlist':  [],  }, 'prior': {}, 'counter': 0,}
                                endif
                            
                                let w:matchup_matchparen_context.counter += 1
                            
                                if !l:insertmode
                                  let w:matchup_matchparen_context.prior = copy(w:matchup_matchparen_context.normal)
                            
                                  let w:matchup_matchparen_context.normal.current = l:current
                                  let w:matchup_matchparen_context.normal.corrlist = l:corrlist
                                endif
                            
                                " if transmuted, highlight again (will reset timeout)
                                if matchup#transmute#tick(l:insertmode)
                                  " no force_update here because it would screw up prior
                                  return s:matchparen.highlight(0, l:changing_insert)
                                endif
    9              0.000005   endif
                            
    9              0.000071   if !has_key(l:current, 'match_index') || len(l:corrlist) <= (l:current.side ==# 'mid' ? 2 : 1) && !g:matchup_matchparen_singleton
                                " TODO this doesn't catch every case, needs refactor
                                " TODO singleton doesn't work right for mids
                                return
    9              0.000005   endif
                            
                              " prepare for (possibly) new highlights
    9              0.000030   let l:pos = [l:current.lnum, l:current.cnum]
    9   0.000193   0.000071   if self.fade(1, l:pos, l:token)
                                return
    9              0.000005   endif
                            
                              " store flag meaning highlighting is active
    9              0.000017   let w:matchup_need_clear = 1
                            
                              " disable off-screen when scrolling with j/k
    9              0.000111   let l:scrolling = get(g:matchup_matchparen_offscreen, 'scrolloff', 0) && winheight(0) > 2*&scrolloff && (line('.') == line('w$')-&scrolloff     && line('$') != line('w$')     || line('.') == line('w0')+&scrolloff)
                            
                              " show off-screen matches
    9              0.000036   let l:method = get(g:matchup_matchparen_offscreen, 'method', '')
    9              0.000066   if !empty(l:method) && l:method !=# 'none' && !l:current.skip && !l:scrolling && winheight(0) > 0
    9   0.000304   0.000099     call s:do_offscreen(l:current, l:method)
    9              0.000006   endif
                            
                              " add highlighting matches
    9   0.002334   0.000090   call s:add_matches(l:corrlist, l:current)
                            
                              " highlight the background between parentheses
    9              0.000022   if g:matchup_matchparen_hi_background >= 1
                                call s:highlight_background(l:corrlist)
    9              0.000005   endif
                            
                              " new highlights done, request fade away
    9   0.000195   0.000076   call self.fade(2, l:pos, l:token)
                            
    9   0.000395   0.000069   call matchup#perf#toc('matchparen.highlight', 'end')

FUNCTION  matchup#delim#set_invert_skip()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:923
Called 113 times
Total time:   0.000438
 Self time:   0.000438

count  total (s)   self (s)
  113              0.000350   let s:invert_skip = a:val

FUNCTION  matchup#delim#skip()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:873
Called 110 times
Total time:   0.048556
 Self time:   0.007715

count  total (s)   self (s)
  110              0.000312   if a:0 >= 2
  110              0.000690     let [l:lnum, l:cnum] = [a:1, a:2]
                              else
                                let [l:lnum, l:cnum] = matchup#pos#get_cursor()[1:2]
  110              0.000092   endif
                            
  110              0.000553   if empty(get(b:, 'matchup_delim_skip', ''))
                                return matchup#util#in_comment_or_string(l:lnum, l:cnum) ? !s:invert_skip : s:invert_skip
  110              0.000086   endif
                            
  110              0.000476   let s:eff_curpos = [l:lnum, l:cnum]
  110   0.044746   0.003905   execute 'return' (s:invert_skip ? '!(' : '(') b:matchup_delim_skip ')'

FUNCTION  matchup#ts_syntax#lang_skip()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_syntax.vim:21
Called 139 times
Total time:   0.007743
 Self time:   0.001761

count  total (s)   self (s)
  139   0.007636   0.001655   return s:forward('lang_skip', a:lnum, a:col)

FUNCTION  <SNR>76_effcol()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:934
Called 139 times
Total time:   0.000774
 Self time:   0.000774

count  total (s)   self (s)
  139              0.000700   return a:expr ==# '.' ? s:eff_curpos[1] : col(a:expr)

FUNCTION  matchup#delim#fill_backrefs()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:944
Called 9 times
Total time:   0.000098
 Self time:   0.000098

count  total (s)   self (s)
    9              0.000093   return substitute(a:re, g:matchup#re#backref, '\=s:get_backref(a:groups, submatch(1), a:warn)', 'g')
                                    " \ '\=get(a:groups, submatch(1), "")', 'g')

FUNCTION  matchup#loader#remove_capture_groups()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/loader.vim:701
Called 9 times
Total time:   0.000139
 Self time:   0.000139

count  total (s)   self (s)
    9              0.000023   let l:sub_grp = '\(\\\@<!\(\\\\\)*\)\@<=\\('
    9              0.000110   return substitute(a:re, l:sub_grp, '\\%(', 'g')

FUNCTION  matchup#delim#skip0()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:896
Called 29 times
Total time:   0.017297
 Self time:   0.001353

count  total (s)   self (s)
   29              0.000268   let s:eff_curpos = [line('.'), col('.')]
   29   0.016995   0.001051   execute 'return' (s:invert_skip ? '!(' : '(') b:matchup_delim_skip ')'

FUNCTION  <SNR>57_wordish()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:1188
Called 18 times
Total time:   0.000211
 Self time:   0.000211

count  total (s)   self (s)
   18              0.000201   return a:delim.match !~? '^[[:punct:]]\{1,3\}$'

FUNCTION  matchup#ts_engine#get_matching()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_engine.vim:61
Called 6 times
Total time:   0.001216
 Self time:   0.000222

count  total (s)   self (s)
    6   0.000091   0.000049   call matchup#perf#tic('ts_engine.get_matching')
                            
    6   0.000761   0.000080   let l:list = s:forward('get_matching', self, a:down, bufnr('%'))
                            
    6   0.000341   0.000070   call matchup#perf#toc('ts_engine.get_matching', 'done')
                            
    6              0.000009   return l:list

FUNCTION  delimitMate#WithinEmptyPair()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:287
Called 4 times
Total time:   0.000648
 Self time:   0.000217

count  total (s)   self (s)
                              " if cursor is at column 1 return 0
    4              0.000018   if col('.') == 1
                                return 0
    4              0.000005   endif
                              " get char before the cursor.
    4   0.000286   0.000054   let char1 = s:get_char(-1)
                              " get char under the cursor.
    4   0.000178   0.000052   let char2 = s:get_char(0)
    4   0.000137   0.000066   return delimitMate#IsEmptyPair( char1.char2 )

FUNCTION  <SNR>57_close_floating_win()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:875
Called 116 times
Total time:   0.000828
 Self time:   0.000828

count  total (s)   self (s)
  116              0.000488   if !exists('s:float_id')
  116              0.000178     return
                              endif
                              if win_id2win(s:float_id) > 0
                                call s:do_popup_autocmd_leave(s:float_id)
                                call nvim_win_close(s:float_id, 0)
                              endif
                              let s:float_id = 0

FUNCTION  matchup#perf#timeout()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/perf.vim:79
Called 119 times
Total time:   0.000549
 Self time:   0.000549

count  total (s)   self (s)
  119              0.000453   return float2nr(s:timeout)

FUNCTION  matchup#ts_syntax#skip_expr()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_syntax.vim:25
Called 139 times
Total time:   0.055015
 Self time:   0.006897

count  total (s)   self (s)
  139   0.009511   0.001768   if matchup#ts_syntax#lang_skip(a:lnum, a:col)
                                return 1
  139              0.000138   endif
                            
  139   0.042789   0.002413   let l:syn = synIDattr(matchup#ts_syntax#synID( a:lnum, a:col, 1), 'name')
  139              0.002062   return l:syn =~? '\%(String\|Comment\)'

FUNCTION  <SNR>75_parse_args()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/pos.vim:124
Called 854 times
Total time:   0.035328
 Self time:   0.021948

count  total (s)   self (s)
                              "
                              " The arguments should be in one of the following forms (when unpacked):
                              "
                              "   [lnum, cnum]
                              "   [bufnum, lnum, cnum, ...]
                              "   {'lnum' : lnum, 'cnum' : cnum}
                              "
                            
  854              0.002756   if len(a:args) > 1
  390              0.002288     return s:parse_args([a:args])
  464              0.001290   elseif len(a:args) == 1
  464              0.002461     if type(a:args[0]) == type({})
    9              0.000079       return [get(a:args[0], 'lnum'), get(a:args[0], 'cnum')]
  455              0.000422     else
  455              0.001236       if len(a:args[0]) == 2
   56              0.000107         return a:args[0]
  399              0.000327       else
  399              0.001326         return a:args[0][1:]
                                  endif
                                endif
                              else
                                return a:args
                              endif

FUNCTION  matchup#perf#timeout_check()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/perf.vim:91
Called 6 times
Total time:   0.000149
 Self time:   0.000149

count  total (s)   self (s)
    6              0.000029   if !s:timeout_enabled | return 0 | endif
    6              0.000054   let l:elapsed = 1000.0 * s:Reltimefloat(reltime(s:timeout_pulse_time))
    6              0.000018   let s:timeout -= l:elapsed
    6              0.000023   let s:timeout_pulse_time = reltime()
    6              0.000016   return s:timeout <= 0.0

FUNCTION  GetLuaIndent()
    Defined: /usr/share/nvim/runtime/indent/lua.vim:26
Called 4 times
Total time:   0.000746
 Self time:   0.000746

count  total (s)   self (s)
                              " Find a non-blank line above the current line.
    4              0.000071   let prevlnum = prevnonblank(v:lnum - 1)
                            
                              " Hit the start of the file, use zero indent.
    4              0.000017   if prevlnum == 0
                                return 0
    4              0.000008   endif
                            
                              " Add a 'shiftwidth' after lines that start a block:
                              " 'function', 'if', 'for', 'while', 'repeat', 'else', 'elseif', '{'
    4              0.000023   let ind = indent(prevlnum)
    4              0.000021   let prevline = getline(prevlnum)
    4              0.000148   let midx = match(prevline, '^\s*\%(if\>\|for\>\|while\>\|repeat\>\|else\>\|elseif\>\|do\>\|then\>\)')
    4              0.000012   if midx == -1
    3              0.000035     let midx = match(prevline, '{\s*$')
    3              0.000009     if midx == -1
    3              0.000063       let midx = match(prevline, '\<function\>\s*\%(\k\|[.:]\)\{-}\s*(')
    3              0.000005     endif
    4              0.000004   endif
                            
    4              0.000009   if midx != -1
                                " Add 'shiftwidth' if what we found previously is not in a comment and
                                " an "end" or "until" is not present on the same line.
    1              0.000013     if synIDattr(synID(prevlnum, midx + 1, 1), "name") != "luaComment" && prevline !~ '\<end\>\|\<until\>'
    1              0.000002       let ind = ind + shiftwidth()
    1              0.000000     endif
    4              0.000004   endif
                            
                              " Subtract a 'shiftwidth' on end, else, elseif, until and '}'
                              " This is the part that requires 'indentkeys'.
    4              0.000079   let midx = match(getline(v:lnum), '^\s*\%(end\>\|else\>\|elseif\>\|until\>\|}\)')
    4              0.000055   if midx != -1 && synIDattr(synID(v:lnum, midx + 1, 1), "name") != "luaComment"
                                let ind = ind - shiftwidth()
    4              0.000004   endif
                            
    4              0.000011   return ind

FUNCTION  <SNR>76_get_delim_multi()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:43
Called 116 times
Total time:   0.550865
 Self time:   0.014654

count  total (s)   self (s)
  116              0.000408   let l:best = {}
  333              0.001805   for l:e in get(get(b:, 'matchup_active_engines', {}), a:opts.type, [])
  226   0.543734   0.007522     let l:res = call(s:engines[l:e].get_delim, [a:opts])
  226              0.000661     if empty(l:res)
  217              0.000369       continue
    9              0.000007     endif
    9              0.000025     if a:opts.direction ==# 'current'
    9              0.000014       return l:res
                                elseif a:opts.direction ==# 'next' && (empty(l:best) || matchup#pos#smaller(l:res, l:best))
                                  let l:best = l:res
                                elseif a:opts.direction ==# 'prev' && (empty(l:best) || matchup#pos#larger(l:res, l:best))
                                  let l:best = l:res
                                endif
  107              0.000191   endfor
  107              0.000208   return l:best

FUNCTION  matchup#ts_engine#get_delim()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_engine.vim:45
Called 116 times
Total time:   0.414569
 Self time:   0.014752

count  total (s)   self (s)
  116   0.010561   0.009543   call matchup#perf#tic('ts_engine.get_delim')
                            
  116   0.394171   0.001928   let l:res = s:forward('get_delim', bufnr('%'), a:opts)
  116              0.000479   if empty(l:res)
  110   0.008208   0.001938     call matchup#perf#toc('ts_engine.get_delim', 'fail')
  110              0.000320     return {}
    6              0.000007   endif
                            
    6              0.000042   let l:res.get_matching = function('matchup#ts_engine#get_matching')
                            
    6   0.000386   0.000100   call matchup#perf#toc('ts_engine.get_delim', 'done')
                            
    6              0.000010   return l:res

FUNCTION  <SNR>50_Tabops_onBufWinLeave()
    Defined: ~/.local/share/nvim/site/pack/packer/start/tabops/plugin/tabops.vim:266
Called 14 times
Total time:   0.000334
 Self time:   0.000334

count  total (s)   self (s)
   14              0.000165     if s:Tabops__reopening | return | endif
   14              0.000125     if s:Tabops__leavingBufferNumber == 0 || s:Tabops__leavingTabNumber == 0 | return | endif
                            
                                call insert(g:Tabops__closedTabHistory, {'b': s:Tabops__leavingBufferNumber, 't': s:Tabops__leavingTabNumber}, 0)
                            
                                let g:Tabops__closedTabHistory = g:Tabops__closedTabHistory[:4]

FUNCTION  <SNR>38_get()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:23
Called 22 times
Total time:   0.000785
 Self time:   0.000785

count  total (s)   self (s)
   22              0.000596   let options = deepcopy(eval('s:options.' . bufnr('%')))
   22              0.000070   if a:0
   22              0.000089     return options[a:1]
                              endif
                              return options

FUNCTION  <SNR>76_get_delim()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:325
Called 110 times
Total time:   0.121642
 Self time:   0.045807

count  total (s)   self (s)
                              " arguments: {{{2
                              "   opts = {
                              "     'direction'   : 'next' | 'prev' | 'current'
                              "     'type'        : 'delim_tex'
                              "                   | 'delim_all'
                              "                   | 'all'
                              "     'side'        : 'open'     | 'close'
                              "                   | 'both'     | 'mid'
                              "                   | 'both_all' | 'open_mid'
                              "   }
                              "
                              "  }}}2
                              " returns: {{{2
                              "   delim = {
                              "     lnum     : line number
                              "     cnum     : column number
                              "     type     : e.g., 'delim_tex'
                              "     match    : the actual text match
                              "     side     : 'open' | 'close' | 'mid'
                              "     class    : [ c1, c2 ] identifies the kind of match_words
                              "     skip     : skip state
                              "     get_matching: callback used to get matching delims
                              "     highlighting: whether the request was for highlighting
                              "
                              "     ... Parser dependent ...
                              "     augment  : how to match a corresponding open
                              "     groups   : dict of captured groups
                              "     regexone : the regex items, like \1foo
                              "     regextwo : the regex_capture items, like \(group\)foo
                              "     midmap   : ??
                              "   }
                              "
                              " }}}2
                            
  110              0.000638   if !get(b:, 'matchup_delim_enabled', 0)
                                return {}
  110              0.000103   endif
                            
  110              0.001125   if has('*state') && state('a') !=# '' | return {} | endif
                            
  110   0.002003   0.001192   call matchup#perf#tic('s:get_delim')
                            
  110   0.001984   0.001457   let l:save_pos = matchup#pos#get_cursor()
                            
  110   0.008672   0.001323   call matchup#loader#refresh_match_words()
                            
                              " this contains all the patterns for the specified type and side
  110              0.000756   let l:re = b:matchup_delim_re[a:opts.type][a:opts.side]
                            
  110              0.000472   let l:cursorpos = col('.')
                            
  110              0.000510   let l:insertmode = get(a:opts, 'insertmode', 0)
  110              0.000355   if l:cursorpos > 1 && l:insertmode
   50              0.000125     let l:cursorpos -= 1
  110              0.000113   endif
  110              0.001050   if l:cursorpos > strlen(getline('.')) && stridx("vV\<c-v>", mode()) > -1
    1              0.000006     let l:cursorpos -= 1
  110              0.000079   endif
                            
  110   0.001846   0.001418   call matchup#delim#set_invert_skip(0)
                            
  110              0.000325   if a:opts.direction ==# 'current'
  110              0.001379     let l:check_skip = get(a:opts, 'check_skip', g:matchup_delim_noskips >= 2 || g:matchup_delim_noskips >= 1     && getline(line('.'))[l:cursorpos-1] =~? '[^[:punct:]]')
  110   0.050056   0.001499     if l:check_skip && matchup#delim#skip(line('.'), l:cursorpos)
                                  return {}
  110              0.000127     endif
                              else
                                " check skip if cursor is not currently in skip
                                let l:check_skip = get(a:opts, 'check_skip', !matchup#delim#skip(line('.'), l:cursorpos) || g:matchup_delim_noskips >= 2)
  110              0.000090   endif
                            
  110              0.000435   let a:opts.cursorpos = l:cursorpos
                            
                              " for current, we want to find matches that end after the cursor
                              " note: we expect this to give false-positives with \ze
  110              0.000357   if a:opts.direction ==# 'current'
  110              0.000741     let l:re .= '\%>'.(l:cursorpos).'c'
                              "  let l:re = '\%<'.(l:cursorpos+1).'c' . l:re
  110              0.000096   endif
                            
                              " allow overlapping delimiters
                              " without this, the > in <tag> would not be found
  110              0.000680   if b:matchup_delim_re[a:opts.type]._engine_info.has_zs[a:opts.side]
                                let l:save_cpo = &cpo
                                noautocmd set cpo-=c
  110              0.000122   else
                                " faster than changing cpo but doesn't work right with \zs
  110              0.000300     let l:re .= '\&'
  110              0.000092   endif
                            
                              " move cursor one left for searchpos if necessary
  110              0.000369   let l:need_restore_cursor = 0
  110              0.000182   if l:insertmode
   56   0.003977   0.000874     call matchup#pos#set_cursor(line('.'), col('.')-1)
   56              0.000132     let l:need_restore_cursor = 1
  110              0.000089   endif
                            
                              " stopline may depend on the current action
  110              0.000619   let l:stopline = get(a:opts, 'stopline', s:stopline)
                            
                              " in the first pass, we get matching line and column numbers
                              " this is intended to be as fast as possible, with no capture groups
                              " we look for a match on this line (if direction == current)
                              " or forwards or backwards (if direction == next or prev)
                              " for current, we actually search leftwards from the cursor
  110              0.000223   while 1
  110   0.001882   0.001380     let l:to = matchup#perf#timeout()
  110              0.005514     let [l:lnum, l:cnum] = a:opts.direction ==# 'next' ? searchpos(l:re, 'cnW', line('.') + l:stopline, l:to) : a:opts.direction ==# 'prev'   ? searchpos(l:re, 'bcnW',               max([line('.') - l:stopline, 1]), l:to)   : searchpos(l:re, 'bcnW', line('.'), l:to)
  110              0.000610     if l:lnum == 0 | break | endif
                            
                                " note: the skip here should not be needed
                                " in 'current' mode, but be explicit
    3              0.000052     if a:opts.direction !=# 'current' && (l:check_skip || g:matchup_delim_noskips == 1     && getline(l:lnum)[l:cnum-1] =~? '[^[:punct:]]') && matchup#delim#skip(l:lnum, l:cnum) && (a:opts.direction ==# 'prev' ? (l:lnum > 1 || l:cnum > 1)     : (l:lnum < line('$') || l:cnum < len(getline('$'))))
                            
                                  " invalid match, move cursor and keep looking
                                  call matchup#pos#set_cursor(a:opts.direction ==# 'next' ? matchup#pos#next(l:lnum, l:cnum) : matchup#pos#prev(l:lnum, l:cnum))
                                  let l:need_restore_cursor = 1
                                  continue
    3              0.000002     endif
                            
    3              0.000003     break
  110              0.000241   endwhile
                            
                              " restore cpo if necessary
                              " note: this messes with cursor position
  110              0.000396   if exists('l:save_cpo')
                                noautocmd let &cpo = l:save_cpo
                                let l:need_restore_cursor = 1
  110              0.000100   endif
                            
                              " restore cursor
  110              0.000208   if l:need_restore_cursor
   56   0.003096   0.000620     call matchup#pos#set_cursor(l:save_pos)
  110              0.000094   endif
                            
  110   0.006822   0.001391   call matchup#perf#toc('s:get_delim', 'first_pass')
                            
                              " nothing found, leave now
  110              0.000220   if l:lnum == 0
  107   0.005463   0.001152     call matchup#perf#toc('s:get_delim', 'nothing_found')
  107              0.000238     return {}
    3              0.000002   endif
                            
    3   0.000104   0.000030   if matchup#perf#timeout_check()
                                return {}
    3              0.000002   endif
                            
    3              0.000007   let l:skip_state = 0
    3              0.000010   if !l:check_skip && (!&synmaxcol || l:cnum <= &synmaxcol)
                                " XXX: workaround an apparent obscure vim bug where the
                                " reported syntax id is incorrect on the first synID() call
                                call matchup#delim#skip(l:lnum, l:cnum)
                                if matchup#perf#timeout_check()
                                  return {}
                                endif
                            
                                let l:skip_state = matchup#delim#skip(l:lnum, l:cnum)
    3              0.000002   endif
                            
                              " now we get more data about the match in this position
                              " there may be capture groups which need to be stored
                            
                              " result stub, to be filled by the parser when there is a match
    3              0.000036   let l:result = { 'lnum'     : l:lnum, 'cnum'     : l:cnum, 'type'     : '', 'match'    : '', 'side'     : '', 'class'    : [], 'skip'     : l:skip_state,}
                            
    3              0.000024   for l:P in s:engines.classic.parsers[a:opts.type]
    3   0.002179   0.000055     let l:parser_result = l:P(l:lnum, l:cnum, a:opts)
    3              0.000009     if !empty(l:parser_result)
    3              0.000038       let l:result = extend(l:parser_result, l:result, 'keep')
    3              0.000004       break
                                endif
    3              0.000005   endfor
                            
    3   0.000200   0.000056   call matchup#perf#toc('s:get_delim', 'got_results')
                            
    3              0.000014   return empty(l:result.type) ? {} : l:result

FUNCTION  repeat#set()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-repeat/autoload/repeat.vim:62
Called 4 times
Total time:   0.001289
 Self time:   0.001289

count  total (s)   self (s)
    4              0.000062     let g:repeat_sequence = a:sequence
    4              0.000035     let g:repeat_count = a:0 ? a:1 : v:count
    4              0.000022     let g:repeat_tick = b:changedtick
    4              0.000013     augroup repeat_custom_motion
    4              0.001091         autocmd!
    4              0.000042         autocmd CursorMoved <buffer> let g:repeat_tick = b:changedtick | autocmd! repeat_custom_motion
    4              0.000006     augroup END

FUNCTION  matchup#pos#get_cursor()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/pos.vim:17
Called 518 times
Total time:   0.002793
 Self time:   0.002793

count  total (s)   self (s)
  518              0.002345     return getcurpos()

FUNCTION  <SNR>38_is_space_expansion()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:129
Called 4 times
Total time:   0.001079
 Self time:   0.000450

count  total (s)   self (s)
    4              0.000015   if col('.') > 2
    3   0.000175   0.000035     let pchar = s:get_char(-2)
    3   0.000120   0.000035     let nchar = s:get_char(1)
    3   0.000274   0.000077     let isSpaces = (s:get_char(-1)   == s:get_char(0) && s:get_char(-1) == " ")
                            
    3   0.000200   0.000101     if index(s:get('left_delims'), pchar) > -1 && index(s:get('left_delims'), pchar)   == index(s:get('right_delims'), nchar) && isSpaces
                                  return 1
    3   0.000209   0.000102     elseif index(s:get('quotes_list'), pchar) > -1 && index(s:get('quotes_list'), pchar)   == index(s:get('quotes_list'), nchar) && isSpaces
                                  return 1
    3              0.000004     endif
    4              0.000004   endif
    4              0.000007   return 0

FUNCTION  <SNR>57_do_offscreen()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:537
Called 9 times
Total time:   0.000205
 Self time:   0.000205

count  total (s)   self (s)
    9              0.000021   let l:offscreen = {}
                            
    9              0.000038   if !has_key(a:current, 'links') | return | endif
                            
                              " prefer to show close
    9              0.000029   if a:current.links.open.lnum < line('w0')
                                let l:offscreen = a:current.links.open
    9              0.000005   endif
    9              0.000025   if a:current.links.close.lnum > line('w$')
                                let l:offscreen = a:current.links.close
    9              0.000005   endif
                            
    9              0.000025   if empty(l:offscreen) | return | endif
                            
                              if a:method ==# 'status'
                                call s:do_offscreen_statusline(l:offscreen, 0)
                              elseif a:method ==# 'status_manual'
                                call s:do_offscreen_statusline(l:offscreen, 1)
                              elseif a:method ==# 'popup' && winheight(0) > 1
                                if has('nvim')
                                  call s:do_offscreen_popup_nvim(l:offscreen)
                                elseif exists('*popup_create')
                                  call s:ensure_match_popup()
                                  call s:do_offscreen_popup(l:offscreen)
                                endif
                              endif

FUNCTION  <SNR>73_forward()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_engine.vim:10
Called 122 times
Total time:   0.392924
 Self time:   0.392889

count  total (s)   self (s)
  122   0.392213   0.392178   let l:ret = luaeval( 'require"treesitter-matchup.internal".' . a:fn . '(unpack(_A))', a:000)
  122              0.000522   return l:ret

FUNCTION  luasnip#expand_or_jumpable()
    Defined: ~/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin/luasnip.vim:28
Called 1 time
Total time:   0.000257
 Self time:   0.000257

count  total (s)   self (s)
    1              0.000254 	return luaeval('require("luasnip").expand_or_jumpable()')

FUNCTION  <SNR>77_forward()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_syntax.vim:10
Called 278 times
Total time:   0.044498
 Self time:   0.044498

count  total (s)   self (s)
  278              0.043394   let l:ret = luaeval( 'require"treesitter-matchup.syntax".' . a:fn . '(unpack(_A))', a:000)
  278              0.000769   return l:ret

FUNCTION  <SNR>76_anchor_regex()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:964
Called 10 times
Total time:   0.000141
 Self time:   0.000141

count  total (s)   self (s)
   10              0.000017   if a:method
                                " trick to re-match at a particular column
                                " handles the case where pattern contains \ze, \zs, and assertions
                                " but doesn't work with overlapping matches and is possibly slower
                                return '\%<'.(a:cnum+1).'c\%('.a:re.'\)\%>'.(a:cnum).'c'
   10              0.000009   else
                                " fails to match with \zs
   10              0.000044     return '\%'.(a:cnum).'c\%('.a:re.'\)'
                              endif

FUNCTION  <SNR>38_is_excluded_ft()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:187
Called 4 times
Total time:   0.000060
 Self time:   0.000060

count  total (s)   self (s)
    4              0.000036   if !exists("g:delimitMate_excluded_ft")
    4              0.000015     return 0
                              endif
                              return index(split(g:delimitMate_excluded_ft, ','), a:ft, 0, 1) >= 0

FUNCTION  matchup#perf#timeout_start()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/perf.vim:84
Called 116 times
Total time:   0.001650
 Self time:   0.001650

count  total (s)   self (s)
  116              0.000386   let s:timeout = a:timeout
  116              0.000523   let s:timeout_enabled = (a:timeout == 0) ? 0 : 1
  116              0.000593   let s:timeout_pulse_time = reltime()

FUNCTION  delimitMate#BS()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:517
Called 4 times
Total time:   0.003816
 Self time:   0.000519

count  total (s)   self (s)
    4   0.001016   0.000088   if s:is_forbidden("")
                                let extra = ''
    4              0.000120   elseif &bs !~ 'start\|2'
                                let extra = ''
    4   0.000714   0.000066   elseif delimitMate#WithinEmptyPair()
                                let extra = "\<Del>"
    4   0.001139   0.000060   elseif s:is_space_expansion()
                                let extra = "\<Del>"
    4   0.000703   0.000062   elseif s:is_cr_expansion()
                                let extra = repeat("\<Del>", len(matchstr(getline(line('.') + 1), '^\s*\S')))
    4              0.000004   else
    4              0.000010     let extra = ''
    4              0.000005   endif
    4              0.000020   return "\<BS>" . extra

FUNCTION  matchup#pos#set_cursor()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/pos.vim:10
Called 130 times
Total time:   0.006318
 Self time:   0.001615

count  total (s)   self (s)
  130   0.006215   0.001513   call cursor(s:parse_args(a:000))

FUNCTION  matchup#ts_syntax#synID()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/ts_syntax.vim:17
Called 139 times
Total time:   0.040375
 Self time:   0.001859

count  total (s)   self (s)
  139   0.040277   0.001761   return s:forward('synID', a:lnum, a:col, a:trans)

FUNCTION  <SNR>38_get_char()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:96
Called 20 times
Total time:   0.000781
 Self time:   0.000781

count  total (s)   self (s)
   20              0.000085   let idx = col('.') - 1
   20              0.000079   if !a:0 || (a:0 && a:1 >= 0)
                                " Get char from cursor.
   10              0.000046     let line = getline('.')[idx :]
   10              0.000032     let pos = a:0 ? a:1 : 0
   10              0.000113     return matchstr(line, '^'.repeat('.', pos).'\zs.')
   10              0.000011   endif
                              " Get char behind cursor.
   10              0.000061   let line = getline('.')[: idx - 1]
   10              0.000037   let pos = 0 - (1 + a:1)
   10              0.000150   return matchstr(line, '.\ze'.repeat('.', pos).'$')

FUNCTION  <SNR>38_is_forbidden()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:194
Called 4 times
Total time:   0.000929
 Self time:   0.000384

count  total (s)   self (s)
    4   0.000122   0.000062   if s:is_excluded_ft(&filetype)
                                return 1
    4              0.000008   endif
    4   0.000296   0.000098   if !s:get('excluded_regions_enabled')
                                return 0
    4              0.000005   endif
    4   0.000204   0.000076   let region = s:get_syn_name()
    4   0.000263   0.000104   return index(s:get('excluded_regions_list'), region) >= 0

FUNCTION  <SNR>57_add_matches()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/matchparen.vim:1123
Called 9 times
Total time:   0.002244
 Self time:   0.002033

count  total (s)   self (s)
    9              0.000031   if !exists('w:matchup_match_id_list')
    9              0.000023     let w:matchup_match_id_list = []
    9              0.000006   endif
                            
                              " if MatchwordCur is undefined and MatchWord links to MatchParen
                              " (as default), behave like MatchWordCur is the same as MatchParenCur
                              " otherwise, MatchWordCur is the same as MatchWord
    9              0.000011   if a:0
    9              0.000098     let l:mwc = hlexists('MatchWordCur') ? 'MatchWordCur' : (synIDtrans(hlID('MatchWord')) == hlID('MatchParen')     ? 'MatchParenCur' : 'MatchWord')
    9              0.000006   endif
                            
   27              0.000049   for l:corr in a:corrlist
   18              0.000053     if a:0 && l:corr.match_index == a:1.match_index
    9   0.000174   0.000087       let l:group = s:wordish(l:corr) ? l:mwc : 'MatchParenCur'
    9              0.000006     else
    9   0.000211   0.000087       let l:group = s:wordish(l:corr) ? 'MatchWord' : 'MatchParen'
   18              0.000013     endif
                            
   18              0.000046     if exists('s:ns_id')
   18              0.000136       if strlen(l:corr.match) == 0 && matchup#loader#_treesitter_may_be_supported() && !matchup#ts_engine#get_option(   bufnr('%'), 'disable_virtual_text')
                                    if hlexists('MatchupVirtualText')
                                      let l:group = 'MatchupVirtualText'
                                    endif
                                    call nvim_buf_set_extmark(0, s:ns_id, l:corr.lnum - 1, l:corr.cnum - 1, {   'virt_text': [[' ' . g:matchup_matchparen_end_sign . ' '                  . a:corrlist[0].match, l:group]],   'virt_text_pos': 'overlay'})
   18              0.000012       else
   18              0.000215         call nvim_buf_add_highlight(0, s:ns_id, l:group, l:corr.lnum - 1, l:corr.cnum - 1, l:corr.cnum - 1 + strlen(l:corr.match))
   18              0.000013       end
                                elseif exists('*matchaddpos')
                                  call add(w:matchup_match_id_list, matchaddpos(l:group, [[l:corr.lnum, l:corr.cnum, strlen(l:corr.match)]], 0))
                                else
                                  call add(w:matchup_match_id_list, matchadd(l:group, '\%'.(l:corr.lnum).'l\%'.(l:corr.cnum).'c' . '.\+\%<'.(l:corr.cnum+strlen(l:corr.match)+1).'c', 0))
   18              0.000014     endif
   27              0.000033   endfor

FUNCTION  matchup#delim#get_current()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:28
Called 116 times
Total time:   0.555173
 Self time:   0.004308

count  total (s)   self (s)
  116   0.555048   0.004183   return s:get_delim_multi(extend({ 'direction' : 'current', 'type' : a:type, 'side' : a:side,}, get(a:, '1', {})))

FUNCTION  matchup#loader#refresh_match_words()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/loader.vim:101
Called 110 times
Total time:   0.007349
 Self time:   0.007349

count  total (s)   self (s)
  110              0.001081   if get(b:, 'match_words', ':') !~# ':'
                                call matchup#perf#tic('refresh')
                            
                                " protect the cursor from the match_words function
                                let l:save_pos = matchup#pos#get_cursor()
                                let l:match_words = ''
                                execute 'let l:match_words =' b:match_words
                                if l:save_pos != matchup#pos#get_cursor()
                                  call matchup#pos#set_cursor(l:save_pos)
                                endif
                            
                                call matchup#perf#toc('refresh', 'function')
                            
                                if has_key(s:match_word_cache, l:match_words)
                                  let b:matchup_delim_lists = s:match_word_cache[l:match_words].delim_lists
                                  let b:matchup_delim_re = s:match_word_cache[l:match_words].delim_regexes
                                  call matchup#perf#toc('refresh', 'cache_hit')
                                else
                                  " re-parse match words
                                  let b:matchup_delim_lists = s:init_delim_lists(0, 0)
                                  let b:matchup_delim_re = s:init_delim_regexes()
                                  let s:match_word_cache[l:match_words] = { 'delim_lists'  : b:matchup_delim_lists, 'delim_regexes': b:matchup_delim_re,}
                                  call matchup#perf#toc('refresh', 'parse')
                                endif
  110              0.000102   endif

FUNCTION  <SNR>76_parser_delim_new()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:532
Called 3 times
Total time:   0.002124
 Self time:   0.002000

count  total (s)   self (s)
    3              0.000010   let l:cursorpos = a:opts.cursorpos
    3              0.000006   let l:found = 0
                            
    3   0.000048   0.000040   let l:sides = matchup#loader#sidedict()[a:opts.side]
    3              0.000013   let l:rebrs = b:matchup_delim_lists[a:opts.type].regex_capture
                            
                              " use b:match_ignorecase
    3              0.000017   let l:ic = get(b:, 'match_ignorecase', 0) ? '\c' : '\C'
                            
                              " loop through all (index, side) pairs,
    3              0.000010   let l:ns = len(l:sides)
    3              0.000005   let l:found = 0
   10              0.000031   for l:i in range(len(l:rebrs)*l:ns)
   10              0.000039     let l:side = l:sides[ l:i % l:ns ]
                            
   10              0.000023     if l:side ==# 'mid'
    3              0.000012       let l:res = l:rebrs[l:i / l:ns].mid_list
    6              0.000011       if empty(l:res) | continue | end
    7              0.000007     else
    7              0.000042       let l:res = [ l:rebrs[l:i / l:ns][l:side] ]
   11              0.000034       if empty(l:res[0]) | continue | end
    7              0.000007     endif
                            
                                " if pattern may contain \zs, extra processing is required
    7              0.000029     let l:extra_info = l:rebrs[l:i / l:ns].extra_info
    7              0.000037     let l:has_zs = get(l:extra_info, 'has_zs', 0)
                            
    7              0.000014     let l:mid_id = 0
   11              0.000027     for l:re in l:res
    7              0.000018       let l:mid_id += 1
                            
                                  " check whether hlend needs to be handled
    7              0.000041       let l:id = l:side ==# 'mid' ? l:mid_id : l:side ==# 'open' ? 0 : -1
    7              0.000038       let l:extra_entry = l:rebrs[l:i / l:ns].extra_list[l:id]
    7              0.000034       let l:has_hlend = has_key(l:extra_entry, 'hlend')
                            
    7              0.000027       if l:has_hlend && get(a:opts, 'highlighting', 0)
                                    let l:re = s:process_hlend(l:re, l:cursorpos)
    7              0.000007       endif
                            
                                  " prepend the column number and append the cursor column
                                  " to anchor the match; we don't use {start} for matchlist
                                  " because there may be zero-width look behinds
    7   0.000224   0.000108       let l:re_anchored = l:ic . s:anchor_regex(l:re, a:cnum, l:has_zs)
                            
                                  " for current we want the first match which the cursor is inside
    7              0.000019       if a:opts.direction ==# 'current'
    7              0.000035         let l:re_anchored .= '\%>'.(l:cursorpos).'c'
    7              0.000007       endif
                            
    7              0.000102       let l:matches = matchlist(getline(a:lnum), l:re_anchored)
   11              0.000030       if empty(l:matches) | continue | endif
                            
                                  " reject matches which the cursor is outside of
                                  " this matters only for \ze
    3              0.000025       if !l:has_hlend && a:opts.direction ==# 'current' && a:cnum + strlen(l:matches[0]) <= l:cursorpos
                                    continue
    3              0.000002       endif
                            
                                  " if pattern contains \zs we need to re-check the starting column
    3              0.000014       if l:has_zs && match(getline(a:lnum), l:re_anchored) != a:cnum-1
                                    continue
    3              0.000002       endif
                            
                                  " handle syntax check- currently used for 'same' matches
    3              0.000008       if has_key(l:extra_entry, 'syn')
                                    let [l:pat; l:args] = split(l:extra_entry.syn, ';')
                                    let l:offs = str2nr(get(l:args, 0, 0))
                                    let l:invert = 0
                                    if l:pat[0] ==? '!'
                                      let l:invert = 1
                                      let l:pat = l:pat[1:]
                                    endif
                                    let l:res = matchup#util#in_synstack( l:pat, a:lnum, a:cnum + l:offs)
                                    if l:invert && l:res || !l:invert && !l:res
                                      continue
                                    endif
    3              0.000002       endif
                            
    3              0.000005       let l:found = 1
    3              0.000003       break
    7              0.000010     endfor
                            
   11              0.000023     if !l:found | continue | endif
                            
    3              0.000003     break
    3              0.000013   endfor
                            
    3              0.000005   if !l:found
                                return {}
    3              0.000002   endif
                            
    3              0.000010   let l:match = l:matches[0]
                            
    3              0.000012   let l:list = b:matchup_delim_lists[a:opts.type]
    3              0.000012   let l:thisregex  = l:list.regex[l:i / l:ns]
    3              0.000010   let l:thisrecap = l:list.regex_capture[l:i / l:ns]
                            
    3              0.000008   let l:augment = {}
                            
                              " these are the capture groups indexed by their 'open' id
    3              0.000006   let l:groups = {}
    3              0.000005   let l:id = 0
                            
    3              0.000006   if l:side ==# 'open'
    2              0.000004     for l:br in keys(l:thisrecap.need_grp)
                                  if empty(l:matches[l:br]) | continue | endif
                                  let l:groups[l:br] = l:matches[l:br]
    2              0.000001     endfor
    1              0.000002   else
    1              0.000014     let l:id = (l:side ==# 'close') ? len(l:thisrecap.mid_list)+1 : l:mid_id
                            
                                " groups here must be renumbered to match the open pattern
    1              0.000009     if has_key(l:thisrecap.grp_renu, l:id)
                                  for [l:br, l:to] in items(l:thisrecap.grp_renu[l:id])
                                    let l:groups[l:to] = l:matches[l:br]
                                  endfor
                                  " let l:groups[0] = l:matches[0]
    1              0.000002     endif
                            
                                " fill in augment pattern
                                " TODO all the augment patterns should match,
                                " but checking might be too slow
    1              0.000007     if has_key(l:thisrecap.aug_comp, l:id)
                                  let l:aug = l:thisrecap.aug_comp[l:id][0]
                                  let l:augment.str = matchup#delim#fill_backrefs( l:aug.str, l:groups, 0)
                                  let l:augment.unresolved = deepcopy(l:aug.outputmap)
    1              0.000002     endif
    3              0.000002   endif
                            
    3              0.000083   let l:result = { 'type'         : 'delim_tex', 'match'        : l:match, 'augment'      : l:augment, 'groups'       : l:groups, 'side'         : l:side, 'class'        : [(l:i / l:ns), l:id], 'get_matching' : s:engines.classic.get_matching, 'regexone'     : l:thisregex, 'regextwo'     : l:thisrecap, 'midmap'       : get(l:list, 'midmap', {}), 'highlighting' : get(a:opts, 'highlighting', 0),}
                            
    3              0.000006   return l:result

FUNCTION  <SNR>38_get_syn_name()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:179
Called 4 times
Total time:   0.000127
 Self time:   0.000127

count  total (s)   self (s)
    4              0.000024   let col = col('.')
    4              0.000018   if  col == col('$')
    4              0.000014     let col = col - 1
    4              0.000005   endif
    4              0.000059   return synIDattr(synIDtrans(synID(line('.'), col, 1)), 'name')

FUNCTION  matchup#perf#toc()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/perf.vim:19
Called 482 times
Total time:   0.022450
 Self time:   0.022450

count  total (s)   self (s)
  482              0.004353   let l:elapsed = s:Reltimefloat(reltime(s:time_start[a:context]))
                            
  482              0.002134   let l:key = a:context.'#'.a:state
  482              0.002029   if has_key(g:matchup#perf#times, l:key)
  480              0.001936     if l:elapsed > g:matchup#perf#times[l:key].maximum
   12              0.000068       let g:matchup#perf#times[l:key].maximum = l:elapsed
  480              0.000484     endif
  480              0.001990     let g:matchup#perf#times[l:key].last = l:elapsed
  480              0.003786     let g:matchup#perf#times[l:key].emavg = s:alpha*l:elapsed + (1-s:alpha)*g:matchup#perf#times[l:key].emavg
    2              0.000001   else
    2              0.000007     let g:matchup#perf#times[l:key] = { 'maximum' : l:elapsed, 'emavg'   : l:elapsed, 'last'    : l:elapsed,}
  482              0.000397   endif

FUNCTION  matchup#delim#get_matching()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:65
Called 9 times
Total time:   0.025047
 Self time:   0.002721

count  total (s)   self (s)
    9              0.000070   if empty(a:delim) || !has_key(a:delim, 'lnum') | return {} | endif
                            
    9              0.000063   let l:opts = a:0 && type(a:1) == type({}) ? a:1 : {}
    9              0.000043   let l:stopline = get(l:opts, 'stopline', s:stopline)
                            
                              " get all the matching position(s)
                              " *important*: in the case of mid, we search up before searching down
                              " this gives us a context object which we use for the other side
                              " TODO: what if no open is found here?
    9              0.000020   let l:matches = []
    9   0.000124   0.000086   let l:save_pos = matchup#pos#get_cursor()
   18              0.000110   for l:down in {'open': [1], 'close': [0], 'mid': [0,1]}[a:delim.side]
    9   0.000470   0.000092     call matchup#pos#set_cursor(a:delim)
                            
                                " second iteration: [] refers to the current match
    9              0.000025     if !empty(l:matches)
                                  call add(l:matches, [])
    9              0.000007     endif
                            
    9   0.021679   0.000130     let l:res = a:delim.get_matching(l:down, l:stopline)
    9              0.000019     if empty(l:res)
    9              0.000030     elseif l:res[0][1] > 0
    9              0.000033       call extend(l:matches, l:res)
                                elseif l:down
                                  let l:matches = []
    9              0.000006     endif
   18              0.000023   endfor
    9   0.000448   0.000087   call matchup#pos#set_cursor(l:save_pos)
                            
    9              0.000021   if a:delim.side ==# 'open'
    2              0.000004     call insert(l:matches, [])
    9              0.000006   endif
    9              0.000015   if a:delim.side ==# 'close'
    7              0.000025     call add(l:matches, [])
    9              0.000006   endif
                            
                              " create the match result(s)
    9              0.000022   let l:matching_list = []
   27              0.000067   for l:i in range(len(l:matches))
   18              0.000046     if empty(l:matches[l:i])
    9              0.000021       let a:delim.match_index = l:i
    9              0.000024       call add(l:matching_list, a:delim)
    9              0.000010       continue
    9              0.000006     end
                            
    9              0.000041     let [l:match, l:lnum, l:cnum] = l:matches[l:i]
                            
    9              0.000058     let l:matching = copy(a:delim)
    9              0.000036     let l:matching.class = copy(a:delim.class)
                            
    9              0.000017     let l:matching.lnum = l:lnum
    9              0.000014     let l:matching.cnum = l:cnum
    9              0.000017     let l:matching.match = l:match
    9              0.000045     let l:matching.side = l:i == 0 ? 'open' : l:i == len(l:matches)-1 ? 'close' : 'mid'
    9              0.000022     let l:matching.class[1] = '__mid__'
    9              0.000021     let l:matching.match_index = l:i
                            
    9              0.000028     call add(l:matching_list, l:matching)
   18              0.000027   endfor
                            
                              " set up links between matches
   27              0.000051   for l:i in range(len(l:matching_list))
   18              0.000042     let l:c = l:matching_list[l:i]
   18              0.000038     let l:c.links = {}
   18              0.000082     let l:c.links.next = l:matching_list[(l:i+1) % len(l:matching_list)]
   18              0.000047     let l:c.links.prev = l:matching_list[l:i-1]
   18              0.000035     let l:c.links.open = l:matching_list[0]
   18              0.000040     let l:c.links.close = l:matching_list[-1]
   27              0.000022   endfor
                            
                              " allow empty marker ending
                              " TODO: use a sentinel value instead of empty
    9              0.000043   if len(l:matching_list) >= 2 && empty(l:matching_list[-1].match)
                                if get(l:opts, 'highlighting', 0) && len(l:matching_list) <= 2
                                  return []
                                endif
                                let l:matching_list[0].links.prev = l:matching_list[-2]
                                let l:matching_list[-2].links.next = l:matching_list[0]
    9              0.000006   endif
                            
    9              0.000013   return l:matching_list

FUNCTION  matchup#perf#tic()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/perf.vim:15
Called 351 times
Total time:   0.002954
 Self time:   0.002954

count  total (s)   self (s)
  351              0.002661   let s:time_start[a:context] = reltime()

FUNCTION  <SNR>76_effline()
    Defined: ~/.local/share/nvim/site/pack/packer/start/vim-matchup/autoload/matchup/delim.vim:930
Called 139 times
Total time:   0.000996
 Self time:   0.000996

count  total (s)   self (s)
  139              0.000896   return a:expr ==# '.' ? s:eff_curpos[0] : line(a:expr)

FUNCTION  <SNR>41_try()
    Defined: ~/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim:7
Called 141 times
Total time:   0.163620
 Self time:   0.163620

count  total (s)   self (s)
  141              0.000383     try
  141              0.161691         execute a:cmd
                                catch /E12/
                                    return
  141              0.000308     endtry

FUNCTION  delimitMate#IsEmptyPair()
    Defined: ~/.local/share/nvim/site/pack/packer/start/delimitmate/autoload/delimitMate.vim:270
Called 4 times
Total time:   0.000072
 Self time:   0.000072

count  total (s)   self (s)
    4              0.000060   if strlen(substitute(a:str, ".", "x", "g")) != 2
    4              0.000008     return 0
                              endif
                              let idx = index(s:get('left_delims'), matchstr(a:str, '^.'))
                              if idx > -1 && s:get('right_delims')[idx] == matchstr(a:str, '.$')
                                return 1
                              endif
                              let idx = index(s:get('quotes_list'), matchstr(a:str, '^.'))
                              if idx > -1 && s:get('quotes_list')[idx] == matchstr(a:str, '.$')
                                return 1
                              endif
                              return 0

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
  187   0.720710   0.075844  4()
  167   0.633527   0.007292  3()
  116   0.555173   0.004308  matchup#delim#get_current()
  116   0.550865   0.014654  <SNR>76_get_delim_multi()
  116   0.414569   0.014752  matchup#ts_engine#get_delim()
  122   0.392924   0.392889  <SNR>73_forward()
  141   0.163620             <SNR>41_try()
  110   0.121642   0.045807  <SNR>76_get_delim()
  139   0.055015   0.006897  matchup#ts_syntax#skip_expr()
  110   0.048556   0.007715  matchup#delim#skip()
  278   0.044498             <SNR>77_forward()
  139   0.040375   0.001859  matchup#ts_syntax#synID()
  854   0.035328   0.021948  <SNR>75_parse_args()
  167   0.028395   0.011149  matchup#pos#equal()
    9   0.025047   0.002721  matchup#delim#get_matching()
  134   0.023313   0.003059  2()
  482   0.022450             matchup#perf#toc()
    3   0.020333   0.002465  <SNR>76_get_matching_delims()
  116   0.020254   0.019427  1()
   29   0.017297   0.001353  matchup#delim#skip0()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
  122   0.392924   0.392889  <SNR>73_forward()
  141              0.163620  <SNR>41_try()
  187   0.720710   0.075844  4()
  110   0.121642   0.045807  <SNR>76_get_delim()
  278              0.044498  <SNR>77_forward()
  482              0.022450  matchup#perf#toc()
  854   0.035328   0.021948  <SNR>75_parse_args()
  116   0.020254   0.019427  1()
  116   0.414569   0.014752  matchup#ts_engine#get_delim()
  116   0.550865   0.014654  <SNR>76_get_delim_multi()
  167   0.028395   0.011149  matchup#pos#equal()
  110   0.048556   0.007715  matchup#delim#skip()
  110              0.007349  matchup#loader#refresh_match_words()
  167   0.633527   0.007292  3()
  139   0.055015   0.006897  matchup#ts_syntax#skip_expr()
  116   0.555173   0.004308  matchup#delim#get_current()
  134   0.023313   0.003059  2()
  351              0.002954  matchup#perf#tic()
  518              0.002793  matchup#pos#get_cursor()
    9   0.025047   0.002721  matchup#delim#get_matching()

